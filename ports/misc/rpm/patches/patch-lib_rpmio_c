$MirOS$
--- lib/rpmio.c.orig	Thu Jul 20 04:09:52 2000
+++ lib/rpmio.c	Fri Jul 11 12:46:58 2008
@@ -222,7 +222,7 @@ static /*@observer@*/ const char * fdbg(
     }
 #endif
     if (fd->bytesRemain != -1) {
-	sprintf(be, " clen %d", fd->bytesRemain);
+	sprintf(be, " clen %zd", fd->bytesRemain);
 	be += strlen(be);
      }
     if (fd->wr_chunked) {
@@ -548,7 +548,7 @@ ssize_t fdWrite(void * cookie, const cha
     if (fd->bytesRemain == 0) return 0;	/* XXX simulate EOF */
     if (fd->wr_chunked) {
 	char chunksize[20];
-	sprintf(chunksize, "%x\r\n", count);
+	sprintf(chunksize, "%zx\r\n", count);
 #ifdef	DYING
 if (_ftp_debug)
 fprintf(stderr, "-> %s", chunksize);
@@ -586,7 +586,7 @@ static inline int fdSeek(void * cookie, 
     rc = lseek(fdFileno(fd), pos, whence);
     fdstat_exit(fd, FDSTAT_SEEK, rc);
 
-DBGIO(fd, (stderr, "==>\tfdSeek(%p,%ld,%d) rc %lx %s\n", cookie, pos, whence, (long)rc, fdbg(fd)));
+DBGIO(fd, (stderr, "==>\tfdSeek(%p,%llu,%d) rc %lx %s\n", cookie, (uint64_t)pos, whence, (long)rc, fdbg(fd)));
 
     return rc;
 }
@@ -2228,7 +2228,7 @@ static ssize_t gzdRead(void * cookie, /*
     gzfile = gzdFileno(fd);
     fdstat_enter(fd, FDSTAT_READ);
     rc = gzread(gzfile, buf, count);
-DBGIO(fd, (stderr, "==>\tgzdRead(%p,%p,%u) rc %lx %s\n", cookie, buf, count, (long)rc, fdbg(fd)));
+DBGIO(fd, (stderr, "==>\tgzdRead(%p,%p,%zu) rc %lx %s\n", cookie, buf, count, (long)rc, fdbg(fd)));
     if (rc < 0) {
 	int zerror = 0;
 	fd->errcookie = gzerror(gzfile, &zerror);
@@ -2251,7 +2251,7 @@ static ssize_t gzdWrite(void * cookie, c
     gzfile = gzdFileno(fd);
     fdstat_enter(fd, FDSTAT_WRITE);
     rc = gzwrite(gzfile, (void *)buf, count);
-DBGIO(fd, (stderr, "==>\tgzdWrite(%p,%p,%u) rc %lx %s\n", cookie, buf, count, (long)rc, fdbg(fd)));
+DBGIO(fd, (stderr, "==>\tgzdWrite(%p,%p,%zu) rc %lx %s\n", cookie, buf, count, (long)rc, fdbg(fd)));
     if (rc < 0) {
 	int zerror = 0;
 	fd->errcookie = gzerror(gzfile, &zerror);
@@ -2276,7 +2276,7 @@ static int gzdSeek(void * cookie, off_t 
     gzfile = gzdFileno(fd);
     fdstat_enter(fd, FDSTAT_SEEK);
     rc = gzseek(gzfile, pos, whence);
-DBGIO(fd, (stderr, "==>\tgzdSeek(%p,%ld,%d) rc %lx %s\n", cookie, pos, whence, (long)rc, fdbg(fd)));
+DBGIO(fd, (stderr, "==>\tgzdSeek(%p,%llu,%d) rc %lx %s\n", cookie, (uint64_t)pos, whence, (long)rc, fdbg(fd)));
     if (rc < 0) {
 	int zerror = 0;
 	fd->errcookie = gzerror(gzfile, &zerror);
@@ -3035,7 +3035,7 @@ int Rename (const char *oldpath, const c
     switch (newut) {
     case URL_IS_FTP:
 if (_rpmio_debug)
-fprintf(stderr, "*** rename old %*s new %*s\n", (oe - oldpath), oldpath, (ne - newpath), newpath);
+fprintf(stderr, "*** rename old %*s new %*s\n", (int)(oe - oldpath), oldpath, (int)(ne - newpath), newpath);
 	if (!(oldut == newut && oe && ne && (oe - oldpath) == (ne - newpath) &&
 	    !strncasecmp(oldpath, newpath, (oe - oldpath))))
 	    return -2;
@@ -3080,7 +3080,7 @@ int Link (const char *oldpath, const cha
     case URL_IS_FTP:		/* XXX WRONG WRONG WRONG */
     case URL_IS_PATH:
 if (_rpmio_debug)
-fprintf(stderr, "*** link old %*s new %*s\n", (oe - oldpath), oldpath, (ne - newpath), newpath);
+fprintf(stderr, "*** link old %*s new %*s\n", (int)(oe - oldpath), oldpath, (int)(ne - newpath), newpath);
 	if (!(oldut == newut && oe && ne && (oe - oldpath) == (ne - newpath) &&
 	    !strncasecmp(oldpath, newpath, (oe - oldpath))))
 	    return -2;
@@ -3835,6 +3835,7 @@ static int ftpGlob(const char * path, in
 		int errfunc(const char * epath, int eerno), glob_t * pglob)
 {
     int rc;
+    int newac;
 
     if (pglob == NULL)
 	return -2;
@@ -3843,7 +3844,8 @@ if (_rpmio_debug)
 fprintf(stderr, "*** ftpGlob(%s,0x%x,%p,%p) ftpNLST rc %d\n", path, flags, errfunc, pglob, rc);
     if (rc)
 	return rc;
-    rc = poptParseArgvString(ftpBuf, &pglob->gl_pathc, (const char ***)&pglob->gl_pathv);
+    rc = poptParseArgvString(ftpBuf, &newac, (const char ***)&pglob->gl_pathv);
+    pglob->gl_pathc = newac;
     pglob->gl_offs = -1;	/* XXX HACK HACK HACK */
     return rc;
 }

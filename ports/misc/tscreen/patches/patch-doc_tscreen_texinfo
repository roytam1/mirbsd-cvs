$MirOS: ports/misc/screen/patches/patch-doc_screen_texinfo,v 1.2 2007/02/11 01:33:45 tg Exp $
--- doc/tscreen.texinfo.orig	Fri Oct 24 14:22:15 2008
+++ doc/tscreen.texinfo	Thu Oct 15 17:55:56 2009
@@ -1,8 +1,8 @@
 \input texinfo @c -*-texinfo-*-
 @c %**start of header
 @c vi:set wm=5
-@setfilename screen.info
-@settitle Screen User's Manual
+@setfilename tscreen.info
+@settitle tScreen User's Manual
 @dircategory General Commands
 @finalout
 @setchapternewpage odd
@@ -10,7 +10,7 @@
 @set version 4.1.0
 
 @direntry
-* Screen: (screen).             Full-screen window manager.
+* tScreen: (tscreen).           Full-screen window manager.
 @end direntry
 
 @c For examples, use a literal escape in info.
@@ -22,7 +22,7 @@
 @end iftex
 
 @ifinfo
-This file documents the @code{Screen} virtual terminal manager.
+This file documents the @code{tScreen} virtual terminal manager.
 
 Copyright (c) 1993-2003 Free Software Foundation, Inc.
 
@@ -49,7 +49,7 @@ by the Foundation.
 @end ifinfo
 
 @titlepage
-@title Screen
+@title tScreen
 @subtitle The virtual terminal manager
 @subtitle for Version @value{version}
 @subtitle Aug 2003
@@ -76,16 +76,17 @@ by the Foundation.
 @node Top, Overview, (dir), (dir)
 
 @ifinfo
-@top Screen
-This file documents the @code{Screen} virtual terminal manager, version
-@value{version}.
+@top tScreen
+This file documents the @code{tScreen} virtual terminal manager, version
+@value{version}.  The MirOS specific changes are, however, documented in the
+manual page instead of here.  See tscreen(1) for details.
 @end ifinfo
 
 @menu
 * Overview::                    Preliminary information.
-* Getting Started::             An introduction to @code{screen}.
-* Invoking Screen::             Command line options for @code{screen}.
-* Customization::               The @file{.screenrc} file.
+* Getting Started::             An introduction to @code{tscreen}.
+* Invoking tScreen::            Command line options for @code{tscreen}.
+* Customization::               The @file{.tscreenrc} file.
 * Commands::                    List all of the commands.
 * New Window::                  Running a program in a new window.
 * Selecting::                   Selecting a window to display.
@@ -161,7 +162,7 @@ creates a new window running a shell and
 immediately, regardless of the state of the process running in the
 current window.  Similarly, you can create a new window with a custom
 command in it by first binding the command to a keystroke (in your
-@file{.screenrc} file or at the @kbd{C-a :} command line) and then using it
+@file{.tscreenrc} file or at the @kbd{C-a :} command line) and then using it
 just like the @kbd{C-a c} command.  In addition, new windows can be created by
 running a command like:
 
@@ -184,7 +185,7 @@ similar programs that use the utmp file 
 long as @code{screen} is active on your terminal, the terminal's own
 record is removed from the utmp file.  @xref{Login}.
 
-@node Getting Started, Invoking Screen, Overview, Top
+@node Getting Started, Invoking tScreen, Overview, Top
 @chapter Getting Started
 @cindex introduction
 
@@ -199,7 +200,7 @@ Binding}).  Typing these two characters 
 available @code{screen} commands and their bindings. Each keystroke is
 discussed in the section on keystrokes (@pxref{Default Key Bindings}).
 Another section (@pxref{Customization}) deals with the contents of your
-@file{.screenrc}.
+@file{.tscreenrc}.
 
 If your terminal is a ``true'' auto-margin terminal (it doesn't allow
 the last position on the screen to be updated without scrolling the
@@ -219,7 +220,7 @@ capability.
 @xref{Special Capabilities}, for more information about telling
 @code{screen} what kind of terminal you have.
 
-@node Invoking Screen, Customization, Getting Started, Top
+@node Invoking tScreen, Customization, Getting Started, Top
 @chapter Invoking @code{Screen}
 @cindex invoking
 @cindex options
@@ -241,7 +242,7 @@ resizable terminals (those with @samp{WS
 
 @item -c @var{file}
 Use @var{file} as the user's configuration file instead of the default
-of @file{$HOME/.screenrc}.
+of @file{$HOME/.tscreenrc}.
 
 @item -d [@var{pid.sessionname}]
 @itemx -D [@var{pid.sessionname}]
@@ -430,34 +431,34 @@ work if the session is password protecte
 
 @end table
 
-@node Customization, Commands, Invoking Screen, Top
+@node Customization, Commands, Invoking tScreen, Top
 @chapter Customizing @code{Screen}
 @cindex customization
 
 You can modify the default settings for @code{screen} to fit your tastes
-either through a personal @file{.screenrc} file which contains commands
+either through a personal @file{.tscreenrc} file which contains commands
 to be executed at startup, or on the fly using the @code{colon} command.
 
 @menu
-* Startup Files::               The @file{.screenrc} file.
+* Startup Files::               The @file{.tscreenrc} file.
 * Source::                      Read commands from a file.
 * Colon::                       Entering customization commands interactively.
 @end menu
 
 @node Startup Files, Source,  , Customization
-@section The @file{.screenrc} file
-@cindex .screenrc
-@cindex screenrc
+@section The @file{.tscreenrc} file
+@cindex .tscreenrc
+@cindex tscreenrc
 When @code{screen} is invoked, it executes initialization commands from
-the files @file{.screenrc} in the user's home directory and
-@file{/usr/local/etc/screenrc}.  These defaults can be overridden in the
+the files @file{.tscreenrc} in the user's home directory and
+@file{/usr/local/etc/tscreenrc}.  These defaults can be overridden in the
 following ways:
-For the global screenrc file @code{screen} searches for the environment
+For the global tscreenrc file @code{screen} searches for the environment
 variable @code{$SYSSCREENRC} (this override feature may be disabled at
-compile-time).  The user specific screenrc file is
+compile-time).  The user specific tscreenrc file is
 searched for in @code{$SCREENRC}, then
-@file{@code{$HOME}/.screenrc}.  The command line option @samp{-c}
-specifies which file to use (@pxref{Invoking Screen}.  Commands in these
+@file{@code{$HOME}/.tscreenrc}.  The command line option @samp{-c}
+specifies which file to use (@pxref{Invoking tScreen}.  Commands in these
 files are used to set options, bind commands to keys, and to
 automatically establish one or more windows at the beginning of
 your @code{screen} session.  Commands are listed one per line, with
@@ -472,7 +473,7 @@ protected with '\' if no variable substi
 single-quotes is also protected from variable substitution.
 
 Two configuration files are shipped as examples with your screen
-distribution: @file{etc/screenrc} and @file{etc/etcscreenrc}. They
+distribution: @file{etc/tscreenrc} and @file{etc/etctscreenrc}. They
 contain a number of useful examples for various commands.
 
 @node Source, Colon, Startup Files, Customization
@@ -488,7 +489,7 @@ screen's current directory.
 
 Note  that termcap/terminfo/termcapinfo commands only work
 at startup and reattach time, so they must be reached  via
-the default screenrc files to have an effect.
+the default tscreenrc files to have an effect.
 @end deffn
 
 @node Colon,  , Source, Customization
@@ -498,7 +499,7 @@ Customization can also be done online, w
 @kindex :
 @deffn Command colon
 (@kbd{C-a :})@*
-Allows you to enter @file{.screenrc} command lines.  Useful for
+Allows you to enter @file{.tscreenrc} command lines.  Useful for
 on-the-fly modification of key bindings, specific window creation and
 changing settings.  Note that the @code{set} keyword no longer exists,
 as of version 3.3.  Change default settings with commands starting with
@@ -511,11 +512,11 @@ as of version 3.3.  Change default setti
 @chapter Commands
 
 A command in @code{screen} can either be bound to a key, invoked from a
-screenrc file, or called from the @code{colon} prompt
+tscreenrc file, or called from the @code{colon} prompt
 (@pxref{Customization}).  As of version 3.3, all commands can be bound
 to keys, although some may be less useful than others.
 For a number of real life working examples of the most important
-commands see the files @file{etc/screenrc} and @file{etc/etcscreenrc}
+commands see the files @file{etc/tscreenrc} and @file{etc/etctscreenrc}
 of your screen distribution.
 
 In this manual, a command definition looks like this:
@@ -1188,13 +1189,13 @@ configuration parameter.
 Change the current directory of @code{screen} to the specified directory
 or, if called without an argument, to your home directory (the value of
 the environment variable @code{$HOME}).  All windows that are created by means
-of the @code{screen} command from within @file{.screenrc} or by means of
+of the @code{screen} command from within @file{.tscreenrc} or by means of
 @kbd{C-a : screen @dots{}} or @kbd{C-a c} use this as their default
 directory.  Without a @code{chdir} command, this would be the directory
 from which @code{screen} was invoked.  Hardcopy and log files are always
 written to the @emph{window's} default directory, @emph{not} the current
 directory of the process running in the window.  You can use this
-command multiple times in your @file{.screenrc} to start various windows
+command multiple times in your @file{.tscreenrc} to start various windows
 in different default directories, but the last @code{chdir} value will
 affect all the windows you create interactively.
 @end deffn
@@ -1222,10 +1223,10 @@ Screen has built in some functionality o
 @xref{Window Types}.
 @end deffn
 
-Thus, if your @file{.screenrc} contains the lines
+Thus, if your @file{.tscreenrc} contains the lines
 
 @example
-# example for .screenrc:
+# example for .tscreenrc:
 screen 1
 screen -fn -t foobar 2 -L telnet foobar
 @end example
@@ -1235,10 +1236,10 @@ screen -fn -t foobar 2 -L telnet foobar
 TELNET connection to the machine foobar (with no flow-control using the
 title @samp{foobar} in window #2) and will write a logfile @samp{screenlog.2}
 of the telnet session.  If you do not include any
-@code{screen} commands in your @file{.screenrc} file, then @code{screen}
+@code{screen} commands in your @file{.tscreenrc} file, then @code{screen}
 defaults to creating a single shell window, number zero.  When the
 initialization is completed, @code{screen} switches to the last window
-specified in your .screenrc file or, if none, it opens default window
+specified in your .tscreenrc file or, if none, it opens default window
 #0.
 
 @node Setenv, Shell, Screen Command, New Window
@@ -1521,14 +1522,14 @@ on by default.
 Detach the @code{screen} session (disconnect it from the terminal and
 put it into the background).  A detached @code{screen} can be resumed by
 invoking @code{screen} with the @code{-r} option (@pxref{Invoking
-Screen}).
+tScreen}).
 The @code{-h} option tells screen to immediately close the connection
 to the terminal (@samp{hangup}).
 @end deffn
 
 @deffn Command password [crypted_pw]
 (none)@*
-Present a crypted password in your @file{.screenrc} file and screen will
+Present a crypted password in your @file{.tscreenrc} file and screen will
 ask for it, whenever someone attempts to resume a detached session. This
 is useful, if you have privileged programs running under @code{screen}
 and you want to protect your session from reattach attempts by users
@@ -1936,7 +1937,7 @@ name when typed.  You can also bind pred
 * Title Command::                 The @code{title} command.
 * Dynamic Titles::                Make shell windows change titles dynamically.
 * Title Prompts::                 Set up your shell prompt for dynamic Titles.
-* Title Screenrc::                Set up Titles in your @file{.screenrc}.
+* Title Screenrc::                Set up Titles in your @file{.tscreenrc}.
 @end menu
 
 @node Title Command, Dynamic Titles,  , Naming Windows
@@ -2008,14 +2009,14 @@ PROMPT_COMMAND='echo -n -e "\033k\033\13
 (I used @samp{\134} to output a @samp{\} because of a bug in v1.04).
 
 @node Title Screenrc,  , Title Prompts, Naming Windows
-@subsection Setting up shell titles in your @file{.screenrc}
-Here are some .screenrc examples:
+@subsection Setting up shell titles in your @file{.tscreenrc}
+Here are some .tscreenrc examples:
 
 @example
 screen -t top 2 nice top
 @end example
 
-Adding this line to your .screenrc would start a niced version of the
+Adding this line to your .tscreenrc would start a niced version of the
 @code{top} command in window 2 named @samp{top} rather than @samp{nice}.
 
 @example
@@ -2039,7 +2040,7 @@ running, and revert to @samp{csh} upon c
 bind R screen -t '% |root:' su
 @end example
 
-Having this command in your .screenrc would bind the key sequence
+Having this command in your .tscreenrc would bind the key sequence
 @kbd{C-a R} to the @code{su} command and give it an auto-title name of
 @samp{root:}.  For this auto-title to work, the screen could look
 something like this:
@@ -2943,7 +2944,7 @@ screenful).
 @noindent
 @kbd{%} jumps to the specified percentage of the buffer.
 
-Note that Emacs-style movement keys can be specified by a .screenrc
+Note that Emacs-style movement keys can be specified by a .tscreenrc
 command. (@code{markkeys "h=^B:l=^F:$=^E"}) There is no simple method for
 a full emacs-style keymap, however, as this involves multi-character codes.
 
@@ -3426,8 +3427,8 @@ will be added later.
 (@kbd{C-a a})@*
 Send the command character (@kbd{C-a}) to the process in the current
 window.  The keystroke for this command is the second parameter to the
-@samp{-e} command line switch (@pxref{Invoking Screen}), or the
-@code{escape} .screenrc directive.
+@samp{-e} command line switch (@pxref{Invoking tScreen}), or the
+@code{escape} .tscreenrc directive.
 @end deffn
 
 @deffn Command command [-c @var{class}]
@@ -3596,7 +3597,7 @@ If you're running with flow-control enab
 interrupt key (usually C-c) does not interrupt the display until another
 6-8 lines have scrolled by, try running screen with the @samp{interrupt}
 option (add the @samp{interrupt} flag to the @code{flow} command in your
-.screenrc, or use the @samp{-i} command-line option).  This causes the
+.tscreenrc, or use the @samp{-i} command-line option).  This causes the
 output that @code{screen} has accumulated from the interrupted program
 to be flushed.  One disadvantage is that the virtual terminal's memory
 contains the non-flushed version of the output, which in rare cases can
@@ -3760,10 +3761,10 @@ scrolling regions. Note that this may pr
 session is reattached on a different terminal, as the value of @code{$TERMCAP}
 cannot be modified by parent processes.  You can force @code{screen} to
 include all capabilities in @code{$TERMCAP} with the @samp{-a}
-command-line option (@pxref{Invoking Screen}).
+command-line option (@pxref{Invoking tScreen}).
 
 The "alternate screen" capability is not enabled by default.
-Set the @code{altscreen} @file{.screenrc} command to enable it.
+Set the @code{altscreen} @file{.tscreenrc} command to enable it.
 
 @node Dump Termcap, Termcap Syntax, Window Termcap, Termcap
 @section Write out the window's termcap entry
@@ -3790,7 +3791,7 @@ Use this command to modify your terminal
 through all the hassles involved in creating a custom termcap entry.
 Plus, you can optionally customize the termcap generated for the
 windows.
-You have to place these commands in one of the screenrc startup files, as they
+You have to place these commands in one of the tscreenrc startup files, as they
 are meaningless once the terminal emulator is booted.
 
 If your system uses the terminfo database rather than termcap,
@@ -3886,7 +3887,7 @@ recognized by @code{screen} and are not 
 (@pxref{Top, , Termcap, termcap, The Termcap Manual}).
 You can place these capabilities in your termcap entries (in
 @file{/etc/termcap}) or use them with the commands @code{termcap},
-@code{terminfo} and @code{termcapinfo} in your @code{screenrc} files. It is
+@code{terminfo} and @code{termcapinfo} in your @code{tscreenrc} files. It is
 often not possible to place these capabilities in the terminfo database.
 @table @samp
 @item LP
@@ -4276,11 +4277,11 @@ default).
 @chapter Startup
 
 This section describes commands which are only useful in the
-@file{.screenrc} file, for use at startup.
+@file{.tscreenrc} file, for use at startup.
 
 @menu
 * echo::                        Display a message.
-* sleep::                       Pause execution of the @file{.screenrc}.
+* sleep::                       Pause execution of the @file{.tscreenrc}.
 * Startup Message::             Control display of the copyright notice.
 @end menu
 
@@ -4289,7 +4290,7 @@ This section describes commands which ar
 @deffn Command echo [@samp{-n}] message
 (none)@*
 The echo command may be used to annoy @code{screen} users with a
-'message of the day'. Typically installed in a global screenrc.
+'message of the day'. Typically installed in a global tscreenrc.
 The option @samp{-n} may be used to suppress the line feed.
 See also @code{sleep}.
 Echo is also useful for online checking of environment variables.
@@ -4299,7 +4300,7 @@ Echo is also useful for online checking 
 @section sleep
 @deffn Command sleep num
 (none)@*
-This command will pause the execution of a .screenrc file for @var{num}
+This command will pause the execution of a .tscreenrc file for @var{num}
 seconds.  Keyboard activity will end the sleep.  It may be used to give
 users a chance to read the messages output by @code{echo}.
 @end deffn
@@ -4929,7 +4930,7 @@ Useful for @samp{caption string}.
 Number of columns on the terminal (overrides termcap entry).
 
 @item HOME
-Directory in which to look for .screenrc.
+Directory in which to look for .tscreenrc.
 
 @item LINES
 Number of lines on the terminal (overrides termcap entry).
@@ -4950,7 +4951,7 @@ For customizing a terminal's @code{TERMC
 Alternate socket directory.
 
 @item SCREENRC
-Alternate user screenrc file.
+Alternate user tscreenrc file.
 
 @item SHELL
 Default shell program for opening windows (default @file{/bin/sh}).
@@ -4961,7 +4962,7 @@ Alternate socket name. If @code{screen} 
 session rather than starting a new session.
 
 @item SYSSCREENRC
-Alternate system screenrc file.
+Alternate system tscreenrc file.
 
 @item TERM
 Terminal name.
@@ -4978,19 +4979,19 @@ Window number of a window (at creation t
 @cindex files
 
 @table @file
-@item .../screen-4.?.??/etc/screenrc
-@itemx .../screen-4.?.??/etc/etcscreenrc
+@item .../screen-4.?.??/etc/tscreenrc
+@itemx .../screen-4.?.??/etc/etctscreenrc
 Examples in the @code{screen} distribution package for private and
 global initialization files.
 
 @item @code{$SYSSCREENRC}
-@itemx /local/etc/screenrc
+@itemx /local/etc/tscreenrc
 @code{screen} initialization commands
 
 @item @code{$SCREENRC}
-@itemx @code{$HOME}/.iscreenrc
-@itemx @code{$HOME}/.screenrc
-Read in after /local/etc/screenrc
+@itemx @code{$HOME}/.itscreenrc
+@itemx @code{$HOME}/.tscreenrc
+Read in after /local/etc/tscreenrc
 
 @item @code{$SCREENDIR}/S-@var{login}
 
@@ -5149,9 +5150,9 @@ specific setting, where the latter shoul
 windows.
 
 @item
-When attaching to a multiuser session, the user's @file{.screenrc} file is not
+When attaching to a multiuser session, the user's @file{.tscreenrc} file is not
 sourced. Each users personal settings have to be included in the
-@file{.screenrc} file from which the session is booted, or have to be
+@file{.tscreenrc} file from which the session is booted, or have to be
 changed manually.
 
 @item
@@ -5236,7 +5237,7 @@ Read through the "User Configuration" se
 that it suits your needs.
 A comment near the top of this section explains why it's best to
 install screen setuid to root.
-Check for the place for the global @file{screenrc}-file and for the socket
+Check for the place for the global @file{tscreenrc}-file and for the socket
 directory.
 @*
 Check the compiler used in @file{Makefile}, the prefix path where to install

$MirOS: ports/multimedia/mplayer/patches/patch-DOCS_man_en_mplayer_1,v 1.2 2005/05/19 21:44:56 tg Exp $
--- DOCS/man/en/mplayer.1.orig	Sat Apr 16 14:32:57 2005
+++ DOCS/man/en/mplayer.1	Sun Mar 23 16:15:03 2008
@@ -11,20 +11,20 @@
 .\" define indentation for suboptions
 .nr SS 5
 .\" add new suboption
-.de IPs
+.de iP
 .IP "\\$1" \n(SS
 ..
 .\" begin of first level suboptions, end with .RE
-.de RSs
+.de Rs
 .RS \n(IN+3
 ..
 .\" begin of 2nd level suboptions
-.de RSss
+.de Rt
 .PD 0
 .RS \n(SS+3
 ..
 .\" end of 2nd level suboptions
-.de REss
+.de rX
 .RE
 .PD 1
 ..
@@ -53,7 +53,7 @@ mencoder \- movie encoder
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 [global options]
 .I file1
 [specific options] [file2] [specific options]
@@ -61,7 +61,7 @@ mencoder \- movie encoder
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 [global options]
 .RI { "group of files and options" }
 [group specific options]
@@ -69,101 +69,101 @@ mencoder \- movie encoder
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 .I dvd://[title | [start_title]\-end_title ]
 [options]
 .
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 .I vcd://track[/device]
 .
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 .I tv://[channel]
 [options]
 .
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 .I dvb://[card_number@]channel
 [options]
 .
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 .I mf://filemask
 [-mf options] [options]
 .
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 .I [cdda|cddb]://track[:speed][/device]
 [options]
 .
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 .I cue://file[:track]
 [options]
 .
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 .RI [ mms[t] | http | http_proxy | rt[s]p | ftp | udp] ://
 [user:passwd@]\fIURL\fP[:port] [options]
 .
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 .I sdp://file
 [options]
 .
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 .I mpst://host[:port]/URL
 [options]
 .
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 .I tivo://host/list
 [options]
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 .I tivo://host/llist
 [options]
 .br
 .in
 .B mplayer
-'in +\n[.k]u
+'in +\n(.ku
 .I tivo://host/fsid
 [options]
 .br
 .in
 .B gmplayer
-'in +\n[.k]u
+'in +\n(.ku
 [options]
 [\-skin\ skin]
 .
 .br
 .in
 .B mencoder
-'in +\n[.k]u
+'in +\n(.ku
 [options]
 .RI [ \ file\  | \ URL\  | \ \-\  ]
 [\-o\ file]
@@ -171,7 +171,7 @@ mencoder \- movie encoder
 .br
 .in
 .B mencoder
-'in +\n[.k]u
+'in +\n(.ku
 [global options]
 .I file1
 [specific options] [file2] [specific options]
@@ -241,67 +241,67 @@ See the \-input option for ways to custo
 .TP
 .B general control
 .PD 0
-.RSs
-.IPs "<\- and \->"
+.Rs
+.iP "<\- and \->"
 Seek backward/\:forward 10 seconds.
-.IPs "up and down"
+.iP "up and down"
 Seek backward/\:forward 1 minute.
-.IPs "pgup and pgdown"
+.iP "pgup and pgdown"
 Seek backward/\:forward 10 minutes.
-.IPs "[ and ]"
+.iP "[ and ]"
 Decreases/increases current playback speed by 10%.
-.IPs "{ and }"
+.iP "{ and }"
 Halves/doubles current playback speed.
-.IPs "Backspace"
+.iP "Backspace"
 Reset playback speed to normal.
-.IPs "< and >"
+.iP "< and >"
 backward/\:forward in playlist
-.IPs "HOME and END"
+.iP "HOME and END"
 next/\:previous playtree entry in the parent list
-.IPs "INS and DEL"
+.iP "INS and DEL"
 next/\:previous alternative source (ASX playlist only)
-.IPs "p / SPACE"
+.iP "p / SPACE"
 Pause movie (pressing again unpauses).
-.IPs .\ \ \ \ 
+.iP .\ \ \ \ 
 Step forward.
 Pressing once will pause movie, every consecutive press will play one frame
 and then go into pause mode again (any other key unpauses).
-.IPs "q / ESC"
+.iP "q / ESC"
 Stop playing and quit.
-.IPs "+ and -"
+.iP "+ and -"
 Adjust audio delay by +/\:- 0.1 seconds.
-.IPs "/ and *"
+.iP "/ and *"
 Decrease/\:increase volume.
-.IPs "9 and 0"
+.iP "9 and 0"
 Decrease/\:increase volume.
-.IPs m\ \ \ \ 
+.iP m\ \ \ \ 
 Mute sound.
-.IPs "#" (MPEG and Matroska only)
+.iP "#" (MPEG and Matroska only)
 Cycle through the available audio tracks.
-.IPs f\ \ \ \ 
+.iP f\ \ \ \ 
 Toggle fullscreen (also see \-fs).
-.IPs T\ \ \ \ 
+.iP T\ \ \ \ 
 Toggle stay-on-top (also see \-ontop).
-.IPs "w and e"
+.iP "w and e"
 Decrease/\:increase pan-and-scan range.
-.IPs o\ \ \ \ 
+.iP o\ \ \ \ 
 Toggle OSD states: none / seek / seek + timer / seek + timer + total time.
-.IPs d\ \ \ \ 
+.iP d\ \ \ \ 
 Toggle frame dropping states: none / skip display / skip decoding
 (see \-framedrop and \-hardframedrop).
-.IPs v\ \ \ \ 
+.iP v\ \ \ \ 
 Toggle subtitle visibility.
-.IPs "b / j"
+.iP "b / j"
 Cycle through the available subtitles.
 .IP F\ \ \ \ 
 Toggle displaying "forced subtitles".
-.IPs a\ \ \ \ 
+.iP a\ \ \ \ 
 Toggle subtitle aligment: top/\:middle/\:bottom.
-.IPs "z and x"
+.iP "z and x"
 Adjust subtitle delay by +/\:- 0.1 seconds.
-.IPs "r and t"
+.iP "r and t"
 Move subtitles up/\:down.
-.IPs i\ \ \ \ 
+.iP i\ \ \ \ 
 Set EDL mark.
 .RE
 .PD 1
@@ -311,14 +311,14 @@ output (xv, (x)vidix, (x)mga, etc), the 
 (\-vf eq or \-vf eq2) or hue filter (\-vf hue).
 .PP
 .PD 0
-.RSs
-.IPs "1 and 2"
+.Rs
+.iP "1 and 2"
 Adjust contrast.
-.IPs "3 and 4"
+.iP "3 and 4"
 Adjust brightness.
-.IPs "5 and 6"
+.iP "5 and 6"
 Adjust hue.
-.IPs "7 and 8"
+.iP "7 and 8"
 Adjust saturation.
 .RE
 .PD 1
@@ -326,18 +326,18 @@ Adjust saturation.
 (The following keys are valid only when using the quartz video output driver.)
 .PP
 .PD 0
-.RSs
-.IPs "option + 0"
+.Rs
+.iP "option + 0"
 Resize movie window to half its original size.
-.IPs "option + 1"
+.iP "option + 1"
 Resize movie window to its original size.
-.IPs "option + 2"
+.iP "option + 2"
 Resize movie window to double its original size.
-.IPs "option + f"
+.iP "option + f"
 Toggle fullscreen (also see \-fs).
-.IPs "option + [ and option + ]"
+.iP "option + [ and option + ]"
 Set movie window alpha.
-.IPs T\ \ \ \ 
+.iP T\ \ \ \ 
 Toggle video layer: ontop/\:below/\:normal (also see \-ontop).
 .RE
 .PD 1
@@ -345,16 +345,16 @@ Toggle video layer: ontop/\:below/\:norm
 .TP
 .B GUI keyboard control
 .PD 0
-.RSs
-.IPs ENTER
+.Rs
+.iP ENTER
 Start playing.
-.IPs s\ \ \ \ 
+.iP s\ \ \ \ 
 Stop playing.
-.IPs l\ \ \ \ 
+.iP l\ \ \ \ 
 Load file.
-.IPs c\ \ \ \ 
+.iP c\ \ \ \ 
 Skin browser.
-.IPs p\ \ \ \ 
+.iP p\ \ \ \ 
 Toggle playlist.
 .RE
 .PD 1
@@ -362,12 +362,12 @@ Toggle playlist.
 .TP
 .B TV input control
 .PD 0
-.RSs
-.IPs "h and k"
+.Rs
+.iP "h and k"
 Select previous/\:next channel.
-.IPs n\ \ \ \ 
+.iP n\ \ \ \ 
 Change norm.
-.IPs u\ \ \ \ 
+.iP u\ \ \ \ 
 Change channel list.
 .RE
 .PD 1
@@ -438,7 +438,7 @@ handle carriage return (i.e.\& \\r).
 .B \-priority <prio> (Windows only)
 Set process priority for MPlayer according to Windows predefined priorities.
 Possible values of <prio>:
-.RSs
+.Rs
 idle|belownormal|normal|abovenormal|high|realtime
 .RE
 .sp 1
@@ -451,14 +451,14 @@ Using realtime priority can cause system
 .B \-v, \-verbose
 Increment verbose level (more \-v means more verbosity).
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 only some informational output (default)
-.IPs 1
+.iP 1
 some basic debug infos, avi header, function values (init debug)
-.IPs 2
+.iP 2
 print avi indexes, chunk inputs, more debug infos (player debug)
-.IPs 3
+.iP 3
 prints everything related to input parsers (parser debug)
 .RE
 .PD 1
@@ -586,22 +586,22 @@ Autorepeat is currently only supported b
 Available commands are:
 .sp 1
 .PD 0
-.RSs
-.IPs conf=<filename>
+.Rs
+.iP conf=<filename>
 Specify input configuration file other than the default
 ~/\:.mplayer/\:input.conf.
 ~/\:.mplayer/\:<filename> is assumed if no full path is given.
-.IPs ar-delay
+.iP ar-delay
 Delay in msec before we start to autorepeat a key (0 to disable).
-.IPs ar-rate
+.iP ar-rate
 Number of key presses to generate per second on autorepeat.
-.IPs keylist
+.iP keylist
 Prints all keys that can be bound to commands.
-.IPs cmdlist
+.iP cmdlist
 Prints all commands that can be bound to keys.
-.IPs js-dev
+.iP js-dev
 Specifies the joystick device to use (default: /dev/\:input/\:js0).
-.IPs file=<filename>
+.iP file=<filename>
 Read commands from the given file.
 Mostly useful with a FIFO.
 .br
@@ -709,8 +709,8 @@ directories, /usr/\:local/\:share/\:mpla
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-skin fittyfene"
+.Rs
+.iP "\-skin fittyfene"
 Tries /usr/\:local/\:share/\:mplayer/\:Skin/\:fittyfene
 and afterwards ~/.mplayer/\:Skin/\:fittyfene.
 .RE
@@ -768,11 +768,11 @@ MPlayer prints the available languages w
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "mplayer dvd://1 \-alang hu,en"
+.Rs
+.iP "mplayer dvd://1 \-alang hu,en"
 Chooses the Hungarian language track on a DVD and falls back on English if
 Hungarian is not available.
-.IPs "mplayer \-alang jpn example.mkv"
+.iP "mplayer \-alang jpn example.mkv"
 Plays a Matroska file in Japanese.
 .RE
 .PD 1
@@ -820,32 +820,32 @@ the cache prefill threshold set with thi
 This option can be used to tune the CD Audio reading feature of MPlayer.
 .sp 1
 Available options are:
-.RSs
-.IPs speed=<value>
+.Rs
+.iP speed=<value>
 Set CD spin speed.
-.IPs paranoia=<0\-2>
+.iP paranoia=<0\-2>
 Set paranoia level.
-.RSss
+.Rt
 0: disable checking
 .br
 1: overlap checking only (default)
 .br
 2: full data correction and verification
-.REss
-.IPs generic-dev=<value>
+.rX
+.iP generic-dev=<value>
 Use specified generic SCSI device.
-.IPs sector-size=<value>
+.iP sector-size=<value>
 Set atomic read size.
-.IPs overlap=<value>
+.iP overlap=<value>
 Force minimum overlap search during verification to <value> sectors.
-.IPs toc-bias
+.iP toc-bias
 Assume that the beginning offset of track 1 as reported in the TOC will be
 addressed as LBA\ 0.
 Some Toshiba drives need this for getting track boundaries correct.
-.IPs toc-offset=<value>
+.iP toc-offset=<value>
 Add <value> sectors to the values reported when addressing tracks.
 May be negative.
-.IPs (no)skip
+.iP (no)skip
 (Never) accept imperfect data reconstruction.
 .RE
 .
@@ -879,12 +879,12 @@ output drivers (OSS at least).
 Available options are:
 .sp 1
 .PD 0
-.RSs
-.IPs 2
+.Rs
+.iP 2
 stereo
-.IPs 4
+.iP 4
 surround
-.IPs 6
+.iP 6
 full 5.1
 .RE
 .PD 1
@@ -934,10 +934,10 @@ Pass the following parameters to the DVB
 the default ones:
 .sp 1
 .PD 0
-.RSs
-.IPs card=<1\-4>
+.Rs
+.iP card=<1\-4>
 Specifies using card number 1\-4 (default: 1).
-.IPs file=<filename>
+.iP file=<filename>
 Instructs MPlayer to read the channels list from <filename>.
 Default is ~/.mplayer/\:channels.conf.{sat,ter,cbl,atsc} (based on your card type)
 or ~/.mplayer/\:channels.conf as a last resort.
@@ -1021,14 +1021,14 @@ Used when decoding from multiple PNG or 
 Available options are:
 .sp 1
 .PD 0
-.RSs
-.IPs w=<value>
+.Rs
+.iP w=<value>
 output width (default: autodetect)
-.IPs h=<value>
+.iP h=<value>
 output height (default: autodetect)
-.IPs fps=<value>
+.iP fps=<value>
 output fps (default: 25)
-.IPs type=<value>
+.iP type=<value>
 input file type (available: jpeg, png, tga, sgi)
 .RE
 .PD 1
@@ -1074,18 +1074,18 @@ For playing raw AC3 streams use \-rawaud
 Available options are:
 .sp 1
 .PD 0
-.RSs
-.IPs on\ \ \ 
+.Rs
+.iP on\ \ \ 
 Use raw audio demuxer.
-.IPs channels=<value>
+.iP channels=<value>
 number of channels
-.IPs rate=<value>
+.iP rate=<value>
 rate in samples per second
-.IPs samplesize=<value>
+.iP samplesize=<value>
 sample size in bytes
-.IPs bitrate=<value>
+.iP bitrate=<value>
 bitrate for rawaudio files
-.IPs format=<value>
+.iP format=<value>
 fourcc in hex
 .RE
 .PD 1
@@ -1097,22 +1097,22 @@ This option lets you play raw video file
 Available options are:
 .sp 1
 .PD 0
-.RSs
-.IPs on\ \ \ 
+.Rs
+.iP on\ \ \ 
 Use raw video demuxer.
-.IPs fps=<value>
+.iP fps=<value>
 rate in frames per second (default: 25.0)
-.IPs sqcif|qcif|cif|4cif|pal|ntsc
+.iP sqcif|qcif|cif|4cif|pal|ntsc
 set standard image size
-.IPs w=<value>
+.iP w=<value>
 image width in pixels
-.IPs h=<value>
+.iP h=<value>
 image height in pixels
-.IPs i420|yv12|yuy2|y8
+.iP i420|yv12|yuy2|y8
 set colorspace
-.IPs format=<value>
+.iP format=<value>
 colorspace (fourcc) in hex
-.IPs size=<value>
+.iP size=<value>
 frame size in Bytes
 .RE
 .PD 1
@@ -1158,10 +1158,10 @@ Seek to given time position.
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-ss 56"
+.Rs
+.iP "\-ss 56"
 Seeks to 56 seconds.
-.IPs "\-ss 01:10:00"
+.iP "\-ss 01:10:00"
 Seeks to 1\ hour 10\ min.
 .RE
 .PD 1
@@ -1191,44 +1191,44 @@ or even 'tv://<channel_name> (see option
 as a movie URL.
 .sp 1
 Available options are:
-.RSs
-.IPs noaudio
+.Rs
+.iP noaudio
 no sound
-.IPs driver=<value>
+.iP driver=<value>
 available: dummy, v4l, v4l2, bsdbt848
-.IPs device=<value>
+.iP device=<value>
 Specify TV device (default: /dev/\:video0).
-.IPs input=<value>
+.iP input=<value>
 Specify input (default: 0 (TV), see console output for available inputs).
-.IPs freq=<value>
+.iP freq=<value>
 Specify the frequency to set the tuner to (e.g.\& 511.250).
 Not compatible with the channels parameter.
-.IPs outfmt=<value>
+.iP outfmt=<value>
 Specify the output format of the tuner with a preset value supported by the
 V4L driver (yv12, rgb32, rgb24, rgb16, rgb15, uyvy, yuy2, i420) or an
 arbitrary format given as hex value.
 Try outfmt=help for a list of all available formats.
-.IPs width=<value>
+.iP width=<value>
 output window width
-.IPs height=<value>
+.iP height=<value>
 output window height
-.IPs fps=<value>
+.iP fps=<value>
 framerate at which to capture video (frames per second)
-.IPs buffersize=<value>
+.iP buffersize=<value>
 maximum size of the capture buffer in megabytes (default: dynamical)
-.IPs norm=<value>
+.iP norm=<value>
 For bsdbt848 and v4l, PAL, SECAM, NTSC are available.
 For v4l2, see the console output for a list of all available norms,
 also see the normid option below.
-.IPs "normid=<value> (v4l2 only)"
+.iP "normid=<value> (v4l2 only)"
 Sets the TV norm to the given numeric ID.
 The TV norm depends on the capture card.
 See the console output for a list of available TV norms.
-.IPs channel=<value>
+.iP channel=<value>
 Set tuner to <value> channel.
-.IPs chanlist=<value>
+.iP chanlist=<value>
 available: europe-east, europe-west, us-bcast, us-cable, etc
-.IPs channels=<channel>\-<name>,<channel>\-<name>,...
+.iP channels=<channel>\-<name>,<channel>\-<name>,...
 Set names for channels.
 Use _ for spaces in names (or play with quoting ;-).
 The channel names will then be written using OSD, and the slave commands
@@ -1242,17 +1242,17 @@ beginning with 1.
 .br
 .I EXAMPLE:
 tv://1, tv://TV1, tv_set_channel 1, tv_set_channel TV1
-.IPs [brightness|contrast|hue|saturation]=<-100\-100>
+.iP [brightness|contrast|hue|saturation]=<-100\-100>
 Set the image equalizer on the card.
-.IPs audiorate=<value>
+.iP audiorate=<value>
 Set audio capture bitrate.
-.IPs forceaudio
+.iP forceaudio
 Capture audio even if there are no audio sources reported by v4l.
-.IPs alsa\ 
+.iP alsa\ 
 Capture from ALSA.
-.IPs amode=<0\-3>
+.iP amode=<0\-3>
 Choose an audio mode:
-.RSss
+.Rt
 0: mono
 .br
 1: stereo
@@ -1260,40 +1260,40 @@ Choose an audio mode:
 2: language 1
 .br
 3: language 2
-.REss
-.IPs forcechan=<1\-2>
+.rX
+.iP forcechan=<1\-2>
 By default, the count of recorded audio channels is determined automatically
 by querying the audio mode from the TV card.
 This option allows forcing stereo/\:mono recording regardless of the amode
 option and the values returned by v4l.
 This can be used for troubleshooting when the TV card is unable to report the
 current audio mode.
-.IPs adevice=<value>
+.iP adevice=<value>
 Set an audio device.
 <value> should be /dev/\:xxx for OSS and a hardware ID for ALSA.
 See the \-ao alsa documentation to find out how to specify the hardware ID.
-.IPs audioid=<value>
+.iP audioid=<value>
 Choose an audio output of the capture card, if it has more than one.
-.IPs "[volume|bass|treble|balance]=<0\-65535> (v4l1)"
-.IPs "[volume|bass|treble|balance]=<0\-100> (v4l2)"
+.iP "[volume|bass|treble|balance]=<0\-65535> (v4l1)"
+.iP "[volume|bass|treble|balance]=<0\-100> (v4l2)"
 These options set parameters of the mixer on the video capture card.
 They will have no effect, if your card does not have one.
 For v4l2 50 maps to the default value of the
 control, as reported by the driver.
-.IPs immediatemode=<bool>
+.iP immediatemode=<bool>
 A value of 0 means capture and buffer audio and video together
 (default for MEncoder).
 A value of 1 (default for MPlayer) means to do video capture only and let the
 audio go through a loopback cable from the TV card to the sound card.
-.IPs mjpeg
+.iP mjpeg
 Use hardware MJPEG compression (if the card supports it).
 When using this option, you do not need to specify the width and height
 of the output window, because MPlayer will determine it automatically
 from the decimation value (see below).
-.IPs decimation=<1|2|4>
+.iP decimation=<1|2|4>
 choose the size of the picture that will be compressed by hardware
 MJPEG compression:
-.RSss
+.Rt
 1: full size
     704x576    PAL
     704x480    NTSC
@@ -1305,8 +1305,8 @@ MJPEG compression:
 4: small size
     176x144    PAL
     176x120    NTSC
-.REss
-.IPs quality=<0\-100>
+.rX
+.iP quality=<0\-100>
 Choose the quality of the JPEG compression
 (< 60 recommended for full size).
 .RE
@@ -1375,14 +1375,14 @@ Also see the \-dump*sub and \-vobsubout*
 Resample the font alphamap.
 Can be:
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 plain white fonts
-.IPs 0.75
+.iP 0.75
 very narrow black outline (default)
-.IPs 1
+.iP 1
 narrow black outline
-.IPs 10
+.iP 10
 bold black outline
 .RE
 .PD 1
@@ -1408,7 +1408,7 @@ With fontconfig, this option determines 
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
+.Rs
 \-font ~/\:.mplayer/\:arial-14/\:font.desc
 .br
 \-font ~/\:.mplayer/\:arialuni.ttf
@@ -1444,14 +1444,14 @@ Turns off automatic subtitle file loadin
 .B \-osdlevel <0\-3> (MPlayer only)
 Specifies which mode the OSD should start in.
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 subtitles only
-.IPs 1
+.iP 1
 volume + seek (default)
-.IPs 2
+.iP 2
 volume + seek + timer + percentage
-.IPs 3
+.iP 3
 volume + seek + timer + percentage + total time
 .RE
 .PD 1
@@ -1477,11 +1477,11 @@ MPlayer prints the available languages w
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "mplayer dvd://1 \-slang hu,en"
+.Rs
+.iP "mplayer dvd://1 \-slang hu,en"
 Chooses the Hungarian subtitle track on a DVD and falls back on English if
 Hungarian is not available.
-.IPs "mplayer \-slang jpn example.mkv"
+.iP "mplayer \-slang jpn example.mkv"
 Plays a Matroska file with Japanese subtitles.
 .RE
 .PD 1
@@ -1494,16 +1494,16 @@ when original and scaled frame size alre
 This can be employed to e.g.\& smooth subtitles with gaussian blur.
 Available modes are:
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 none (fastest, very ugly)
-.IPs 1
+.iP 1
 approximate (broken?)
-.IPs 2
+.iP 2
 full (slow)
-.IPs 3
+.iP 3
 bilinear (default, fast and not too bad)
-.IPs 4
+.iP 4
 uses swscaler gaussian blur (looks very good)
 .RE
 .PD 1
@@ -1512,14 +1512,14 @@ uses swscaler gaussian blur (looks very 
 .B \-spualign <-1\-2> (OSD only)
 Specify how SPU (DVD/\:VOBsub) subtitles should be aligned.
 .PD 0
-.RSs
-.IPs "-1"
+.Rs
+.iP "-1"
 original position
-.IPs " 0"
+.iP " 0"
 align at top (original/\:default behavior)
-.IPs " 1"
+.iP " 1"
 align at center
-.IPs " 2"
+.iP " 2"
 align at bottom
 .RE
 .PD 1
@@ -1556,12 +1556,12 @@ Give the demuxer ID as defined in subrea
 .B \-sub-fuzziness <mode>
 Adjust matching fuzziness when searching for subtitles:
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 exact match
-.IPs 1
+.iP 1
 Load all subs containing movie name.
-.IPs 2
+.iP 2
 Load all subs in the current directory.
 .RE
 .PD 1
@@ -1575,12 +1575,12 @@ Used for debug purposes.
 .B \-subalign <0\-2> (OSD only)
 Specify how subtitles should be aligned with \-subpos.
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 Align at top (original/\:default behavior).
-.IPs 1
+.iP 1
 Align at center.
-.IPs 2
+.iP 2
 Align at bottom.
 .RE
 .PD 1
@@ -1601,7 +1601,7 @@ specify the subtitle codepage.
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
+.Rs
 \-subcp latin2
 .br
 \-subcp cp1250
@@ -1618,11 +1618,11 @@ Fallback codepage specifies the codepage
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-subcp enca:cs:latin2"
+.Rs
+.iP "\-subcp enca:cs:latin2"
 Guess the encoding, assuming the subtitles are Czech, fall back on
 latin 2, if the detection fails.
-.IPs "\-subcp enca:pl:cp1250"
+.iP "\-subcp enca:pl:cp1250"
 Guess the encoding for Polish, fall back on cp1250.
 .RE
 .PD 1
@@ -1647,14 +1647,14 @@ Sets the autoscale mode.
 The mode can be:
 .sp 1
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 no autoscale
-.IPs 1
+.iP 1
 proportional to movie height
-.IPs 2
+.iP 2
 proportional to movie width
-.IPs 3
+.iP 3
 proportional to movie diagonal (default)
 .RE
 .PD 1
@@ -1795,10 +1795,10 @@ See \-ao help for a list of compiled-in 
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-ao alsa,oss,"
+.Rs
+.iP "\-ao alsa,oss,"
 Try the ALSA driver, then the OSS driver, then others.
-.IPs "\-ao alsa:mmap:noblock:device=hw=0.3"
+.iP "\-ao alsa:mmap:noblock:device=hw=0.3"
 Sets noblock-mode, mmap-mode and the device-name as first card, fourth device.
 .RE
 .PD 1
@@ -1809,12 +1809,12 @@ Available audio output drivers are:
 .B alsa\ \ \ 
 ALSA 0.9/\:1.x audio output driver
 .PD 0
-.RSs
-.IPs mmap\ \ \ 
+.Rs
+.iP mmap\ \ \ 
 Sets experimental mmap-mode (does not work for more than 2 channels).
-.IPs noblock
+.iP noblock
 Sets noblock-mode.
-.IPs device=<device>
+.iP device=<device>
 Sets the device name.
 Replace any ',' with '.' and any ':' with '=' in the ALSA device name.
 Make sure you do not set this when you want hwac3 output via S/PDIF, unless
@@ -1830,8 +1830,8 @@ ALSA 0.5 audio output driver
 .B oss\ \ \ \ 
 OSS audio output driver
 .PD 0
-.RSs
-.IPs dsp-device
+.Rs
+.iP dsp-device
 Sets the audio-output device (default: /dev/\:dsp).
 .RE
 .PD 1
@@ -1841,8 +1841,8 @@ Sets the audio-output device (default: /
 highly platform independent SDL (Simple Directmedia Layer) library
 audio output driver
 .PD 0
-.RSs
-.IPs <driver>
+.Rs
+.iP <driver>
 Explicitly choose the SDL audio driver to use (default: let SDL choose).
 .RE
 .PD 1
@@ -1855,8 +1855,8 @@ audio output through the Arts daemon
 .B esd\ \ \ \ 
 audio output through the ESD daemon
 .PD 0
-.RSs
-.IPs <server>
+.Rs
+.iP <server>
 Explicitly choose the ESD server to use (default: localhost).
 .RE
 .PD 1
@@ -1881,8 +1881,8 @@ native SGI audio output driver
 .B sun (Sun only)
 native Sun audio output driver
 .PD 0
-.RSs
-.IPs <device>
+.Rs
+.iP <device>
 Explicitly choose the audio device to use (default: /dev/\:audio).
 .RE
 .PD 1
@@ -1895,8 +1895,8 @@ native Windows waveout audio output driv
 .B dsound (Windows only)
 DirectX DirectSound audio output driver
 .PD 0
-.RSs
-.IPs device=<devicenum>
+.Rs
+.iP device=<devicenum>
 Sets the device number to use.
 Playing a file with \-v will show a list of available devices.
 .RE
@@ -1919,11 +1919,11 @@ Use \-nosound for benchmarking.
 .B pcm\ \ \ \ 
 raw PCM/wave file writer audio output
 .PD 0
-.RSs
-.IPs (no)waveheader
+.Rs
+.iP (no)waveheader
 Include or do not include the wave header (default: included).
 When not included, raw PCM will be generated.
-.IPs file=<filename>
+.iP file=<filename>
 Write the sound to <filename> instead of the default
 audiodump.wav.
 If nowaveheader is specified, the default is audiodump.pcm.
@@ -1971,7 +1971,7 @@ on.
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
+.Rs
 \-display xtest.localdomain:0
 .RE
 .PD 1
@@ -1986,82 +1986,82 @@ May cause OSD/\:SUB corruption!
 .TP
 .B \-dxr2 <option1:option2:...>
 This option is used to control the dxr2 video output driver.
-.RSs
-.IPs ar-mode=<value>
+.Rs
+.iP ar-mode=<value>
 aspect ratio mode (0 = normal, 1 = pan-and-scan, 2 = letterbox (default))
-.IPs iec958-encoded
+.iP iec958-encoded
 Set iec958 output mode to encoded.
-.IPs iec958-decoded
+.iP iec958-decoded
 Set iec958 output mode to decoded (default).
-.IPs macrovision=<value>
+.iP macrovision=<value>
 macrovision mode (0 = off (default), 1 = agc, 2 = agc 2 colorstripe,
 3 = agc 4 colorstripe)
-.IPs mute\ 
+.iP mute\ 
 mute sound output
-.IPs unmute
+.iP unmute
 unmute sound output
-.IPs ucode=<value>
+.iP ucode=<value>
 path to the microcode
 .RE
 .RS
 .sp 1
 .I TV output
 .RE
-.RSs
-.IPs 75ire
+.Rs
+.iP 75ire
 enable 7.5 IRE output mode
-.IPs no75ire
+.iP no75ire
 disable 7.5 IRE output mode (default)
-.IPs bw\ \ \ 
+.iP bw\ \ \ 
 b/\:w TV output
-.IPs color
+.iP color
 color TV output (default)
-.IPs interlaced
+.iP interlaced
 interlaced TV output (default)
-.IPs nointerlaced
+.iP nointerlaced
 disable interlaced TV output
-.IPs norm=<value>
+.iP norm=<value>
 TV norm (ntsc (default), pal, pal60, palm, paln, palnc)
-.IPs square-pixel
+.iP square-pixel
 set pixel mode to square
-.IPs ccir601-pixel
+.iP ccir601-pixel
 set pixel mode to ccir601
 .RE
 .RS
 .sp 1
 .I overlay
 .RE
-.RSs
-.IPs cr-left=<0\-500>
+.Rs
+.iP cr-left=<0\-500>
 Set the left cropping value (default: 50).
-.IPs cr-right=<0\-500>
+.iP cr-right=<0\-500>
 Set the right cropping value (default: 300).
-.IPs cr-top=<0\-500>
+.iP cr-top=<0\-500>
 Set the top cropping value (default: 0).
-.IPs cr-bottom=<0\-500>
+.iP cr-bottom=<0\-500>
 Set the bottom cropping value (default: 0).
-.IPs ck-[r|g|b]=<0\-255>
+.iP ck-[r|g|b]=<0\-255>
 Set the r(ed), g(reen) or b(lue) gain of the overlay color-key.
-.IPs ck-[r|g|b]min=<0\-255>
+.iP ck-[r|g|b]min=<0\-255>
 minimum value for the respective color key
-.IPs ck-[r|g|b]max=<0\-255>
+.iP ck-[r|g|b]max=<0\-255>
 maximum value for the respective color key
-.IPs ignore-cache
+.iP ignore-cache
 Ignore cached overlay settings.
-.IPs update-cache
+.iP update-cache
 Update cached overlay settings.
-.IPs ol-osd
+.iP ol-osd
 Enable overlay onscreen display.
-.IPs nool-osd
+.iP nool-osd
 Disable overlay onscreen display (default).
-.IPs ol[h|w|x|y]-cor=<-20\-20>
+.iP ol[h|w|x|y]-cor=<-20\-20>
 Adjust the overlay size (h,w) and position (x,y) in case it does not
 match the window perfectly (default: 0).
-.IPs overlay
+.iP overlay
 Activate overlay (default).
-.IPs nooverlay
+.iP nooverlay
 Activate TVout.
-.IPs overlay-ratio=<1\-2500>
+.iP overlay-ratio=<1\-2500>
 Tune the overlay (default: 1000).
 .RE
 .
@@ -2103,34 +2103,34 @@ See \-fstype help for a full list of ava
 The available types are:
 .sp 1
 .PD 0
-.RSs
-.IPs above
+.Rs
+.iP above
 Use the _NETWM_STATE_ABOVE hint if available.
-.IPs below
+.iP below
 Use the _NETWM_STATE_BELOW hint if available.
-.IPs fullscreen
+.iP fullscreen
 Use the _NETWM_STATE_FULLSCREEN hint if available.
-.IPs layer
+.iP layer
 Use the _WIN_LAYER hint with the default layer.
-.IPs layer=<0...15>
+.iP layer=<0...15>
 Use the _WIN_LAYER hint with the given layer number.
-.IPs netwm
+.iP netwm
 Force NETWM style.
-.IPs none\ 
+.iP none\ 
 Do not set fullscreen window layer.
-.IPs stays_on_top
+.iP stays_on_top
 Use _NETWM_STATE_STAYS_ON_TOP hint if available.
-.REss
+.rX
 .sp 1
 .RS
 .I EXAMPLE:
 .RE
 .PD 0
-.RSs
-.IPs layer,stays_on_top,above,fullscreen
+.Rs
+.iP layer,stays_on_top,above,fullscreen
 Default order, will be used as a fallback if incorrect or
 unsupported modes are specified.
-.IPs \-fullscreen
+.iP \-fullscreen
 Fixes fullscreen switching on OpenBox 1.x.
 .RE
 .PD 1
@@ -2153,14 +2153,14 @@ directx and tdfxfb video output drivers.
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs 50:40
+.Rs
+.iP 50:40
 Places the window at x=50, y=40.
-.IPs 50%:50%
+.iP 50%:50%
 Places the window in the middle of the screen.
-.IPs 100%\ 
+.iP 100%\ 
 Places the window at the middle of the right edge of the screen.
-.IPs 100%:100%
+.iP 100%:100%
 Places the window at the bottom right corner of the screen.
 .RE
 .PD 1
@@ -2195,7 +2195,7 @@ Set the aspect ratio of your monitor or 
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
+.Rs
 \-monitoraspect 4:3  or 1.3333
 .br
 \-monitoraspect 16:9 or 1.7777
@@ -2367,10 +2367,10 @@ See \-vo help for a list of compiled-in 
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-vo xmga,xv,"
+.Rs
+.iP "\-vo xmga,xv,"
 Try the Matrox X11 driver, then the Xv driver, then others.
-.IPs "\-vo directx:noaccel"
+.iP "\-vo directx:noaccel"
 Uses the DirectX driver with acceleration features turned off.
 .RE
 .PD 1
@@ -2387,28 +2387,28 @@ For information about what colorkey is u
 with \-v option and look out for the lines tagged with [xv common] at the
 beginning.
 .PD 0
-.RSs
-.IPs port=<number>
+.Rs
+.iP port=<number>
 Select a specific XVideo port.
-.IPs ck=<cur|use|set>
+.iP ck=<cur|use|set>
 Select the source from which the colorkey is taken (default: cur).
-.RSss
-.IPs cur
+.Rt
+.iP cur
 The default takes the colorkey currently set in Xv.
-.IPs use
+.iP use
 Use but do not set the colorkey from mplayer (use \-colorkey option to change
 it).
-.IPs set
+.iP set
 Same as use but also sets the supplied colorkey.
 .RE
-.IPs ck-method=<man|bg|auto>
+.iP ck-method=<man|bg|auto>
 Sets the colorkey drawing method (default: man).
-.RSss
-.IPs man
+.Rt
+.iP man
 Draw the colorkey manually (reduces flicker in some cases).
-.IPs bg
+.iP bg
 Set the colorkey as window background.
-.IPs auto
+.iP auto
 Let Xv draw the colorkey.
 .RE
 .RE
@@ -2424,8 +2424,8 @@ works whenever X11 is present.
 Adds X11 support to all overlay based video output drivers.
 Currently only supported by tdfx_vid.
 .PD 0
-.RSs
-.IPs <vo_driver>
+.Rs
+.iP <vo_driver>
 Select the driver to use as source to overlay on top of X11.
 .RE
 .PD 1
@@ -2435,23 +2435,23 @@ Select the driver to use as source to ov
 Video output driver that uses the XvMC (X Video Motion Compensation)
 extension of XFree86 4.x to speed up MPEG-1/2 and VCR2 decoding.
 .PD 0
-.RSs
-.IPs port=<number>
+.Rs
+.iP port=<number>
 Select a specific XVideo port.
-.IPs (no)benchmark
+.iP (no)benchmark
 Disables image display.
 Necessary for proper benchmarking of drivers that change
 image buffers on monitor retrace only (nVidia).
 Default is not to disable image display (nobenchmark).
-.IPs (no)queue
+.iP (no)queue
 Queue frames for display to allow more parallel work of the video hardware.
 May add a small (not noticeable) constant A/\:V desync (default: noqueue).
-.IPs (no)sleep
+.iP (no)sleep
 Use sleep function while waiting for rendering to finish
 (not recomended on Linux). Default is not to sleep (nosleep).
-.IPs ck=cur|use|set
+.iP ck=cur|use|set
 Same as \-vo xv:ck (see \-vo xv).
-.IPs ck-method=man|bg|auto
+.iP ck-method=man|bg|auto
 Same as \-vo xv:ck-method (see \-vo xv).
 .RE
 .PD 1
@@ -2468,12 +2468,12 @@ video output driver.
 Since SDL uses its own X11 layer, MPlayer X11 options do not have
 any effect on SDL.
 .PD 0
-.RSs
-.IPs driver=<driver>
+.Rs
+.iP driver=<driver>
 Explicitly choose the SDL driver to use.
-.IPs (no)forcexv
+.iP (no)forcexv
 Use XVideo through the sdl video output driver (default: forcexv).
-.IPs (no)hwaccel
+.iP (no)hwaccel
 Use hardware accelerated scaler (default: hwaccel).
 .RE
 .PD 1
@@ -2484,8 +2484,8 @@ VIDIX (VIDeo Interface for *niX) is an i
 video acceleration features of different graphics cards.
 Very fast video output driver on cards that support it.
 .PD 0
-.RSs
-.IPs <subdevice>
+.Rs
+.iP <subdevice>
 Explicitly choose the VIDIX subdevice driver to use.
 Available subdevice drivers are cyberblade_vid, mach64_vid, mga_crtc2_vid,
 mga_vid, nvidia_vid, pm3_vid, radeon_vid, rage128_vid, sis_vid and
@@ -2497,8 +2497,8 @@ unichrome_vid.
 .B xvidix (X11 only)
 X11 frontend for VIDIX
 .PD 0
-.RSs
-.IPs <subdevice>
+.Rs
+.iP <subdevice>
 same as vidix
 .RE
 .PD 1
@@ -2508,8 +2508,8 @@ same as vidix
 Generic and platform independent VIDIX frontend, can even run in a
 textconsole with nVidia cards.
 .PD 0
-.RSs
-.IPs <subdevice>
+.Rs
+.iP <subdevice>
 same as vidix
 .RE
 .PD 1
@@ -2518,8 +2518,8 @@ same as vidix
 .B winvidix (Windows only)
 Windows frontend for VIDIX
 .PD 0
-.RSs
-.IPs <subdevice>
+.Rs
+.iP <subdevice>
 same as vidix
 .RE
 .PD 1
@@ -2528,8 +2528,8 @@ same as vidix
 .B directx (Windows only)
 Video output driver that uses the DirectX interface.
 .PD 0
-.RSs
-.IPs noaccel
+.Rs
+.iP noaccel
 Turns off hardware acceleration.
 Try this option if you have display problems.
 .RE
@@ -2541,10 +2541,10 @@ Mac OS X Quartz video output driver.
 Under some circumstances, it might be more efficient to force a
 packed YUV output format, with e.g.\& \-vf format=yuy2.
 .PD 0
-.RSs
-.IPs device_id=<number>
+.Rs
+.iP device_id=<number>
 Choose the display device to use in fullscreen.
-.IPs fs_res=<width>:<height>
+.iP fs_res=<width>:<height>
 Specify the fullscreen resolution (useful on slow systems).
 .RE
 .PD 1
@@ -2553,8 +2553,8 @@ Specify the fullscreen resolution (usefu
 .B fbdev (Linux only)
 Uses the kernel framebuffer to play video.
 .PD 0
-.RSs
-.IPs <device>
+.Rs
+.iP <device>
 Explicitly choose the fbdev device name to use (e.g.\& /dev/\:fb0) or the
 name of the VIDIX subdevice if the device name starts with 'vidix'
 (e.g.\& 'vidixsis_vid' for the sis driver).
@@ -2566,8 +2566,8 @@ name of the VIDIX subdevice if the devic
 Uses the kernel framebuffer to play video,
 alternative implementation.
 .PD 0
-.RSs
-.IPs <device>
+.Rs
+.iP <device>
 Explicitly choose the fbdev device name to use (default: /dev/\:fb0).
 .RE
 .PD 1
@@ -2577,18 +2577,18 @@ Explicitly choose the fbdev device name 
 Very general video output driver that should work on any VESA VBE 2.0
 compatible card.
 .PD 0
-.RSs
-.IPs dga\ \ 
+.Rs
+.iP dga\ \ 
 Turns on DGA mode.
-.IPs nodga
+.iP nodga
 Turns off DGA mode.
-.IPs neotv_pal
+.iP neotv_pal
 Activate the NeoMagic TV out and set it to PAL norm.
-.IPs neotv_ntsc
+.iP neotv_ntsc
 Activate the NeoMagic TV out and set it to NTSC norm.
-.IPs vidix
+.iP vidix
 Use the VIDIX driver.
-.IPs lvo:\ \ \ 
+.iP lvo:\ \ \ 
 Activate the Linux Video Overlay on top of VESA mode.
 .RE
 .PD 1
@@ -2597,23 +2597,23 @@ Activate the Linux Video Overlay on top 
 .B svga\ \ \ 
 Play video using the SVGA library.
 .PD 0
-.RSs
-.IPs "<video mode>"
+.Rs
+.iP "<video mode>"
 Specify video mode to use.
 The mode can be given in a <width>x<height>x<colors> format,
 e.g.\& 640x480x16M or be a graphics mode number, e.g.\& 84.
-.IPs bbosd
+.iP bbosd
 Draw OSD into black bands below the movie (slower).
-.IPs native
+.iP native
 Use only native drawing functions.
 This avoids direct rendering, OSD and hardware acceleration.
-.IPs retrace
+.iP retrace
 Force frame switch on vertical retrace.
 Usable only with \-double.
 It has the same effect as the \-vsync option.
-.IPs sq\ \ \ 
+.iP sq\ \ \ 
 Try to select a video mode with square pixels.
-.IPs vidix
+.iP vidix
 Use svga with VIDIX.
 .RE
 .PD 1
@@ -2625,24 +2625,24 @@ Simple version, video size must be small
 the maximum texture size of your OpenGL implementation.
 Intended to work even with the most simple OpenGL implementations.
 .PD 0
-.RSs
-.IPs (no)manyfmts
+.Rs
+.iP (no)manyfmts
 Enables support for more (RGB and BGR) color formats.
 Needs OpenGL version >= 1.2.
-.IPs slice-height=<0\-...>
+.iP slice-height=<0\-...>
 Number of lines copied to texture in one piece (default: 4).
 0 for whole image.
-.IPs (no)osd
+.iP (no)osd
 Enable or disable support for OSD rendering via OpenGL (default: enabled).
 Mostly for testing, you should use \-osdlevel 0 to disable OSD.
-.IPs (no)scaled-osd
+.iP (no)scaled-osd
 Changes the way the OSD behaves when the size of the
 window changes (default: disabled).
 When enabled behaves more like the other video output drivers,
 which is better for fixed-size fonts.
 Disabled looks much better with FreeType fonts and uses the
 borders in fullscreen mode.
-.IPs (no)aspect
+.iP (no)aspect
 Enable or disable aspect scaling and pan-and-scan support (default: enabled).
 Disabling might increase speed.
 .RE
@@ -2673,8 +2673,8 @@ Color ASCII art video output driver that
 Video playback using the Blinkenlights UDP protocol.
 This driver is highly hardware specific.
 .PD 0
-.RSs
-.IPs <subdevice>
+.Rs
+.iP <subdevice>
 Explicitly choose the Blinkenlights subdevice driver to use.
 It's something like arcade:host=localhost:2323 or
 hdl:file=name1,file=name2.
@@ -2686,8 +2686,8 @@ You must specify a subdevice.
 .B ggi\ \ \ \ 
 GGI graphics system video output driver
 .PD 0
-.RSs
-.IPs <driver>
+.Rs
+.iP <driver>
 Explicitly choose the GGI driver to use.
 .RE
 .PD 1
@@ -2696,22 +2696,22 @@ Explicitly choose the GGI driver to use.
 .B directfb
 Play video using the DirectFB library.
 .PD 0
-.RSs
-.IPs (no)input
+.Rs
+.iP (no)input
 Use the DirectFB instead of the MPlayer keyboard code (default: enabled).
-.IPs buffermode=single|double|triple
+.iP buffermode=single|double|triple
 Double and triple buffering give best results if you want to avoid tearing issues.
 Triple buffering is more efficent than double buffering as it doesn't block MPlayer
 while waiting for the vertical retrace.
 Single buffering should be avoided (default: single).
-.IPs fieldparity=top|bottom
+.iP fieldparity=top|bottom
 Control the output order for interlaced frames (default: disabled).
 Valid values are top = top fields first, bottom = bottom fields first.
 This option doesn't have any effect on progressive film material
 like most MPEG movies are.
 You need to enable this option if you have tearing issues/\:unsmooth
 motions watching interlaced film material.
-.IPs layer=N
+.iP layer=N
 Will force layer with ID N for playback (default: -1 - auto).
 .RE
 .PD 1
@@ -2722,33 +2722,33 @@ Matrox G400/\:G450/\:G550 specific video
 DirectFB library to make use of special hardware features.
 Enables CRTC2 (second head), displaying video independently of the first head.
 .PD 0
-.RSs
-.IPs (no)bes
+.Rs
+.iP (no)bes
 Enable the use of the Matrox BES (backend scaler) (default: disabled).
 Gives very good results concerning speed and output quality as interpolated
 picture processing is done in hardware.
 Works only on the primary head.
-.IPs (no)spic
+.iP (no)spic
 Make use of the Matrox sub picture layer to display the OSD (default: enabled).
-.IPs (no)crtc2
+.iP (no)crtc2
 Turn on TV-out on the second head (default: enabled).
 The output quality is amazing as it's a full interlaced picture
 with proper sync to every odd/\:even field.
-.IPs (no)input
+.iP (no)input
 Use the DirectFB instead of the MPlayer keyboard code (default: disabled).
-.IPs buffermode=single|double|triple
+.iP buffermode=single|double|triple
 Double and triple buffering give best results if you want to avoid tearing issues.
 Triple buffering is more efficent than double buffering as it doesn't block MPlayer
 while waiting for the vertical retrace.
 Single buffering should be avoided (default: triple).
-.IPs fieldparity=top|bottom
+.iP fieldparity=top|bottom
 Control the output order for interlaced frames (default: disabled).
 Valid values are top = top fields first, bottom = bottom fields first.
 This option doesn't have any effect on progressive film material
 like most MPEG movies are.
 You need to enable this option if you have tearing issues/\:unsmooth
 motions watching interlaced film material.
-.IPs tvnorm=pal|ntsc|auto
+.iP tvnorm=pal|ntsc|auto
 Will set the TV norm of the Matrox card without the need
 for modifying /etc/\:directfbrc (default: disabled).
 Valid norms are pal = PAL, ntsc = NTSC.
@@ -2763,8 +2763,8 @@ Matrox specific video output driver that
 end scaler on Gxxx cards through a kernel module.
 If you have a Matrox card, this is the fastest option.
 .PD 0
-.RSs
-.IPs <device>
+.Rs
+.iP <device>
 Explicitly choose the Matrox device name to use (default: /dev/\:mga_vid).
 .RE
 .PD 1
@@ -2773,8 +2773,8 @@ Explicitly choose the Matrox device name
 .B xmga (Linux, X11 only)
 The mga video output driver, running in an X11 window.
 .PD 0
-.RSs
-.IPs <device>
+.Rs
+.iP <device>
 Explicitly choose the Matrox device name to use (default: /dev/\:mga_vid).
 .RE
 .PD 1
@@ -2799,8 +2799,8 @@ This driver employs the tdfx framebuffer
 YUV acceleration on 3Dfx cards.
 FIXME: It' ok the difference between 3dfx, tdfxfb and tdfx_vid?
 .PD 0
-.RSs
-.IPs <device>
+.Rs
+.iP <device>
 Explicitly choose the fbdev device name to use (default: /dev/\:fb0).
 .RE
 .PD 1
@@ -2811,8 +2811,8 @@ Explicitly choose the fbdev device name 
 This driver directly uses the tdfx_vid kernel module.
 FIXME: It' ok the difference between 3dfx, tdfxfb and tdfx_vid?
 .PD 0
-.RSs
-.IPs <device>
+.Rs
+.iP <device>
 Explicitly choose the device name to use (default: /dev/\:tdfx_vid).
 .RE
 .PD 1
@@ -2821,8 +2821,8 @@ Explicitly choose the device name to use
 .B dxr2 (also see \-dxr2) (DXR2 only)
 Creative DXR2 specific video output driver.
 .PD 0
-.RSs
-.IPs <vo_driver>
+.Rs
+.iP <vo_driver>
 Output video subdriver to use as overlay (x11, xv).
 .RE
 .PD 1
@@ -2833,16 +2833,16 @@ Sigma Designs em8300 MPEG decoder chip (
 Hollywood Plus) specific video output driver.
 Also see the lavc video filter.
 .PD 0
-.RSs
-.IPs overlay
+.Rs
+.iP overlay
 Activates the overlay instead of TVOut.
-.IPs prebuf
+.iP prebuf
 Turns on prebuffering.
-.IPs sync\ 
+.iP sync\ 
 Will turn on the new sync-engine.
-.IPs norm=<norm>
+.iP norm=<norm>
 Specifies the TV norm.
-.RSss
+.Rt
 0: Does not change current norm (default).
 .br
 1: Auto-adjust using PAL/\:NTSC.
@@ -2854,8 +2854,8 @@ Specifies the TV norm.
 4: PAL-60
 .br
 5: NTSC
-.REss
-.IPs <0\-3>
+.rX
+.iP <0\-3>
 Specifies the device number to use if you have more than one em8300 card.
 .RE
 .PD 1
@@ -2865,11 +2865,11 @@ Specifies the device number to use if yo
 Video output driver for DVB cards that writes the output to an MPEG-PES file
 if no DVB card is installed.
 .PD 0
-.RSs
-.IPs card=<1\-4>
+.Rs
+.iP card=<1\-4>
 Specifies the device number to use if you have more than one DVB output card
 (V3 API only, such as 1.x.y series drivers).
-.IPs <filename>
+.iP <filename>
 Allows specifying the output filename (default: ./grab.mpg).
 .RE
 .PD 1
@@ -2883,16 +2883,16 @@ Video output driver for a number of MJPE
 Video output driver for a number of MJPEG capture/\:playback cards,
 second generation.
 .PD 0
-.RSs
-.IPs dev=<device>
+.Rs
+.iP dev=<device>
 Specifies the device to use.
-.IPs pal\ \ 
+.iP pal\ \ 
 Activate PAL video norm.
-.IPs secam
+.iP secam
 Activate SECAM video norm.
-.IPs ntsc\ 
+.iP ntsc\ 
 Activate NTSC video norm.
-.IPs prebuf
+.iP prebuf
 Activate prebuffering, not yet supported.
 .RE
 .PD 1
@@ -2903,8 +2903,8 @@ Calculate MD5 sums of each frame and wri
 Supports RGB24 and YV12 colorspaces.
 Useful for debugging.
 .PD 0
-.RSs
-.IPs outfile=<value>
+.Rs
+.iP outfile=<value>
 Specify the output filename (default: ./md5sums).
 .RE
 .PD 1
@@ -2919,14 +2919,14 @@ It supports the YV12, RGB (24 bpp) and B
 You can combine it with the \-fixed-vo option to concatenate files
 with the same dimensions and fps value.
 .PD 0
-.RSs
-.IPs interlaced
+.Rs
+.iP interlaced
 Write the output as interlaced frames, top field first.
-.IPs interlaced_bf
+.iP interlaced_bf
 Write the output as interlaced frames, bottom field first.
-.IPs file=<filename>
+.iP file=<filename>
 Write the output to <filename> instead of the default stream.yuv.
-.REss
+.rX
 .PD 1
 .RS
 .sp 1
@@ -2941,12 +2941,12 @@ Output each frame into a single animated
 It supports only RGB format with 24 bpp and the output is converted to 256
 colors.
 .PD 0
-.RSs
-.IPs <fps>
+.Rs
+.iP <fps>
 Float value to specify framerate (default: 5.0).
-.IPs <filename>
+.iP <filename>
 Specify the output filename (default: ./out.gif).
-.REss
+.rX
 .PD 1
 .RS
 .sp 1
@@ -2957,7 +2957,7 @@ be part of the filename.
 .I EXAMPLE:
 .RE
 .PD 0
-.RSs
+.Rs
 mplayer video.nut \-vo gif89a:15.0:test.gif
 .RE
 .PD 1
@@ -2967,23 +2967,23 @@ mplayer video.nut \-vo gif89a:15.0:test.
 Output each frame into a JPEG file in the current directory.
 Each file takes the frame number padded with leading zeros as name.
 .PD 0
-.RSs
-.IPs [no]progressive
+.Rs
+.iP [no]progressive
 Specify standard or progressive JPEG (default: noprogressive).
-.IPs [no]baseline
+.iP [no]baseline
 Specify use of baseline or not (default: baseline).
-.IPs optimize=<0\-100>
+.iP optimize=<0\-100>
 optimization factor (default: 100)
-.IPs smooth=<0\-100>
+.iP smooth=<0\-100>
 smooth factor (default: 0)
-.IPs quality=<0\-100>
+.iP quality=<0\-100>
 quality factor (default: 75)
-.IPs outdir=<dirname>
+.iP outdir=<dirname>
 Specify the directory to save the JPEG files to (default: ./).
-.IPs subdirs=<prefix>
+.iP subdirs=<prefix>
 Create numbered subdirectories with the specified prefix to
 save the files in instead of the current directory.
-.IPs maxfiles=<value> (subdirs only)
+.iP maxfiles=<value> (subdirs only)
 Maximum number of files to be saved per subdirectory.
 Must be equal to or larger than 1 (default: 1000).
 .RE
@@ -2996,25 +2996,25 @@ Each file takes the frame number padded 
 It supports PPM, PGM and PGMYUV files in both raw and ASCII mode.
 Also see pnm(5), ppm(5) and pgm(5).
 .PD 0
-.RSs
-.IPs ppm\ \ 
+.Rs
+.iP ppm\ \ 
 Write PPM files (default).
-.IPs pgm\ \ 
+.iP pgm\ \ 
 Write PGM files.
-.IPs pgmyuv
+.iP pgmyuv
 Write PGMYUV files.
 PGMYUV is like PGM, but it also contains the U and V plane, appended at the
 bottom of the picture.
-.IPs raw\ \ 
+.iP raw\ \ 
 Write PNM files in raw mode (default).
-.IPs ascii
+.iP ascii
 Write PNM files in ASCII mode.
-.IPs outdir=<dirname>
+.iP outdir=<dirname>
 Specify the directory to save the PNM files to (default: ./).
-.IPs subdirs=<prefix>
+.iP subdirs=<prefix>
 Create numbered subdirectories with the specified prefix to
 save the files in instead of the current directory.
-.IPs maxfiles=<value> (subdirs only)
+.iP maxfiles=<value> (subdirs only)
 Maximum number of files to be saved per subdirectory.
 Must be equal to or larger than 1 (default: 1000).
 .RE
@@ -3026,8 +3026,8 @@ Output each frame into a PNG file in the
 Each file takes the frame number padded with leading zeros as name.
 24bpp RGB and BGR formats are supported.
 .PD 0
-.RSs
-.IPs z=<0-9>
+.Rs
+.iP z=<0-9>
 Specifies the compression level.
 0 is no compression, 9 is maximum compression.
 .RE
@@ -3045,7 +3045,7 @@ You can force a particular format with t
 .I EXAMPLE:
 .RE
 .PD 0
-.RSs
+.Rs
 mplayer video.nut \-vf format=bgr15 \-vo tga
 .RE
 .PD 1
@@ -3067,14 +3067,14 @@ See \-ac help for a full list of availab
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-ac mp3acm"
+.Rs
+.iP "\-ac mp3acm"
 Force the l3codeca.acm MP3 codec.
-.IPs "\-ac mad,"
+.iP "\-ac mad,"
 Try libmad first, then fall back on others.
-.IPs "\-ac hwac3,a52,"
+.iP "\-ac hwac3,a52,"
 Try hardware AC3 passthrough, software AC3, then others.
-.IPs "\-ac -ffmp3,"
+.iP "\-ac -ffmp3,"
 Skip FFmpeg's MP3 decoder.
 .RE
 .PD 1
@@ -3082,10 +3082,10 @@ Skip FFmpeg's MP3 decoder.
 .TP
 .B \-af-adv <force=(0\-3):list=(filters)> (also see \-af)
 Specify advanced audio filter options:
-.RSs
-.IPs force=<0\-7>
+.Rs
+.iP force=<0\-7>
 Forces the insertion of audio filters to one of the following:
-.RSss
+.Rt
 0: completely automatic filter insertion (default)
 .br
 1: Optimize for accuracy.
@@ -3110,8 +3110,8 @@ but use floating point processing when p
 .br
 7: Use no automatic insertion of filters according to 3 above,
 and use floating point processing when possible.
-.REss
-.IPs list=<filters>
+.rX
+.iP list=<filters>
 Same as \-af.
 .RE
 .
@@ -3126,10 +3126,10 @@ See \-afm help for a full list of availa
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-afm ffmpeg"
+.Rs
+.iP "\-afm ffmpeg"
 Try FFmpeg's libavcodec codecs first.
-.IPs "\-afm acm,dshow"
+.iP "\-afm acm,dshow"
 Try Win32 codecs first.
 .RE
 .PD 1
@@ -3141,7 +3141,7 @@ incorrect or missing in the file being p
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
+.Rs
 \-aspect 4:3  or \-aspect 1.3333
 .br
 \-aspect 16:9 or \-aspect 1.7777
@@ -3162,7 +3162,7 @@ Specify libavcodec decoding parameters.
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
+.Rs
 \-lavdopts bug=1
 .RE
 .PD 1
@@ -3170,10 +3170,10 @@ Specify libavcodec decoding parameters.
 .RS
 Available options are:
 .RE
-.RSs
-.IPs bug=<value>
+.Rs
+.iP bug=<value>
 Manually work around encoder bugs.
-.RSss
+.Rt
 0: nothing
 .br
 1: autodetect bugs (default)
@@ -3197,10 +3197,10 @@ Manually work around encoder bugs.
 512 (mpeg4): direct-qpel-blocksize bug (autodetected per fourcc/\:version)
 .br
 1024 (mpeg4): edge padding bug (autodetected per fourcc/\:version)
-.REss
-.IPs debug=<value>
+.rX
+.iP debug=<value>
 Display debugging information.
-.RSss
+.Rt
 .br
 0: disabled
 .br
@@ -3229,19 +3229,19 @@ Display debugging information.
 0x0800: memory management control operations (H.264)
 .br
 0x1000: bugs
-.REss
-.IPs ec=<value>
+.rX
+.iP ec=<value>
 Set error concealment strategy.
-.RSss
+.Rt
 1: Use strong deblock filter for damaged MBs.
 .br
 2: iterative motion vector (MV) search (slow)
 .br
 3: all (default)
-.REss
-.IPs er=<value>
+.rX
+.iP er=<value>
 Set error resilience strategy.
-.RSss
+.Rt
 .br
 0: disabled
 .br
@@ -3252,23 +3252,23 @@ Set error resilience strategy.
 3: aggressive (More checks, but might cause problems even for valid bitstreams.)
 .br
 4: very aggressive
-.REss
-.IPs fast\ 
+.rX
+.iP fast\ 
 Enable optimizations which do not comply to the specification and might
 potentially cause problems, like simpler dequantization, assuming use
 of the default quantization matrix, assuming YUV 4:2:0 and skipping a few
 checks to detect damaged bitstreams.
-.IPs gray\ 
+.iP gray\ 
 grayscale only decoding (a bit faster than with color)
-.IPs "idct=<0\-99> (see \-lavcopts)"
+.iP "idct=<0\-99> (see \-lavcopts)"
 For best decoding quality use the same IDCT algorithm for decoding and encoding.
 This may come at a price in accuracy, though.
-.IPs lowres=<number>[,<w>]
+.iP lowres=<number>[,<w>]
 Decode at lower resolutions.
 Low resolution decoding is not supported by all codecs, and it will
 often result in ugly artifacts.
 This is not a bug, but a side effect of not decoding at full resolution.
-.RSss
+.Rt
 .br
 0: disabled
 .br
@@ -3277,18 +3277,18 @@ This is not a bug, but a side effect of 
 2: 1/4 resolution
 .br
 3: 1/8 resolution
-.REss
+.rX
 .RS
 If <w> is specified lowres decoding will be used only if the width of the
 video is major than or equal to <w>.
 .RE
-.IPs "sb=<number> (MPEG-2 only)"
+.iP "sb=<number> (MPEG-2 only)"
 Skip the given number of macroblock rows at the bottom.
-.IPs "st=<number> (MPEG-2 only)"
+.iP "st=<number> (MPEG-2 only)"
 Skip the given number of macroblock rows at the top.
-.IPs vismv=<value>
+.iP vismv=<value>
 Visualize motion vectors.
-.RSss
+.Rt
 .br
 0: disabled
 .br
@@ -3297,8 +3297,8 @@ Visualize motion vectors.
 2: Visualize forward predicted MVs of B-frames.
 .br
 4: Visualize backward predicted MVs of B-frames.
-.REss
-.IPs vstats
+.rX
+.iP vstats
 Prints some statistics and stores them in ./vstats_*.log.
 .RE
 .
@@ -3344,23 +3344,23 @@ Specifies software scaler parameters.
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
+.Rs
 \-vf scale \-ssf lgb=3.0
 .RE
 .PD 1
 .PD 0
-.RSs
-.IPs lgb=<0\-100>
+.Rs
+.iP lgb=<0\-100>
 gaussian blur filter (luma)
-.IPs cgb=<0\-100>
+.iP cgb=<0\-100>
 gaussian blur filter (chroma)
-.IPs ls=<0\-100>
+.iP ls=<0\-100>
 sharpen filter (luma)
-.IPs cs=<0\-100>
+.iP cs=<0\-100>
 sharpen filter (chroma)
-.IPs chs=<h>
+.iP chs=<h>
 chroma horizontal shifting
-.IPs cvs=<v>
+.iP cvs=<v>
 chroma vertical shifting
 .RE
 .PD 1
@@ -3369,12 +3369,12 @@ chroma vertical shifting
 .B \-stereo <mode>
 Select type of MP2/\:MP3 stereo output.
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 stereo
-.IPs 1
+.iP 1
 left channel
-.IPs 2
+.iP 2
 right channel
 .RE
 .PD 1
@@ -3387,28 +3387,28 @@ This affects video output drivers which 
 Available types are:
 .sp 1
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 fast bilinear
-.IPs 1
+.iP 1
 bilinear
-.IPs 2
+.iP 2
 bicubic (good quality) (default)
-.IPs 3
+.iP 3
 experimental
-.IPs 4
+.iP 4
 nearest neighbour (bad quality)
-.IPs 5
+.iP 5
 area
-.IPs 6
+.iP 6
 luma bicubic / chroma bilinear
-.IPs 7
+.iP 7
 gauss
-.IPs 8
+.iP 8
 sincR
-.IPs 9
+.iP 9
 lanczos
-.IPs 10
+.iP 10
 natural bicubic spline
 .RE
 .PD 1
@@ -3433,14 +3433,14 @@ See \-vc help for a full list of availab
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-vc divx"
+.Rs
+.iP "\-vc divx"
 Force Win32/\:VFW DivX codec, no fallback.
-.IPs "\-vc divx4,"
+.iP "\-vc divx4,"
 Try divx4linux codec first, then fall back on others.
-.IPs "\-vc -divxds,-divx,"
+.iP "\-vc -divxds,-divx,"
 Skip Win32 DivX codecs.
-.IPs "\-vc ffmpeg12,mpeg12,"
+.iP "\-vc ffmpeg12,mpeg12,"
 Try libavcodec's MPEG-1/2 codec, then libmpeg2, then others.
 .RE
 .PD 1
@@ -3456,11 +3456,11 @@ See \-vfm help for a full list of availa
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-vfm ffmpeg,dshow,vfw"
+.Rs
+.iP "\-vfm ffmpeg,dshow,vfw"
 Try the libavcodec, then Directshow, then VfW codecs and fall back
 on others, if they do not work.
-.IPs "\-vfm xanim"
+.iP "\-vfm xanim"
 Try XAnim codecs first.
 .RE
 .PD 1
@@ -3480,16 +3480,16 @@ postprocessing filter (\-vf pp) and deco
 .sp 1
 XviD's internal postprocessing filters:
 .PD 0
-.RSs
-.IPs deblock-chroma (also see \-vf pp)
+.Rs
+.iP deblock-chroma (also see \-vf pp)
 chroma deblock filter
-.IPs deblock-luma (also see \-vf pp)
+.iP deblock-luma (also see \-vf pp)
 luma deblock filter
-.IPs dering-luma (also see \-vf pp)
+.iP dering-luma (also see \-vf pp)
 luma deringing filter
-.IPs dering-chroma (also see \-vf pp)
+.iP dering-chroma (also see \-vf pp)
 chroma deringing filter
-.IPs filmeffect (also see \-vf noise)
+.iP filmeffect (also see \-vf noise)
 Adds artificial film grain to the video.
 May increase perceived quality, while lowering true quality.
 .RE
@@ -3498,10 +3498,10 @@ May increase perceived quality, while lo
 rendering methods:
 .RE
 .PD 0
-.RSs
-.IPs dr2\ \ 
+.Rs
+.iP dr2\ \ 
 Activate direct rendering method 2.
-.IPs nodr2
+.iP nodr2
 Deactivate direct rendering method 2.
 .RE
 .PD 1
@@ -3509,10 +3509,10 @@ Deactivate direct rendering method 2.
 .TP
 .B \-xy <value> (also see \-zoom)
 .PD 0
-.RSs
-.IPs value<=8
+.Rs
+.iP value<=8
 Scale image by factor <value>.
-.IPs value>8
+.iP value>8
 Set width to value and calculate height to keep correct aspect ratio.
 .RE
 .PD 1
@@ -3555,27 +3555,27 @@ It only supports 16-bit integer and floa
 .I NOTE:
 With MEncoder, you need to also use \-srate <srate>.
 .PD 0
-.RSs
-.IPs <srate>
+.Rs
+.iP <srate>
 output sample frequency in Hz.
 The valid range for this parameter is 8000 to 192000.
 If the input and output sample frequency are the same or if this
 parameter is omitted the filter is automatically unloaded.
 A high sample frequency normally improves the audio quality,
 especially when used in combination with other filters.
-.IPs <sloppy>
+.iP <sloppy>
 Allow (1) or disallow (0) the output frequency to differ slightly
 from the frequency given by <srate> (default: 1).
 Can be used if the startup of the playback is extremely slow.
-.IPs <type>
+.iP <type>
 Selects which resampling method to use.
-.RSss
+.Rt
 0: linear interpolation (fast, poor quality especially when upsampling)
 .br
 1: polyphase filterbank and integer processing
 .br
 2: polyphase filterbank and floating point processing (slow, best quality)
-.REss
+.rX
 .PD 1
 .RE
 .sp 1
@@ -3583,8 +3583,8 @@ Selects which resampling method to use.
 .I EXAMPLE:
 .RE
 .PD 0
-.RSs
-.IPs "mplayer -af resample=44100:0:0"
+.Rs
+.iP "mplayer -af resample=44100:0:0"
 would set the output frequency of the resample filter to 44100Hz using
 exact output frequency scaling and linear interpolation.
 .RE
@@ -3598,18 +3598,18 @@ It only supports the 16-bit native-endia
 .I NOTE:
 With MEncoder, you need to also use \-srate <srate>.
 .PD 0
-.RSs
-.IPs <srate>
+.Rs
+.iP <srate>
 the output sample rate
-.IPs <length>
+.iP <length>
 length of the filter with respect to the lower sampling rate (default: 16)
-.IPs <linear>
+.iP <linear>
 if 1 then filters will be linearly interpolated between polyphase entries
-.IPs <count>
+.iP <count>
 log2 of the number of polyphase entries
 (..., 10->1024, 11->2048, 12->4096, ...)
 (default: 10->1024)
-.IPs <cutoff>
+.iP <cutoff>
 cutoff frequency (0.0-1.0), default set depending upon filter length
 .RE
 .PD 1
@@ -3618,8 +3618,8 @@ cutoff frequency (0.0-1.0), default set 
 .B sweep[=speed]
 Produces a sine sweep.
 .PD 0
-.RSs
-.IPs <0.0\-1.0>
+.Rs
+.iP <0.0\-1.0>
 Sine function delta, use very low values to hear the sweep.
 .RE
 .PD 1
@@ -3631,10 +3631,10 @@ Head-related transfer function: Converts
 .sp 1
 .PD 0
 .RS
-.IPs "Flag  Meaning"
-.IPs "m     matrix decoding of the rear channel"
-.IPs "s     2-channel matrix decoding"
-.IPs "0     no matrix decoding (default)"
+.iP "Flag  Meaning"
+.iP "m     matrix decoding of the rear channel"
+.iP "s     2-channel matrix decoding"
+.iP "0     no matrix decoding (default)"
 .RE
 .PD 1
 .
@@ -3646,17 +3646,17 @@ The center frequencies for the 10 bands 
 .sp 1
 .PD 0
 .RS
-.IPs "No. frequency"
-.IPs "0    31.25 Hz"
-.IPs "1    62.50 Hz"
-.IPs "2   125.00 Hz"
-.IPs "3   250.00 Hz"
-.IPs "4   500.00 Hz"
-.IPs "5    1.00 kHz"
-.IPs "6    2.00 kHz"
-.IPs "7    4.00 kHz"
-.IPs "8    8.00 kHz"
-.IPs "9   16.00 kHz"
+.iP "No. frequency"
+.iP "0    31.25 Hz"
+.iP "1    62.50 Hz"
+.iP "2   125.00 Hz"
+.iP "3   250.00 Hz"
+.iP "4   500.00 Hz"
+.iP "5    1.00 kHz"
+.iP "6    2.00 kHz"
+.iP "7    4.00 kHz"
+.iP "8    8.00 kHz"
+.iP "9   16.00 kHz"
 .RE
 .PD 1
 .sp 1
@@ -3670,8 +3670,8 @@ This problem can be worked around by ups
 using the resample filter before it reaches this filter.
 .RE
 .PD 0
-.RSs
-.IPs <g1>:<g2>:<g3>:...:<g10>
+.Rs
+.iP <g1>:<g2>:<g3>:...:<g10>
 floating point numbers representing the gain in dB
 for each frequency band (-12\-12)
 .RE
@@ -3679,8 +3679,8 @@ for each frequency band (-12\-12)
 .RS
 .I EXAMPLE:
 .RE
-.RSs
-.IPs "mplayer \-af equalizer=11:11:10:5:0:-12:0:5:12:12 media.avi"
+.Rs
+.iP "mplayer \-af equalizer=11:11:10:5:0:-12:0:5:12:12 media.avi"
 Would amplify the sound in the upper and lower frequency region
 while canceling it almost completely around 1kHz.
 .RE
@@ -3697,25 +3697,25 @@ channels).
 If the number of output channels is smaller than the number
 of input channels the exceeding channels are truncated.
 .PD 0
-.RSs
-.IPs <nch>
+.Rs
+.iP <nch>
 number of output channels (1\-6)
-.IPs <nr>\ 
+.iP <nr>\ 
 number of routes (1\-6)
-.IPs <from1:to1:from2:to2:from3:to3:...>
+.iP <from1:to1:from2:to2:from3:to3:...>
 Pairs of numbers between 0 and 5 that define where to route each channel.
 .RE
 .sp 1
 .RS
 .I EXAMPLE:
 .RE
-.RSs
-.IPs "mplayer -af channels=4:4:0:1:1:0:2:2:3:3 media.avi"
+.Rs
+.iP "mplayer -af channels=4:4:0:1:1:0:2:2:3:3 media.avi"
 Would change the number of channels to 4 and set up 4 routes that
 swap channel 0 and channel 1 and leave channel 2 and 3 intact.
 Observe that if media containing two channels was played back, channels
 2 and 3 would contain silence but 0 and 1 would still be swapped.
-.IPs "mplayer -af channels=6:4:0:0:0:1:0:2:0:3 media.avi"
+.iP "mplayer -af channels=6:4:0:0:0:1:0:2:0:3 media.avi"
 Would change the number of channels to 6 and set up 4 routes
 that copy channel 0 to channels 0 to 3.
 Channel 4 and 5 will contain silence.
@@ -3727,8 +3727,8 @@ Channel 4 and 5 will contain silence.
 Convert between different sample formats.
 Automatically enabled when needed by the sound card or another filter.
 .PD 0
-.RSs
-.IPs <format>
+.Rs
+.iP <format>
 Sets the desired format.
 The general form is 'sbe', where 's' denotes the sign (either 's' for signed
 or 'u' for unsigned), 'b' denotes the number of bits per sample (16, 24 or 32)
@@ -3764,12 +3764,12 @@ MEncoder such that the maximum dynamic r
 This filter is not reentrant and can therefore only be enabled
 once for every audio stream.
 .PD 0
-.RSs
-.IPs <v>\ \ 
+.Rs
+.iP <v>\ \ 
 Sets the desired gain in dB for all channels in the stream
 from -200dB to +60dB, where -200dB mutes the sound
 completely and +60dB equals a gain of 1000 (default: 0).
-.IPs <sc>\ 
+.iP <sc>\ 
 Turns soft clipping on (1) or off (0).
 Soft-clipping can make the sound more smooth if very
 high volume levels are used.
@@ -3783,8 +3783,8 @@ This feature creates distortion and shou
 .RS
 .I EXAMPLE:
 .RE
-.RSs
-.IPs "mplayer -af volume=10.1:0 media.avi"
+.Rs
+.iP "mplayer -af volume=10.1:0 media.avi"
 would amplify the sound by 10.1dB and hard-clip if the
 sound level is too high.
 .RE
@@ -3804,20 +3804,20 @@ the number of output channels.
 An example how to downmix a six-channel file to two channels with
 this filter can be found in the examples section near the end.
 .PD 0
-.RSs
-.IPs <n>\ \ 
+.Rs
+.iP <n>\ \ 
 number of input channels (1\-6)
-.IPs <lij>
+.iP <lij>
 How much of input channel j is mixed into output channel i (0\-1).
 .RE
 .sp 1
 .RS
 .I EXAMPLE:
 .RE
-.RSs
-.IPs "mplayer -af pan=1:0.5:0.5 -channels 1 media.avi"
+.Rs
+.iP "mplayer -af pan=1:0.5:0.5 -channels 1 media.avi"
 Would down-mix from stereo to mono.
-.IPs "mplayer -af pan=3:1:0:1:0.5:0.5 -channels 3 media.avi"
+.iP "mplayer -af pan=3:1:0:1:0.5:0.5 -channels 3 media.avi"
 Would give 3 channel output leaving channels 0 and 1 intact,
 and mix channels 0 and 1 into output channel 2 (which could
 be sent to a subwoofer for example).
@@ -3838,12 +3838,12 @@ Disable this filter when you are playing
 Digital 5.1 sound, otherwise this filter will disrupt
 the sound to the subwoofer.
 .PD 0
-.RSs
-.IPs <fc>\ 
+.Rs
+.iP <fc>\ 
 cutoff frequency in Hz for the low-pass filter (20Hz to 300Hz) (default: 60Hz)
 For the best result try setting the cutoff frequency as low as possible.
 This will improve the stereo or surround sound experience.
-.IPs <ch>\ 
+.iP <ch>\ 
 Determines the channel number in which to insert the sub-channel audio.
 Channel number can be between 0 and 5 (default: 5).
 Observe that the number of channels will automatically
@@ -3853,8 +3853,8 @@ be increased to <ch> if necessary.
 .RS
 .I EXAMPLE:
 .RE
-.RSs
-.IPs "mplayer -af sub=100:4 -channels 5 media.avi"
+.Rs
+.iP "mplayer -af sub=100:4 -channels 5 media.avi"
 would add a sub-woofer channel with a cutoff frequency of
 100Hz to output channel 4.
 .RE
@@ -3867,14 +3867,14 @@ May currently be low quality as it does 
 high-pass filter for proper extraction yet, but averages and
 halves the channels instead.
 .PD 0
-.RSs
-.IPs <ch>\ 
+.Rs
+.iP <ch>\ 
 Determines the channel number in which to insert the center channel.
 Channel number can be between 0 and 5 (default: 5).
 Observe that the number of channels will automatically
 be increased to <ch> if necessary.
 .RE
-.PD1
+.PD 1
 .
 .TP
 .B surround[=delay]
@@ -3882,8 +3882,8 @@ Decoder for matrix encoded surround soun
 Many files with 2 channel audio actually contain matrixed surround sound.
 Requires a sound card supporting at least 4 channels.
 .PD 0
-.RSs
-.IPs <delay>
+.Rs
+.iP <delay>
 delay time in ms for the rear speakers (0 to 1000) (default: 20)
 This delay should be set as follows: If d1 is the distance
 from the listening position to the front speakers and d2 is the distance
@@ -3894,8 +3894,8 @@ be set to 15ms if d1 <= d2 and to 15 + 5
 .RS
 .I EXAMPLE:
 .RE
-.RSs
-.IPs "mplayer \-af surround=15 \-channels 4 media.avi"
+.Rs
+.iP "mplayer \-af surround=15 \-channels 4 media.avi"
 Would add surround sound decoding with 15ms delay for the sound to the
 rear speakers.
 .RE
@@ -3907,8 +3907,8 @@ Delays the sound to the loudspeakers suc
 different channels arrives at the listening position simultaneously.
 It is only useful if you have more than 2 loudspeakers.
 .PD 0
-.RSs
-.IPs ch1,ch2,...
+.Rs
+.iP ch1,ch2,...
 The delay in ms that should be imposed on each channel
 (floating point number between 0 and 1000).
 .RE
@@ -3932,8 +3932,8 @@ Calculate the required delays in ms as d
 .RS
 .I EXAMPLE:
 .RE
-.RSs
-.IPs "mplayer \-af delay=10.5:10.5:0:0:7:0 media.avi"
+.Rs
+.iP "mplayer \-af delay=10.5:10.5:0:0:7:0 media.avi"
 Would delay front left and right by 10.5ms, the two rear channels
 and the sub by 0ms and the center channel by 7ms.
 .RE
@@ -3953,18 +3953,18 @@ unsigned long long counter   /*Used to k
 .sp 1
 The rest is payload (non-interleaved) 16 bit data.
 .PD 0
-.RSs
-.IPs <mmapped_file>
+.Rs
+.iP <mmapped_file>
 file to map data to (default: ~/.mplayer/\:mplayer-af_export)
-.IPs <nsamples>
+.iP <nsamples>
 number of samples per channel (default: 512)
 .RE
 .sp 1
 .RS
 .I EXAMPLE:
 .RE
-.RSs
-.IPs "mplayer \-af export=/tmp/mplayer-af_export:1024 media.avi"
+.Rs
+.iP "mplayer \-af export=/tmp/mplayer-af_export:1024 media.avi"
 Would export 1024 samples per channel to '/tmp/mplayer-af_export'.
 .RE
 .PD 1
@@ -3974,8 +3974,8 @@ Would export 1024 samples per channel to
 (Linearly) increases the difference between left and right channels
 which adds some sort of "live" effect to playback.
 .PD 0
-.RSs
-.IPs <mul>
+.Rs
+.iP <mul>
 Sets the difference coefficient (default: 2.5).
 0.0 means mono sound (average of both channels), with 1.0 sound will be
 unchanged, with -1.0 left and right channels will be swapped.
@@ -3991,17 +3991,17 @@ Maximizes the volume without distorting 
 Load a LADSPA (Linux Audio Developer's Simple Plugin API) plugin.
 This filter is reentrant, so multiple LADSPA plugins can be used at once.
 .PD 0
-.RSs
-.IPs <file>
+.Rs
+.iP <file>
 Specifies the LADSPA plugin library file.
 If LADSPA_PATH is set, it searches for the specified file.
 If it is not set, you must supply a fully specified pathname.
-.IPs <label>
+.iP <label>
 Specifies the filter within the library.
 Some libraries contain only one filter, but others contain many of them.
 Entering 'help' here, will list all available filters within the specified
 library, which eliminates the use of 'listplugins' from the LADSPA SDK.
-.IPs <controls>
+.iP <controls>
 Controls are zero or more floating point values that determine the
 behaviour of the loaded plugin (for example delay, threshold or gain).
 In verbose mode (add \-v to the MPlayer command line), all available controls
@@ -4087,10 +4087,10 @@ Available filters are:
 Crops the given part of the image and discards the rest.
 Useful to remove black bands from widescreen movies.
 .PD 0
-.RSs
-.IPs <w>,<h>
+.Rs
+.iP <w>,<h>
 Cropped width and height, defaults to original width and height.
-.IPs <x>,<y>
+.iP <x>,<y>
 Position of the cropped picture, defaults to center.
 .RE
 .PD 1
@@ -4100,12 +4100,12 @@ Position of the cropped picture, default
 Calculates necessary cropping parameters and prints the recommended parameters
 to stdout.
 .PD 0
-.RSs
-.IPs <limit>
+.Rs
+.iP <limit>
 Threshold, which can be optionally specified from nothing (0) to
 everything (255) (default: 24).
 .br
-.IPs <round>
+.iP <round>
 Value which the width/\:height should be divisible by (default: 16).
 The offset is automatically adjusted to center the video.
 Use 2 to get only even dimensions (needed for 4:2:2 video).
@@ -4118,11 +4118,11 @@ Use 2 to get only even dimensions (neede
 The plugin responds to the input.conf directive 'change_rectangle'
 that takes two parameters.
 .PD 0
-.RSs
-.IPs <w>,<h>
+.Rs
+.iP <w>,<h>
 width and height (default: -1, maximum possible width where boundaries
 are still visible.)
-.IPs <x>,<y>
+.iP <x>,<y>
 top left corner position (default: -1, uppermost leftmost)
 .RE
 .PD 1
@@ -4132,27 +4132,27 @@ top left corner position (default: -1, u
 Expands (not scales) movie resolution to the given value and places the
 unscaled original at coordinates x, y.
 Can be used for placing subtitles/\:OSD in the resulting black bands.
-.RSs
-.IPs <w>,<h>
+.Rs
+.iP <w>,<h>
 Expanded width,height (default: original width,height).
 Negative values for w and h are treated as offsets to the original size.
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
+.Rs
 .IP expand=0:-50:0:0
 Adds a 50 pixel border to the bottom of the picture.
 .RE
 .PD 1
-.IPs <x>,<y>
+.iP <x>,<y>
 position of original image on the expanded image (default: center)
-.IPs <o>\ 
+.iP <o>\ 
 OSD/\:subtitle rendering
-.RSss
+.Rt
 0: disable (default)
 .br
 1: enable
-.REss
+.rX
 .RE
 .
 .TP
@@ -4168,14 +4168,14 @@ Mirrors the image on the Y axis.
 Rotates the image by 90 degrees and optionally flips it.
 For values between 4\-7 rotation is only done if the movie geometry is
 portrait and not landscape.
-.RSs
-.IPs 0
+.Rs
+.iP 0
 Rotate by 90 degrees clockwise and flip (default).
-.IPs 1
+.iP 1
 Rotate by 90 degrees clockwise.
-.IPs 2
+.iP 2
 Rotate by 90 degrees counterclockwise.
-.IPs 3
+.iP 3
 Rotate by 90 degrees counterclockwise and flip.
 .RE
 .
@@ -4183,14 +4183,14 @@ Rotate by 90 degrees counterclockwise an
 .B scale[=w:h[:interlaced[:chr_drop[:param[:param2[:presize]]]]]]
 Scales the image with the software scaler (slow) and performs a YUV<\->RGB
 colorspace conversion (also see \-sws).
-.RSs
-.IPs <w>,<h>
+.Rs
+.iP <w>,<h>
 scaled width/\:height (default: original width/\:height)
 .br
 .I NOTE:
 If \-zoom is used, and underlying filters (including libvo) are
 incapable of scaling, it defaults to d_width/\:d_height!
-.RSss
+.Rt
  0:   scaled d_width/\:d_height
 .br
 -1:   original width/\:height
@@ -4200,17 +4200,17 @@ incapable of scaling, it defaults to d_w
 -3:   Calculate w/\:h using the other dimension and the original aspect ratio.
 .br
 -(n+8): Like -n above, but rounding the dimension to the closest multiple of 16.
-.REss
-.IPs <interlaced>
+.rX
+.iP <interlaced>
 Toggle interlaced scaling.
-.RSss
+.Rt
 0: off (default)
 .br
 1: on
-.REss
-.IPs <chr_drop>
+.rX
+.iP <chr_drop>
 chroma skipping
-.RSss
+.Rt
 0: Use all available input lines for chroma.
 .br
 1: Use only every 2. input line for chroma.
@@ -4218,11 +4218,11 @@ chroma skipping
 2: Use only every 4. input line for chroma.
 .br
 3: Use only every 8. input line for chroma.
-.REss
-.IPs "<param>[:<param2>] (also see \-sws)"
+.rX
+.iP "<param>[:<param2>] (also see \-sws)"
 Set some scaling parameters depending on the type of scaler selected
 with \-sws.
-.RSss
+.Rt
 \-sws 2 (bicubic):  B (blurring) and C (ringing)
 .br
 0.00:0.60 default
@@ -4238,10 +4238,10 @@ with \-sws.
 \-sws 7 (gaussian): sharpness (0 (soft) \- 100 (sharp))
 .br
 \-sws 9 (lanczos):  filter length (1\-10)
-.REss
-.IPs <presize>
+.rX
+.iP <presize>
 Scale to preset sizes.
-.RSss
+.Rt
 qntsc:   352x240 (NTSC quarter screen)
 .br
 qpal:    352x288 (PAL quarter screen)
@@ -4253,7 +4253,7 @@ pal:     720x576 (standard PAL)
 sntsc:   640x480 (square pixel NTSC)
 .br
 spal:    768x576 (square pixel PAL)
-.REss
+.rX
 .RE
 .
 .TP
@@ -4288,8 +4288,8 @@ Clamps YUV color values to the CCIR 601 
 .B rgb2bgr[=swap]
 RGB 24/\:32 <\-> BGR 24/\:32 colorspace conversion.
 .PD 0
-.RSs
-.IPs swap\ 
+.Rs
+.iP swap\ 
 Also perform  R <-> B swapping.
 .RE
 .PD 1
@@ -4306,8 +4306,8 @@ Use together with the scale filter for a
 .I NOTE:
 For a list of available formats see format=fmt=help.
 .PD 0
-.RSs
-.IPs <fourcc>
+.Rs
+.iP <fourcc>
 format name like rgb15, bgr24, yv12, etc (default: yuy2)
 .RE
 .PD 1
@@ -4322,8 +4322,8 @@ the one you specify.
 .I NOTE:
 For a list of available formats see noformat=fmt=help.
 .PD 0
-.RSs
-.IPs <fourcc>
+.Rs
+.iP <fourcc>
 format name like rgb15, bgr24, yv12, etc (default: yv12)
 .RE
 .PD 1
@@ -4337,14 +4337,14 @@ Each subfilter and some options have a s
 used interchangeably, i.e.\& dr/dering are the same.
 All subfilters share common options to determine their scope:
 .PD 0
-.RSs
-.IPs a/autoq
+.Rs
+.iP a/autoq
 Automatically switch the subfilter off if the CPU is too slow.
-.IPs c/chrom
+.iP c/chrom
 Do chrominance filtering, too (default).
-.IPs y/nochrom
+.iP y/nochrom
 Do luminance filtering only (no chrominance).
-.IPs n/noluma
+.iP n/noluma
 Do chrominance filtering only (no luminance).
 .RE
 .PD 1
@@ -4356,95 +4356,95 @@ Do chrominance filtering only (no lumina
 .sp 1
 Available subfilters are
 .RE
-.RSs
-.IPs hb/hdeblock[:difference[:flatness]]
+.Rs
+.iP hb/hdeblock[:difference[:flatness]]
 horizontal deblocking filter
-.RSss
+.Rt
 <difference>: Difference factor where higher values mean
 more deblocking (default: 32).
 .br
 <flatness>: Flatness threshold where lower values mean
 more deblocking (default: 39).
-.REss
-.IPs vb/vdeblock[:difference[:flatness]]
+.rX
+.iP vb/vdeblock[:difference[:flatness]]
 vertical deblocking filter
-.RSss
+.Rt
 <difference>: Difference factor where higher values mean
 more deblocking (default: 32).
 .br
 <flatness>: Flatness threshold where lower values mean
 more deblocking (default: 39).
-.REss
-.IPs ha/hadeblock[:difference[:flatness]]
+.rX
+.iP ha/hadeblock[:difference[:flatness]]
 accurate horizontal deblocking filter
-.RSss
+.Rt
 <difference>: Difference factor where higher values mean
 more deblocking (default: 32).
 .br
 <flatness>: Flatness threshold where lower values mean
 more deblocking (default: 39).
-.REss
-.IPs va/vadeblock[:difference[:flatness]]
+.rX
+.iP va/vadeblock[:difference[:flatness]]
 accurate vertical deblocking filter
-.RSss
+.Rt
 <difference>: Difference factor where higher values mean
 more deblocking (default: 32).
 .br
 <flatness>: Flatness threshold where lower values mean
 more deblocking (default: 39).
-.REss
+.rX
 .sp 1
 The horizontal and vertical deblocking filters share the
 difference and flatness values so you cannot set
 different horizontal and vertical thresholds.
 .sp 1
-.IPs h1/x1hdeblock
+.iP h1/x1hdeblock
 experimental horizontal deblocking filter
-.IPs v1/x1vdeblock
+.iP v1/x1vdeblock
 experimental vertical deblocking filter
-.IPs dr/dering
+.iP dr/dering
 deringing filter
-.IPs tn/tmpnoise[:threshold1[:threshold2[:threshold3]]]
+.iP tn/tmpnoise[:threshold1[:threshold2[:threshold3]]]
 temporal noise reducer
-.RSss
+.Rt
 <threshold1>: larger -> stronger filtering
 .br
 <threshold2>: larger -> stronger filtering
 .br
 <threshold3>: larger -> stronger filtering
-.REss
-.IPs al/autolevels[:f/fullyrange]
+.rX
+.iP al/autolevels[:f/fullyrange]
 automatic brightness / contrast correction
-.RSss
+.Rt
 f/fullyrange: Stretch luminance to (0\-255).
-.REss
-.IPs lb/linblenddeint
+.rX
+.iP lb/linblenddeint
 Linear blend deinterlacing filter that deinterlaces the given block
 by filtering all lines with a (1 2 1) filter.
-.IPs li/linipoldeint
+.iP li/linipoldeint
 Linear interpolating deinterlacing filter that deinterlaces the given block
 by linearly interpolating every second line.
-.IPs ci/cubicipoldeint
+.iP ci/cubicipoldeint
 Cubic interpolating deinterlacing filter deinterlaces the given block
 by cubically interpolating every second line.
-.IPs md/mediandeint
+.iP md/mediandeint
 Median deinterlacing filter that deinterlaces the given block
 by applying a median filter to every second line.
-.IPs fd/ffmpegdeint
+.iP fd/ffmpegdeint
 FFmpeg deinterlacing filter that deinterlaces the given block
 by filtering every second line with a (-1 4 2 4 -1) filter.
-.IPs l5/lowpass5
+.iP l5/lowpass5
 Vertically applied FIR lowpass deinterlacing filter that deinterlaces
 the given block by filtering all lines with a (-1 2 6 2 -1) filter.
-.IPs fq/forceQuant[:quantizer]
+.iP fq/forceQuant[:quantizer]
 Overrides the quantizer table from the input with the constant
 quantizer you specify.
-.RSss
+.Rt
 <quantizer>: quantizer to use
-.REss
-.IPs de/default
+.rX
+.iP de/default
 default pp filter combination (hb:a,vb:a,dr:a)
-.IPs fa/fast
+.iP fa/fast
 fast pp filter combination (h1:a,v1:a,dr:a)
 .RE
 .RS
@@ -4452,15 +4452,15 @@ fast pp filter combination (h1:a,v1:a,dr
 .I EXAMPLE:
 .RE
 .PD 0
-.RSs
-.IPs "\-vf pp=hb/vb/dr/al"
+.Rs
+.iP "\-vf pp=hb/vb/dr/al"
 horizontal and vertical deblocking, deringing and automatic
 brightness/\:contrast
-.IPs "\-vf pp=de/-al"
+.iP "\-vf pp=de/-al"
 default filters without brightness/\:contrast correction
-.IPs "\-vf pp=default/tmpnoise:1:2:3"
+.iP "\-vf pp=default/tmpnoise:1:2:3"
 Enable default filters & temporal denoiser.
-.IPs "\-vf pp=hb:y/vb:a"
+.iP "\-vf pp=hb:y/vb:a"
 Horizontal deblocking on luminance only, and switch vertical deblocking
 on or off automatically depending on available CPU time.
 .RE
@@ -4469,12 +4469,12 @@ on or off automatically depending on ava
 .TP
 .B spp[=quality[:qp[:mode]]]
 simple postprocessing filter
-.RSs
-.IPs <quality>
+.Rs
+.iP <quality>
 0\-6 (default: 3)
-.IPs <qp>\ 
+.iP <qp>\ 
 Force quantization parameter (default: 0, use QP from video).
-.IPs <mode>
+.iP <mode>
 0: hard thresholding (default)
 .br
 1: soft thresholding (better deringing, but blurrier)
@@ -4483,8 +4483,8 @@ Force quantization parameter (default: 0
 .TP
 .B qp=equation
 quantization parameter (QP) change filter
-.RSs
-.IPs <equation>
+.Rs
+.iP <equation>
 some equation like "2+2*sin(PI*qp)"
 .RE
 .
@@ -4501,14 +4501,14 @@ You should see a red, green and blue str
 .B lavc[=quality:fps]
 Fast software YV12 to MPEG-1 conversion with libavcodec for use with DVB/\:DXR3.
 Faster and of better quality than \-vf fame.
-.RSs
-.IPs <quality>
-.RSss
+.Rs
+.iP <quality>
+.Rt
 1\-31: fixed qscale
 .br
 32\-:  fixed bitrate in kBits
-.REss
-.IPs <fps>
+.rX
+.iP <fps>
 force output fps (float value) (default: 0, autodetect based on height)
 .RE
 .
@@ -4521,8 +4521,8 @@ Fast software YV12 to MPEG-1 conversion 
 Set up optimal scaling for DVB cards, scaling the x axis in hardware and
 calculating the y axis scaling in software to keep aspect.
 Only useful together with expand and scale.
-.RSs
-.IPs <aspect>
+.Rs
+.iP <aspect>
 Control aspect ratio, calculate as DVB_HEIGHT*ASPECTRATIO (default:
 576*4/\:3=768), set it to 576*(16/\:9)=1024 for a 16:9 TV.
 .RE
@@ -4531,8 +4531,8 @@ Control aspect ratio, calculate as DVB_H
 .I EXAMPLE:
 .RE
 .PD 0
-.RSs
-.IPs "\-vf dvbscale,scale=-1:0,expand=-1:576:-1:-1:1,lavc"
+.Rs
+.iP "\-vf dvbscale,scale=-1:0,expand=-1:576:-1:-1:1,lavc"
 FIXME: Explain what this does.
 .RE
 .PD 1
@@ -4541,20 +4541,20 @@ FIXME: Explain what this does.
 .B noise[=luma[u][t|a][h][p]:chroma[u][t|a][h][p]]
 Adds noise.
 .PD 0
-.RSs
-.IPs <0\-100>
+.Rs
+.iP <0\-100>
 luma noise
-.IPs <0\-100>
+.iP <0\-100>
 chroma noise
-.IPs u
+.iP u
 uniform noise (gaussian otherwise)
-.IPs t
+.iP t
 temporal noise (noise pattern changes between frames)
-.IPs a
+.iP a
 averaged temporal noise (smoother, but a lot slower)
-.IPs h
+.iP h
 high quality (slightly better looking, slightly slower)
-.IPs p
+.iP p
 mix random noise with a (semi)regular pattern
 .RE
 .PD 1
@@ -4564,12 +4564,12 @@ mix random noise with a (semi)regular pa
 This filter aims to reduce image noise producing smooth images and making still
 images really still (This should enhance compressibility.).
 .PD 0
-.RSs
-.IPs <luma>
+.Rs
+.iP <luma>
 spatial luma strength (default: 4)
-.IPs <chroma>
+.iP <chroma>
 spatial chroma strength (default: 3)
-.IPs <time>
+.iP <time>
 temporal strength (default: 6)
 .RE
 .PD 1
@@ -4588,10 +4588,10 @@ Might also be useful with MEncoder, eith
 movies, or for slightly reducing contrast to mask artifacts and get by
 with lower bitrates.
 .PD 0
-.RSs
-.IPs <-100\-100>
+.Rs
+.iP <-100\-100>
 initial brightness
-.IPs <-100\-100>
+.iP <-100\-100>
 initial contrast
 .RE
 .PD 1
@@ -4605,23 +4605,23 @@ Note that it uses the same MMX optimized
 gamma values are 1.0.
 The parameters are given as floating point values.
 .PD 0
-.RSs
-.IPs <0.1\-10>
+.Rs
+.iP <0.1\-10>
 initial gamma value (default: 1.0)
-.IPs <-2\-2>
+.iP <-2\-2>
 initial contrast, where negative values result in a
 negative image (default: 1.0)
-.IPs <-1\-1>
+.iP <-1\-1>
 initial brightness (default: 0.0)
-.IPs <0\-3>
+.iP <0\-3>
 initial saturation (default: 1.0)
-.IPs <0.1\-10>
+.iP <0.1\-10>
 gamma value for the red component (default: 1.0)
-.IPs <0.1\-10>
+.iP <0.1\-10>
 gamma value for the green component (default: 1.0)
-.IPs <0.1\-10>
+.iP <0.1\-10>
 gamma value for the blue component (default: 1.0)
-.IPs <0\-1>
+.iP <0\-1>
 The weight parameter can be used to reduce the effect of a high gamma value on
 bright image areas, e.g.\& keep them from getting overamplified and just plain
 white.
@@ -4636,10 +4636,10 @@ Software equalizer with interactive cont
 equalizer, for cards/\:drivers that do not support hue and
 saturation controls in hardware.
 .PD 0
-.RSs
-.IPs <-180\-180>
+.Rs
+.iP <-180\-180>
 initial hue (default: 0.0)
-.IPs <-100\-100>
+.iP <-100\-100>
 initial saturation, where negative values result
 in a negative chroma (default: 1.0)
 .RE
@@ -4654,15 +4654,15 @@ is poor quality or is not available.
 Can also be used as a primitive luma-only deinterlacer with very low CPU
 usage.
 .PD 0
-.RSs
-.IPs <f>\ \ 
+.Rs
+.iP <f>\ \ 
 By default, halfpack averages pairs of lines when downsampling.
 Any value different from 0 or 1 gives the default (averaging) behavior.
-.RSss
+.Rt
 0: Only use even lines when downsampling.
 .br
 1: Only use odd lines when downsampling.
-.REss
+.rX
 .RE
 .PD 1
 .
@@ -4675,14 +4675,14 @@ This filter packs the planar 4:2:0 data 
 the chroma lines in their proper locations, so that in any given
 scanline, the luma and chroma data both come from the same field.
 .PD 0
-.RSs
-.IPs <mode>
+.Rs
+.iP <mode>
 Select the sampling mode.
-.RSss
+.Rt
 0: nearest-neighbor sampling, fast but incorrect
 .br
 1: linear interpolation (default)
-.REss
+.rX
 .RE
 .PD 1
 .
@@ -4715,12 +4715,12 @@ The main use of this filter is for very-
 streaming over dialup modem), but it could in theory be used for
 fixing movies that were inverse-telecined incorrectly.
 .PD 0
-.RSs
-.IPs <max>
+.Rs
+.iP <max>
 Sets the maximum number of consecutive frames which can be
 dropped (if positive), or the minimum interval between
 dropped frames (if negative).
-.IPs <hi>,<lo>,<frac>
+.iP <hi>,<lo>,<frac>
 A frame is a candidate for dropping if no 8x8 region differs by more
 than a threshold of <hi>, and if not more than <frac> portion (1
 meaning the whole image) differs by more than a threshold of <lo>.
@@ -4736,10 +4736,10 @@ block.
 The drop-deinterlace (dint) filter detects and drops the first from a set
 of interlaced video frames.
 .PD 0
-.RSs
-.IPs <0.0\-1.0>
+.Rs
+.iP <0.0\-1.0>
 relative difference between neighboring pixels (default: 0.1)
-.IPs <0.0\-1.0>
+.iP <0.0\-1.0>
 What part of the image has to be detected as interlaced to
 drop the frame (default: 0.15).
 .RE
@@ -4754,55 +4754,55 @@ FFmpeg deinterlacing filter, same as \-v
 Donald Graft's adaptive kernel deinterlacer.
 Deinterlaces parts of a video if a configurable threshold is exceeded.
 .PD 0
-.RSs
-.IPs <0\-255>
+.Rs
+.iP <0\-255>
 threshold (default: 10)
-.IPs <map>
-.RSss
+.iP <map>
+.Rt
 0: Ignore pixels exceeding the threshold (default).
 .br
 1: Paint pixels exceeding the threshold white.
-.REss
-.IPs <order>
-.RSss
+.rX
+.iP <order>
+.Rt
 0: Leave fields alone (default).
 .br
 1: Swap fields.
-.REss
-.IPs <sharp>
-.RSss
+.rX
+.iP <sharp>
+.Rt
 0: Disable additional sharpening (default).
 .br
 1: Enable additional sharpening.
-.REss
-.IPs <twoway>
-.RSss
+.rX
+.iP <twoway>
+.Rt
 0: Disable twoway sharpening (default).
 .br
 1: Enable twoway sharpening.
-.REss
+.rX
 .RE
 .PD 1
 .
 .TP
 .B unsharp[=l|cWxH:amount[:l|cWxH:amount]]
 unsharp mask / gaussian blur
-.RSs
-.IPs l\ \ \ \ 
+.Rs
+.iP l\ \ \ \ 
 Apply effect on luma component.
-.IPs c\ \ \ \ 
+.iP c\ \ \ \ 
 Apply effect on chroma components.
-.IPs <width>x<height>
+.iP <width>x<height>
 width and height of the matrix, odd sized in both directions
 (min = 3x3, max = 13x11 or 11x13, usually something between 3x3 and 7x7)
-.IPs amount
+.iP amount
 Relative amount of sharpness/\:blur to add to the image
 (a sane range should be -1.5\-1.5).
-.RSss
+.Rt
 <0: blur
 .br
 >0: sharpen
-.REss
+.rX
 .RE
 .
 .TP
@@ -4821,12 +4821,12 @@ permanently (by smoothing, averaging, et
 2 fields (so called half pictures), so you can process (filter) them
 independently and then re-interleave them.
 .PD 0
-.RSs
-.IPs d
+.Rs
+.iP d
 deinterleave (placing one above the other)
-.IPs i
+.iP i
 interleave
-.IPs s
+.iP s
 swap fields (exchange even & odd lines)
 .RE
 .PD 1
@@ -4840,10 +4840,10 @@ Especially if combined with other filter
 up images, so be happy if it works but don't complain if it doesn't for
 your combination of filters.
 .PD 0
-.RSs
-.IPs d
+.Rs
+.iP d
 Deinterleave fields, placing them side by side.
-.IPs i
+.iP i
 Interleave fields again (reversing the effect of fil=d).
 .RE
 .PD 1
@@ -4870,10 +4870,10 @@ Development on this filter is no longer 
 and filmdint are better for most applications.
 The following arguments (see syntax above) may be used to control
 detc's behavior:
-.RSs
-.IPs <dr>\ 
+.Rs
+.iP <dr>\ 
 Set the frame dropping mode.
-.RSss
+.Rt
 0: Do not drop frames to maintain fixed output framerate (default).
 .br
 1: Always drop a frame when there have been no drops or telecine
@@ -4883,22 +4883,22 @@ merges in the past 5 frames.
 .br
 .I NOTE:
 Use mode 1 or 2 with MEncoder.
-.REss
-.IPs <am>\ 
+.rX
+.iP <am>\ 
 Analysis mode.
-.RSss
+.Rt
 0: Fixed pattern with initial frame number specified by <fr>.
 .br
 1: agressive search for telecine pattern (default)
-.REss
-.IPs <fr>\ 
+.rX
+.iP <fr>\ 
 Set initial frame number in sequence.
 0\-2 are the three clean progressive frames; 3 and 4 are the two
 interlaced frames.
 The default, -1, means 'not in telecine sequence'.
 The number specified here is the type for the imaginary previous
 frame before the movie starts.
-.IPs "<t0>, <t1>, <t2>, <t3>"
+.iP "<t0>, <t1>, <t2>, <t3>"
 Threshold values to be used in certain modes.
 .RE
 .
@@ -4975,28 +4975,28 @@ When this filter is used with mplayer, i
 framerate during playback, but it is still generally better than using
 pp=lb or no deinterlacing at all.
 Multiple options can be specified separated by /.
-.RSs
-.IPs crop=<w>:<h>:<x>:<y>
+.Rs
+.iP crop=<w>:<h>:<x>:<y>
 Just like the crop filter, but faster, and works on mixed hard and soft
 telecined content as well as when y is not a multiple of 4.
 If x or y would require cropping fractional pixels from the chroma
 planes, the crop area is extended.
 This usually means that x and y must be even.
-.IPs io=<ifps>:<ofps>
+.iP io=<ifps>:<ofps>
 For each ifps input frames the filter will output ofps frames.
 The ratio of ifps/\:ofps should match the \-fps/\-ofps ratio.
 This could be used to filter movies that are broadcast on TV at a frame
 rate different from their original framerate.
-.IPs luma_only=<n>
+.iP luma_only=<n>
 If n is nonzero, the chroma plane is copied unchanged.
 This is useful for YV12 sampled TV, which discards one of the chroma
 fields.
-.IPs mmx2=<n>
+.iP mmx2=<n>
 On x86, if n=1, use MMX2 optimized functions, if n=2, use 3DNow!
 optimized functions, othewise, use plain C.
 If this option is not specified, MMX2 and 3DNow! are auto-detected, use
 this option to override auto-detection.
-.IPs fast=<n>
+.iP fast=<n>
 The larger n will speed up the filter at the expense of accuracy.
 The default value is n=3.
 If n is odd, a frame immediately following a frame marked with the
@@ -5011,22 +5011,22 @@ much accuracy.
 If n=4 or 5, a faster, but much less accurate metric will be used to
 find the frame breaks, which is more likely to misdetect high vertical
 detail as interlaced content.
-.IPs verbose=<n>
+.iP verbose=<n>
 If n is nonzero, print the detailed metrics for each frame.
 Useful for debugging.
-.IPs dint_thres=<n>
+.iP dint_thres=<n>
 Deinterlace threshold.
 Used during de-interlacing of unmatched frames.
 Larger value means less deinterlacing, use n=256 to completely turn off
 deinterlacing.
 Default is n=8.
-.IPs comb_thres=<n>
+.iP comb_thres=<n>
 Threshold for comparing a top and bottom fields.
 Defaults to 128.
-.IPs diff_thres=<n>
+.iP diff_thres=<n>
 Threshold to detect temporal change of a field.
 Default is 128.
-.IPs sad_thres=<n>
+.iP sad_thres=<n>
 Sum of Absolute Difference threshold, default is 64.
 .RE
 .
@@ -5048,8 +5048,8 @@ original film framerate.
 When using this filter, you must specify \-ofps that is 4/\:5 of the fps of the
 input file (24000/1001 if the input is 30000/1001 fps).
 The options are:
-.RSs
-.IPs pass=1|2
+.Rs
+.iP pass=1|2
 Use two pass mode.
 This produces best results.
 Pass one analyzes the video and writes the results to a log file.
@@ -5061,14 +5061,14 @@ correspond to pass one and two of the en
 In order to use divtc two pass with two pass video encoding, you must perform
 three passes: first divtc pass one and encoder pass one, then divtc pass two
 and encoder pass one, and finally divtc pass two and encoder pass two.
-.IPs file=<filename>
+.iP file=<filename>
 Set the two pass log filename (default: "framediff.log").
-.IPs threshold=<value>
+.iP threshold=<value>
 Set the minimum strength the telecine pattern must have for the filter to
 believe in it (default: 0.5).
 This is used to avoid recognizing false pattern from the parts of the video
 that are very dark or very still.
-.IPs window=<numframes>
+.iP window=<numframes>
 Set the number of past frames to look at when searching for pattern
 (default: 30).
 Longer window improves the reliability of the pattern search, but shorter
@@ -5076,7 +5076,7 @@ window improves the reaction time to the
 This only affects the one pass mode.
 The two pass mode currently uses fixed window that extends to both future
 and past.
-.IPs phase=0|1|2|3|4
+.iP phase=0|1|2|3|4
 Sets the initial telecine phase for one pass mode (default: 0).
 The two pass mode can see the future, so it is able to use the correct
 phase from the beginning, but one pass mode can only guess.
@@ -5084,7 +5084,7 @@ It catches the correct phase when it fin
 to fix the possible juddering at the beginning.
 The first pass of the two pass mode also uses this, so if you save the output
 from the first pass, you get constant phase result.
-.IPs deghost=<value>
+.iP deghost=<value>
 Set the deghosting threshold (0\-255 for one pass mode, -255\-255 for two pass
 mode, default 0).
 If nonzero, deghosting mode is used.
@@ -5107,41 +5107,41 @@ changes.
 The intended use is to fix PAL movies that have been captured with the
 opposite field order to the film-to-video transfer.
 The options are:
-.RSs
-.IPs t
+.Rs
+.iP t
 Capture field order top-first, transfer bottom-first.
 Filter will delay the bottom field.
-.IPs b
+.iP b
 Capture bottom-first, transfer top-first.
 Filter will delay the top field.
-.IPs p
+.iP p
 Capture and transfer with the same field order.
 This mode only exists for the documentation of the other options to refer to,
 but if you actually select it, the filter will faithfully do nothing ;-)
-.IPs a
+.iP a
 Capture field order determined automatically by field flags, transfer opposite.
 Filter selects among t and b modes on a frame by frame basis using field flags.
 If no field information is available, then this works just like u.
-.IPs u
+.iP u
 Capture unknown or varying, transfer opposite.
 Filter selects among t and b on a frame by frame basis by analyzing the
 images and selecting the alternative that produces best match between the
 fields.
-.IPs T
+.iP T
 Capture top-first, transfer unknown or varying.
 Filter selects among t and p using image analysis.
-.IPs B
+.iP B
 Capture bottom-first, transfer unknown or varying.
 Filter selects among b and p using image analysis.
-.IPs A
+.iP A
 Capture determined by field flags, transfer unknown or varying.
 Filter selects among t, b and p using field flags and image analysis.
 If no field information is available, then this works just like U.
 This is the default mode.
-.IPs U
+.iP U
 Both capture and transfer unknown or varying.
 Filter selects among t, b and p using image analysis only.
-.IPs v
+.iP v
 Verbose operation.
 Prints the selected mode for each frame and the average squared difference
 between fields for t, b, and p alternatives.
@@ -5165,15 +5165,15 @@ Even frames are moved into the upper fie
 This can be used to fully reverse the effect of the tfields filter (in mode 0).
 Available modes are:
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 Move odd frames into the upper field, even into the lower field, generating
 a full-height frame at half framerate.
-.IPs 1
+.iP 1
 Only output odd frames, even frames are dropped; height unchanged.
-.IPs 2
+.iP 2
 Only output even frames, odd frames are dropped; height unchanged.
-.IPs 3
+.iP 3
 Expand each frame to full height, but pad alternate lines with black;
 framerate unchanged.
 .RE
@@ -5188,14 +5188,14 @@ MEncoder, and only if both \-fps and \-o
 desired (double) framerate!
 Available modes are:
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 Leave fields unchanged. (This will jump/\:flicker.)
-.IPs 1
+.iP 1
 Interpolate missing lines. (The algorithm used might not be so good.)
-.IPs 2
+.iP 2
 Translate fields by 1/4 pixel with linear interpolation (no jump).
-.IPs 4
+.iP 4
 Translate fields by 1/4 pixel with 4tap filter (higher quality). (default)
 .RE
 .PD 1
@@ -5204,10 +5204,10 @@ Translate fields by 1/4 pixel with 4tap 
 .B boxblur=radius:power[:radius:power]
 box blur
 .PD 0
-.RSs
-.IPs <radius>
+.Rs
+.iP <radius>
 blur filter strength
-.IPs <power>
+.iP <power>
 number of filter applications
 .RE
 .PD 1
@@ -5216,12 +5216,12 @@ number of filter applications
 .B sab=radius:pf:colorDiff[:radius:pf:colorDiff]
 shape adaptive blur
 .PD 0
-.RSs
-.IPs <radius>
+.Rs
+.iP <radius>
 blur filter strength (~0.1\-4.0) (slower if larger)
-.IPs <pf>\ 
+.iP <pf>\ 
 prefilter strength (~0.1\-2.0)
-.IPs <colorDiff>
+.iP <colorDiff>
 maximum difference between pixels to still be considered (~0.1\-100.0)
 .RE
 .PD 1
@@ -5230,12 +5230,12 @@ maximum difference between pixels to sti
 .B smartblur=radius:strength:threshold[:radius:strength:threshold]
 smart blur
 .PD 0
-.RSs
-.IPs <radius>
+.Rs
+.iP <radius>
 blur filter strength (~0.1\-5.0) (slower if larger)
-.IPs <strength>
+.iP <strength>
 blur (0.0\-1.0) or sharpen (-1.0\-0.0)
-.IPs <threshold>
+.iP <threshold>
 filter all (0), filter flat areas (0\-30) or filter edges (-30\-0)
 .RE
 .PD 1
@@ -5244,10 +5244,10 @@ filter all (0), filter flat areas (0\-30
 .B perspective=x0:y0:x1:y1:x2:y2:x3:y3:t
 Correct the perspective of movies not filmed perpendicular to the screen.
 .PD 0
-.RSs
-.IPs <x0>,<y0>,...
+.Rs
+.iP <x0>,<y0>,...
 coordinates of the top left, top right, bottom left, bottom right corners
-.IPs <t>\ \ 
+.iP <t>\ \ 
 linear (0) or cubic resampling (1)
 .RE
 .PD 1
@@ -5266,8 +5266,8 @@ Reposition and resize stereoscopic image
 Extracts both stereo fields and places them side by side, resizing
 them to maintain the original movie aspect.
 .PD 0
-.RSs
-.IPs <lines>
+.Rs
+.iP <lines>
 number of lines to select from the middle of the image (default: 12)
 .RE
 .PD 1
@@ -5278,12 +5278,12 @@ The bitmap overlay filter reads bitmaps 
 on top of the movie, allowing some transformations on the image.
 Also see TOOLS/bmovl-test.c for a small bmovl test program.
 .PD 0
-.RSs
-.IPs <hidden>
+.Rs
+.iP <hidden>
 Set the default value of the 'hidden' flag (0=visible, 1=hidden).
-.IPs <opaque>
+.iP <opaque>
 Set the default value of the 'opaque' flag (0=transparent, 1=opaque).
-.IPs <fifo>
+.iP <fifo>
 path/\:filename for the FIFO (named pipe connecting 'mplayer \-vf bmovl' to the
 controlling application)
 .RE
@@ -5293,25 +5293,25 @@ controlling application)
 FIFO commands are:
 .RE
 .PD 0
-.RSs
-.IPs "RGBA32 width height xpos ypos alpha clear"
+.Rs
+.iP "RGBA32 width height xpos ypos alpha clear"
 followed by width*height*4 Bytes of raw RGBA32 data.
-.IPs "ABGR32 width height xpos ypos alpha clear"
+.iP "ABGR32 width height xpos ypos alpha clear"
 followed by width*height*4 Bytes of raw ABGR32 data.
-.IPs "RGB24 width height xpos ypos alpha clear"
+.iP "RGB24 width height xpos ypos alpha clear"
 followed by width*height*3 Bytes of raw RGB24 data.
-.IPs "BGR24 width height xpos ypos alpha clear"
+.iP "BGR24 width height xpos ypos alpha clear"
 followed by width*height*3 Bytes of raw BGR24 data.
-.IPs "ALPHA width height xpos ypos alpha"
+.iP "ALPHA width height xpos ypos alpha"
 Change alpha transparency of the specified area.
-.IPs "CLEAR width height xpos ypos"
+.iP "CLEAR width height xpos ypos"
 Clear area.
-.IPs OPAQUE
+.iP OPAQUE
 Disable all alpha transparency.
 Send "ALPHA 0 0 0 0 0" to enable it again.
-.IPs HIDE\ 
+.iP HIDE\ 
 Hide bitmap.
-.IPs SHOW\ 
+.iP SHOW\ 
 Show bitmap.
 .RE
 .PD 1
@@ -5320,30 +5320,30 @@ Show bitmap.
 Arguments are:
 .RE
 .PD 0
-.RSs
-.IPs "<width>, <height>"
+.Rs
+.iP "<width>, <height>"
 image/area size
-.IPs "<xpos>, <ypos>"
+.iP "<xpos>, <ypos>"
 Start blitting at position x/y.
-.IPs <alpha>
+.iP <alpha>
 Set alpha difference.
 If you set this to -255 you can then send a sequence of ALPHA-commands to set
 the area to -225, -200, -175 etc for a nice fade-in-effect! ;)
-.RSss
+.Rt
 0:    same as original
 .br
 255:  Make everything opaque.
 .br
 -255: Make everything transparent.
-.REss
-.IPs <clear>
+.rX
+.iP <clear>
 Clear the framebuffer before blitting.
-.RSss
+.Rt
 0: The image will just be blitted on top of the old one, so you do not need to
 send 1.8MB of RGBA32 data every time a small part of the screen is updated.
 .br
 1: clear
-.REss
+.rX
 .RE
 .PD 1
 .
@@ -5383,20 +5383,20 @@ It is probably a good idea to put the sc
 The parameters are:
 .sp 1
 .PD 0
-.RSs
-.IPs <xtiles>
+.Rs
+.iP <xtiles>
 number of tiles on the x axis (default: 5)
-.IPs <ytiles>
+.iP <ytiles>
 number of tiles on the y axis (default: 5)
-.IPs <output>
+.iP <output>
 Render the tile when 'output' number of frames are reached, where 'output'
 should be a number less than xtile * ytile.
 Missing tiles are left blank.
 You could, for example, write an 8 * 7 tile every 50 frames to have one
 image every 2 seconds @ 25 fps.
-.IPs <start>
+.iP <start>
 outer border thickness in pixels (default: 2)
-.IPs <delta>
+.iP <delta>
 inner border thickness in pixels (default: 4)
 .RE
 .PD 1
@@ -5408,12 +5408,12 @@ surrounding pixels.
 Just set a rectangle covering the logo and watch it disappear (and
 sometimes something even uglier appear \- your mileage may vary).
 .PD 0
-.RSs
-.IPs <x>,<y>
+.Rs
+.iP <x>,<y>
 top left corner of the logo
-.IPs <w>,<h>
+.iP <w>,<h>
 width and height of the cleared rectangle
-.IPs <t>
+.iP <t>
 Thickness of the fuzzy edge of the rectangle (added to w and h).
 When set to -1, a green rectangle is drawn on the screen to
 simplify finding the right x,y,w,h parameters.
@@ -5424,25 +5424,25 @@ simplify finding the right x,y,w,h param
 .B zrmjpeg[=options]
 Software YV12 to MJPEG encoder for use with the zr2 video
 output device.
-.RSs
-.IPs maxheight=<h>|maxwidth=<w>
+.Rs
+.iP maxheight=<h>|maxwidth=<w>
 These options set the maximum width and height the zr card
 can handle (the MPlayer filter layer currently cannot query those).
-.IPs {dc10+,dc10,buz,lml33}-{PAL|NTSC}
+.iP {dc10+,dc10,buz,lml33}-{PAL|NTSC}
 Use these options to set maxwidth and maxheight automatically to the
 values known for card/\:mode combo.
 For example, valid options are: dc10-PAL and buz-NTSC (default: dc10+PAL)
-.IPs color|bw
+.iP color|bw
 Select color or black and white encoding.
 Black and white encoding is faster.
 Color is the default.
-.IPs hdec={1,2,4}
+.iP hdec={1,2,4}
 Horizontal decimation 1, 2 or 4.
-.IPs vdec={1,2,4}
+.iP vdec={1,2,4}
 Vertical decimation 1, 2 or 4.
-.IPs quality=1\-20
+.iP quality=1\-20
 Set JPEG compression quality [BEST] 1 \- 20 [VERY BAD].
-.IPs fd|nofd
+.iP fd|nofd
 By default, decimation is only performed if the Zoran hardware
 can upscale the resulting MJPEG images to the original size.
 The option fd instructs the filter to always perform the requested
@@ -5481,12 +5481,12 @@ a frame boundary.
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-endpos 56"
+.Rs
+.iP "\-endpos 56"
 Encode only 56 seconds.
-.IPs "\-endpos 01:10:00"
+.iP "\-endpos 01:10:00"
 Encode only 1 hour 10 minutes.
-.IPs "\-endpos 100mb"
+.iP "\-endpos 100mb"
 Encode only 100 MBytes.
 .RE
 .PD 1
@@ -5497,8 +5497,8 @@ Can be used to override the video fourcc
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-ffourcc div3"
+.Rs
+.iP "\-ffourcc div3"
 Will have the output file contain 'div3' as video fourcc.
 .RE
 .PD 1
@@ -5513,22 +5513,22 @@ This can be used to change the aspect ra
 Specify the info header of the resulting AVI file.
 .sp 1
 Available options are:
-.RSs
-.IPs help\ 
+.Rs
+.iP help\ 
 Show this description.
-.IPs name=<value>
+.iP name=<value>
 title of the work
-.IPs artist=<value>
+.iP artist=<value>
 artist or author of the work
-.IPs genre=<value>
+.iP genre=<value>
 original work category
-.IPs subject=<value>
+.iP subject=<value>
 contents of the work
-.IPs copyright=<value>
+.iP copyright=<value>
 copyright information
-.IPs srcform=<value>
+.iP srcform=<value>
 original format of the digitized material
-.IPs comment=<value>
+.iP comment=<value>
 general comments about the work
 .RE
 .
@@ -5567,14 +5567,14 @@ Use \-oac help to get a list of availabl
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-oac copy"
+.Rs
+.iP "\-oac copy"
 no encoding, just streamcopy
-.IPs "\-oac pcm"
+.iP "\-oac pcm"
 Encode to uncompressed PCM.
-.IPs "\-oac mp3lame"
+.iP "\-oac mp3lame"
 Encode to MP3 (using LAME).
-.IPs "\-oac lavc"
+.iP "\-oac lavc"
 Encode with a libavcodec codec.
 .RE
 .PD 1
@@ -5588,12 +5588,12 @@ Use \-of help to get a list of available
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-of avi"
+.Rs
+.iP "\-of avi"
 Encode to AVI.
-.IPs "\-of mpeg"
+.iP "\-of mpeg"
 Encode to MPEG.
-.IPs "\-of rawvideo"
+.iP "\-of rawvideo"
 raw video stream (no muxing \- one video stream only)
 .RE
 .PD 1
@@ -5614,14 +5614,14 @@ Use \-ovc help to get a list of availabl
 .sp 1
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-ovc copy"
+.Rs
+.iP "\-ovc copy"
 no encoding, just streamcopy
-.IPs "\-ovc divx4"
+.iP "\-ovc divx4"
 Encode to DivX4/\:DivX5.
-.IPs "\-ovc raw"
+.iP "\-ovc raw"
 Encode to an arbitrary uncompressed format (use '\-vf format' to select).
-.IPs "\-ovc lavc"
+.iP "\-ovc lavc"
 Encode with a libavcodec codec.
 .RE
 .PD 1
@@ -5676,10 +5676,10 @@ get help
 .TP
 .B br=<value>
 Specify bitrate.
-.RSs
-.IPs 4\-16000
+.Rs
+.iP 4\-16000
 (in kbit)
-.IPs 16001\-24000000
+.iP 16001\-24000000
 (in bit)
 .RE
 .
@@ -5729,13 +5729,13 @@ same parameters and pass=2.
 .B vbrpass=<0\-2>
 Override the pass argument and use the XviD VBR library instead of DivX4 VBR.
 Available options are:
-.RSs
-.IPs 0
+.Rs
+.iP 0
 one pass encoding (as in not putting pass on the command line)
-.IPs 1
+.iP 1
 Analysis (first) pass of two pass encoding.
 The resulting AVI file can be directed to /dev/\:null.
-.IPs 2
+.iP 2
 Final (second) pass of two pass encoding.
 .RE
 .
@@ -5750,16 +5750,16 @@ get help
 .B vbr=<0\-4>
 variable bitrate method
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 cbr
-.IPs 1
+.iP 1
 mt
-.IPs 2
+.iP 2
 rh (default)
-.IPs 3
+.iP 3
 abr
-.IPs 4
+.iP 4
 mtrh
 .RE
 .PD 1
@@ -5797,14 +5797,14 @@ audio input gain
 .B mode=<0\-3>
 (default: auto)
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 stereo
-.IPs 1
+.iP 1
 joint-stereo
-.IPs 2
+.iP 2
 dualchannel
-.IPs 3
+.iP 3
 mono
 .RE
 .PD 1
@@ -5812,12 +5812,12 @@ mono
 .TP
 .B padding=<0\-2>
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 none
-.IPs 1
+.iP 1
 all
-.IPs 2
+.iP 2
 adjust
 .RE
 .PD 1
@@ -5844,18 +5844,18 @@ will let LAME choose values automaticall
 .TP
 .B preset=<value>
 preset values
-.RSs
-.IPs help\ 
+.Rs
+.iP help\ 
 Print additional options and information about presets settings.
-.IPs medium
+.iP medium
 VBR encoding, good quality, 150\-180 kbps bitrate range
-.IPs standard
+.iP standard
 VBR encoding, high quality, 170\-210 kbps bitrate range
-.IPs extreme
+.iP extreme
 VBR encoding, very high quality, 200\-240 kbps bitrate range
-.IPs insane
+.iP insane
 CBR encoding, highest preset quality, 320 kbps bitrate
-.IPs <8\-320>
+.iP <8\-320>
 ABR encoding at average given kbps bitrate
 .RE
 .sp 1
@@ -5863,14 +5863,14 @@ ABR encoding at average given kbps bitra
 .I EXAMPLES:
 .RE
 .PD 0
-.RSs
-.IPs fast:preset=standard
+.Rs
+.iP fast:preset=standard
 suitable for most people and most music types and already quite high quality
-.IPs cbr:preset=192
+.iP cbr:preset=192
 Encode with ABR presets at a 192 kbps forced constant bitrate.
-.IPs preset=172
+.iP preset=172
 Encode with ABR presets at a 172 kbps average bitrate.
-.IPs preset=extreme
+.iP preset=extreme
 for people with extremely good hearing and similar equipment
 .RE
 .PD 1
@@ -5903,8 +5903,8 @@ Read the source for full details.
 .PP
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs vcodec=msmpeg4:vbitrate=1800:vhq:keyint=250
+.Rs
+.iP vcodec=msmpeg4:vbitrate=1800:vhq:keyint=250
 .RE
 .PD 1
 .
@@ -5912,14 +5912,14 @@ Read the source for full details.
 .B acodec=<value>
 audio codec (default: mp2)
 .PD 0
-.RSs
-.IPs mp2\ \ 
+.Rs
+.iP mp2\ \ 
 MPEG Layer 2
-.IPs mp3\ \ 
+.iP mp3\ \ 
 MPEG Layer 3
-.IPs ac3\ \ 
+.iP ac3\ \ 
 AC3
-.IPs adpcm_ima_wav
+.iP adpcm_ima_wav
 IMA Adaptive PCM (4bits per sample, 4:1 compression)
 .RE
 .PD 1
@@ -5951,40 +5951,40 @@ May have a slight negative effect on mot
 .B vcodec=<value>
 Employ the specified codec (default: mpeg4).
 .PD 0
-.RSs
-.IPs mjpeg
+.Rs
+.iP mjpeg
 Motion JPEG
-.IPs ljpeg
+.iP ljpeg
 Lossless JPEG
-.IPs h263\ 
+.iP h263\ 
 H.263
-.IPs h263p
+.iP h263p
 H.263+
-.IPs mpeg4
+.iP mpeg4
 MPEG-4 (DivX 4/5)
-.IPs msmpeg4
+.iP msmpeg4
 DivX 3
-.IPs msmpeg4v2
+.iP msmpeg4v2
 MS MPEG4v2
-.IPs wmv1\ 
+.iP wmv1\ 
 Windows Media Video, version 1 (AKA WMV7)
-.IPs wmv2\ 
+.iP wmv2\ 
 Windows Media Video, version 2 (AKA WMV8)
-.IPs rv10\ 
+.iP rv10\ 
 an old RealVideo codec
-.IPs mpeg1video
+.iP mpeg1video
 MPEG-1 video
-.IPs mpeg2video
+.iP mpeg2video
 MPEG-2 video
-.IPs huffyuv
+.iP huffyuv
 HuffYUV
-.IPs ffvhuff (also see: vstrict)
+.iP ffvhuff (also see: vstrict)
 nonstandard 20% smaller HuffYUV using YV12
-.IPs asv1\ 
+.iP asv1\ 
 ASUS Video v1
-.IPs asv2\ 
+.iP asv2\ 
 ASUS Video v2
-.IPs ffv1 (also see: vstrict)
+.iP ffv1 (also see: vstrict)
 FFmpeg's lossless video codec
 .RE
 .PD 1
@@ -5992,14 +5992,14 @@ FFmpeg's lossless video codec
 .TP
 .B vqmin=<1\-31>
 minimum quantizer (pass\ 1/\:2)
-.RSs
-.IPs 1
+.Rs
+.iP 1
 Not recommended (much larger file, little quality difference and weird side
 effects: msmpeg4, h263 will be very low quality, ratecontrol will be confused
 resulting in lower quality and some decoders will not be able to decode it).
-.IPs 2
+.iP 2
 Recommended for normal mpeg4/\:mpeg1video encoding (default).
-.IPs 3
+.iP 3
 Recommended for h263(p)/\:msmpeg4.
 The reason for preferring 3 over 2 is that 2 could lead to overflows.
 (This will be fixed for h263(p) by changing the quantizer per MB in
@@ -6044,10 +6044,10 @@ maximum quantizer difference between con
 .B vmax_b_frames=<0\-4>
 maximum number of B-frames between non-B-frames:
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 no B-frames (default)
-.IPs 0\-2
+.iP 0\-2
 sane range for MPEG-4
 .RE
 .PD 1
@@ -6057,19 +6057,19 @@ sane range for MPEG-4
 motion estimation method.
 Available methods are:
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 none (very low quality)
-.IPs 1
+.iP 1
 full (slow, currently unmaintained and disabled)
-.IPs 2
+.iP 2
 log (low quality, currently unmaintained and disabled)
-.IPs 3
+.iP 3
 phods (low quality, currently unmaintained and disabled)
-.IPs 4
+.iP 4
 EPZS: size=1 diamond, size can be adjusted with the *dia options
 (default)
-.IPs 5
+.iP 5
 X1 (experimental, currently aliased to EPZS)
 .RE
 .PD 1
@@ -6091,12 +6091,12 @@ Macroblock decision algorithm (high qual
 block in all modes and choose the best.
 This is slow but results in better quality and file size.
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 Use mbcmp (default).
-.IPs 1
+.iP 1
 Select the MB mode which needs the fewest bits (=vhq).
-.IPs 2
+.iP 2
 Select the MB mode which has the best rate distortion.
 .RE
 .PD 1
@@ -6147,10 +6147,10 @@ no scene changes are detected (default: 
 .B vb_strategy=<0\-1>
 strategy to choose between I/\:P/\:B-frames (pass\ 1):
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 Always use the maximum number of B-frames (default).
-.IPs 1
+.iP 1
 Avoid B-frames in high motion scenes.
 .RE
 .PD 1
@@ -6160,12 +6160,12 @@ Avoid B-frames in high motion scenes.
 Activates internal two (or more) pass mode, only specify if you wish to
 use two (or more) pass encoding.
 .PD 0
-.RSs
-.IPs 1
+.Rs
+.iP 1
 first pass (also see turbo)
-.IPs 2
+.iP 2
 second pass
-.IPs 3
+.iP 3
 Nth pass (second and subsequent passes of N-pass encoding)
 .RE
 .RS
@@ -6200,10 +6200,10 @@ satisfied with the encode.
 huffyuv:
 .RE
 .PD 0
-.RSs
-.IPs "pass 1"
+.Rs
+.iP "pass 1"
 Saves statistics.
-.IPs "pass 2"
+.iP "pass 2"
 Encodes with an optimal Huffman table based upon statistics
 from the first pass.
 .RE
@@ -6227,9 +6227,9 @@ The aspect parameter can be given as a r
 .RS
 .I EXAMPLE:
 .RE
-.RSs
+.Rs
 .PD 0
-.IPs "aspect=16/\:9 or aspect=1.78"
+.iP "aspect=16/\:9 or aspect=1.78"
 .PD 1
 .RE
 .
@@ -6248,10 +6248,10 @@ Specify bitrate (pass\ 1/\:2) (default: 
 .I WARNING:
 1kBit = 1000 Bits
 .PD 0
-.RSs
-.IPs 4\-16000
+.Rs
+.iP 4\-16000
 (in kbit)
-.IPs 16001\-24000000
+.iP 16001\-24000000
 (in bit)
 .RE
 .PD 1
@@ -6326,10 +6326,10 @@ lmin= <ip_quant>:lmax= <ip_quant>:vb_qfa
 Quantizer blur (default: 0.5), larger values will average the
 quantizer more over time (slower change).
 .PD 0
-.RSs
-.IPs 0.0
+.Rs
+.iP 0.0
 Quantizer blur disabled.
-.IPs 1.0
+.iP 1.0
 Average the quantizer over all previous frames.
 .RE
 .PD 1
@@ -6355,73 +6355,73 @@ Perceptual quality will be optimal somew
 .B vrc_eq=<equation>
 main ratecontrol equation (pass\ 1/\:2)
 .RE
-.RSs
-.IPs 1\ \ \ \ 
+.Rs
+.iP 1\ \ \ \ 
 constant bitrate
-.IPs tex\ \ 
+.iP tex\ \ 
 constant quality
-.IPs 1+(tex/\:avgTex-1)*qComp
+.iP 1+(tex/\:avgTex-1)*qComp
 approximately the equation of the old ratecontrol code
-.IPs tex^qComp
+.iP tex^qComp
 with qcomp 0.5 or something like that (default)
 .RE
 .PP
 .RS
 infix operators:
 .RE
-.RSs
-.IPs +,-,*,/,^
+.Rs
+.iP +,-,*,/,^
 .RE
 .PP
 .RS
 variables:
 .RE
-.RSs
-.IPs tex\ \ 
+.Rs
+.iP tex\ \ 
 texture complexity
-.IPs iTex,pTex
+.iP iTex,pTex
 intra, non-intra texture complexity
-.IPs avgTex
+.iP avgTex
 average texture complexity
-.IPs avgIITex
+.iP avgIITex
 average intra texture complexity in I-frames
-.IPs avgPITex
+.iP avgPITex
 average intra texture complexity in P-frames
-.IPs avgPPTex
+.iP avgPPTex
 average non-intra texture complexity in P-frames
-.IPs avgBPTex
+.iP avgBPTex
 average non-intra texture complexity in B-frames
-.IPs mv\ \ \ 
+.iP mv\ \ \ 
 Bits used for motion vectors
-.IPs fCode
+.iP fCode
 maximum length of motion vector in log2 scale
-.IPs iCount
+.iP iCount
 number of intra macroblocks / number of macroblocks
-.IPs var\ \ 
+.iP var\ \ 
 spatial complexity
-.IPs mcVar
+.iP mcVar
 temporal complexity
-.IPs qComp
+.iP qComp
 qcomp from the command line
-.IPs "isI, isP, isB"
+.iP "isI, isP, isB"
 Is 1 if picture type is I/\:P/\:B else 0.
-.IPs Pi,E\ 
+.iP Pi,E\ 
 See your favorite math book.
 .RE
 .PP
 .RS
 functions:
 .RE
-.RSs
-.IPs max(a,b),min(a,b)
+.Rs
+.iP max(a,b),min(a,b)
 maximum / minimum
-.IPs gt(a,b)
+.iP gt(a,b)
 is 1 if a>b, 0 otherwise
-.IPs lt(a,b)
+.iP lt(a,b)
 is 1 if a<b, 0 otherwise
-.IPs eq(a,b)
+.iP eq(a,b)
 is 1 if a==b, 0 otherwise
-.IPs "sin, cos, tan, sinh, cosh, tanh, exp, log, abs"
+.iP "sin, cos, tan, sinh, cosh, tanh, exp, log, abs"
 .RE
 .
 .TP
@@ -6430,10 +6430,10 @@ User specified quality for specific part
 The options are <start-frame>, <end-frame>, <quality>[/\:<start-frame>,
 <end-frame>, <quality>[/\:...]]:
 .PD 0
-.RSs
-.IPs "quality (2\-31)"
+.Rs
+.iP "quality (2\-31)"
 quantizer
-.IPs "quality (-500\-0)"
+.iP "quality (-500\-0)"
 quality correction in %
 .RE
 .PD 1
@@ -6446,10 +6446,10 @@ initial complexity (pass\ 1)
 .B vqsquish=<0|1>
 Specify how to keep the quantizer between qmin and qmax (pass\ 1/\:2).
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 Use clipping.
-.IPs 1
+.iP 1
 Use a nice differentiable function (default).
 .RE
 .PD 1
@@ -6460,10 +6460,10 @@ Sets single coefficient elimination thre
 Negative values will also consider the DC coefficient (should be at least -4
 or lower for encoding at quant=1):
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 disabled (default)
-.IPs -4
+.iP -4
 JVT recommendation
 .RE
 .PD 1
@@ -6474,10 +6474,10 @@ Sets single coefficient elimination thre
 Negative values will also consider the DC coefficient (should be at least -4
 or lower for encoding at quant=1):
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 disabled (default)
-.IPs 7
+.iP 7
 JVT recommendation
 .RE
 .PD 1
@@ -6486,13 +6486,13 @@ JVT recommendation
 .B vstrict=<-1|0|1>
 strict standard compliance
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 disabled (default)
-.IPs 1
+.iP 1
 Only recommended if you want to feed the output into the
 MPEG-4 reference decoder.
-.IPs -1
+.iP -1
 Allows some non-standard codecs to work (snow, ffvhuff, ffv1).
 .RE
 .PD 1
@@ -6504,12 +6504,12 @@ Adds 2 Bytes per video packet, improves 
 unreliable channels (e.g.\& streaming over the internet).
 Each video packet will be encoded in 3 separate partitions:
 .PD 0
-.RSs
-.IPs "1. MVs"
+.Rs
+.iP "1. MVs"
 movement
-.IPs "2. DC coefficients"
+.iP "2. DC coefficients"
 low res picture
-.IPs "3. AC coefficients"
+.iP "3. AC coefficients"
 details
 .RE
 .PD 1
@@ -6526,10 +6526,10 @@ as without partitioning an error will tr
 .B vpsize=<0\-10000> (also see vdpart)
 Video packet size, improves error-resistance.
 .PD 0
-.RSs
-.IPs 0\ \ \ \ 
+.Rs
+.iP 0\ \ \ \ 
 disabled (default)
-.IPs 100\-1000
+.iP 100\-1000
 good choice
 .RE
 .PD 1
@@ -6546,20 +6546,20 @@ grayscale only encoding (faster)
 .B vfdct=<0\-10>
 DCT algorithm
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 Automatically select a good one (default).
-.IPs 1
+.iP 1
 fast integer
-.IPs 2
+.iP 2
 accurate integer
-.IPs 3
+.iP 3
 MMX
-.IPs 4
+.iP 4
 mlib
-.IPs 5
+.iP 5
 AltiVec
-.IPs 6
+.iP 6
 floating point AAN
 .RE
 .PD 1
@@ -6571,26 +6571,26 @@ IDCT algorithm
 .I NOTE:
 To the best of our knowledge all these IDCTs do pass the IEEE1180 tests.
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 Automatically select a good one (default).
-.IPs 1
+.iP 1
 JPEG reference integer
-.IPs 2
+.iP 2
 simple
-.IPs 3
+.iP 3
 simplemmx
-.IPs 4
+.iP 4
 libmpeg2mmx (inaccurate, do not use for encoding with keyint >100)
-.IPs 5
+.iP 5
 ps2
-.IPs 6
+.iP 6
 mlib
-.IPs 7
+.iP 7
 arm
-.IPs 8
+.iP 8
 AltiVec
-.IPs 9
+.iP 9
 sh4
 .RE
 .PD 1
@@ -6611,10 +6611,10 @@ Be careful, overly large values can caus
 Large values might look good on some monitors but may look horrible
 on other monitors.
 .PD 0
-.RSs
-.IPs 0.0\ \ 
+.Rs
+.iP 0.0\ \ 
 disabled (default)
-.IPs 0.0\-0.3
+.iP 0.0\-0.3
 sane range
 .RE
 .PD 1
@@ -6635,10 +6635,10 @@ Be careful, overly large values can caus
 Large values might look good on some monitors but may look horrible
 on other monitors / TV / TFT.
 .PD 0
-.RSs
-.IPs 0.0\ \ 
+.Rs
+.iP 0.0\ \ 
 disabled (default)
-.IPs 0.0\-0.3
+.iP 0.0\-0.3
 sane range
 .RE
 .PD 1
@@ -6671,10 +6671,10 @@ the sky and the house.
 Crop any black borders completely as they will reduce the quality
 of the macroblocks (also applies without scplx_mask).
 .PD 0
-.RSs
-.IPs 0.0\ \ 
+.Rs
+.iP 0.0\ \ 
 disabled (default)
-.IPs 0.0\-0.5
+.iP 0.0\-0.5
 sane range
 .RE
 .PD 1
@@ -6718,12 +6718,12 @@ Use alternative scantable.
 .TP
 .B top=<-1\-1>\ \ \ 
 .PD 0
-.RSs
-.IPs -1
+.Rs
+.iP -1
 automatic
-.IPs 0
+.iP 0
 bottom field first
-.IPs 1
+.iP 1
 top field first
 .RE
 .PD 1
@@ -6731,16 +6731,16 @@ top field first
 .TP
 .B format=<value>
 .PD 0
-.RSs
-.IPs YV12\ 
+.Rs
+.iP YV12\ 
 default
-.IPs 444P\ 
+.iP 444P\ 
 for ffv1
-.IPs 422P\ 
+.iP 422P\ 
 for HuffYUV, lossless JPEG and ffv1
-.IPs 411P,YVU9
+.iP 411P,YVU9
 for lossless JPEG and ffv1
-.IPs BGR32
+.iP BGR32
 for lossless JPEG and ffv1
 .RE
 .PD 1
@@ -6749,12 +6749,12 @@ for lossless JPEG and ffv1
 .B pred\ \ \ 
 (for HuffYUV)
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 left prediction
-.IPs 1
+.iP 1
 plane/\:gradient prediction
-.IPs 2
+.iP 2
 median prediction
 .RE
 .PD 1
@@ -6763,16 +6763,16 @@ median prediction
 .B pred\ \ \ 
 (for lossless JPEG)
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 left prediction
-.IPs 1
+.iP 1
 top prediction
-.IPs 2
+.iP 2
 topleft prediction
-.IPs 3
+.iP 3
 plane/\:gradient prediction
-.IPs 6
+.iP 6
 mean prediction
 .RE
 .PD 1
@@ -6781,10 +6781,10 @@ mean prediction
 .B coder\ \ 
 (for ffv1)
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 vlc coding (Golomb-Rice)
-.IPs 1
+.iP 1
 arithmetic coding (CABAC)
 .RE
 .PD 1
@@ -6793,10 +6793,10 @@ arithmetic coding (CABAC)
 .B context
 (for ffv1)
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 small context model
-.IPs 1
+.iP 1
 large context model
 .RE
 .PD 1
@@ -6805,10 +6805,10 @@ large context model
 (for ffvhuff)
 .RE
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 predetermined huffman tables (builtin or two pass)
-.IPs 1
+.iP 1
 adaptive huffman tables
 .RE
 .PD 1
@@ -6824,30 +6824,30 @@ This seems only useful for high bitrate 
 .B mbcmp=<0\-2000>
 Sets the comparison function for the macroblock decision, only used if mbd=0.
 .PD 0
-.RSs
-.IPs "0 (SAD)"
+.Rs
+.iP "0 (SAD)"
 sum of absolute differences, fast (default)
-.IPs "1 (SSE)"
+.iP "1 (SSE)"
 sum of squared errors
-.IPs "2 (SATD)"
+.iP "2 (SATD)"
 sum of absolute Hadamard transformed differences
-.IPs "3 (DCT)"
+.iP "3 (DCT)"
 sum of absolute DCT transformed differences
-.IPs "4 (PSNR)"
+.iP "4 (PSNR)"
 sum of squared quantization errors (avoid, low quality)
-.IPs "5 (BIT)"
+.iP "5 (BIT)"
 number of bits needed for the block
-.IPs "6 (RD)"
+.iP "6 (RD)"
 rate distortion optimal, slow
-.IPs "7 (ZERO)"
+.iP "7 (ZERO)"
 0
-.IPs "8 (VSAD)"
+.iP "8 (VSAD)"
 sum of absolute vertical differences
-.IPs "9 (VSSE)"
+.iP "9 (VSSE)"
 sum of squared vertical differences
-.IPs "10 (NSSE)"
+.iP "10 (NSSE)"
 noise preserving sum of squared differences
-.IPs +256\ 
+.iP +256\ 
 Also use chroma, currently does not work (correctly) with B-frames.
 .RE
 .PD 1
@@ -6902,14 +6902,14 @@ Shape-adaptive diamonds are a good trade
 .I NOTE:
 The sizes of the normal diamonds and shape adaptive ones do not have
 the same meaning.
-.RSs
-.IPs -3
+.Rs
+.iP -3
 shape adaptive (fast) diamond with size 3
-.IPs -2
+.iP -2
 shape adaptive (fast) diamond with size 2
-.IPs -1
+.iP -1
 slightly special: Can be slower and/or better than dia=-2.
-.IPs  1
+.iP  1
 normal size=1 diamond (default) =EPZS type diamond
 .nf
 .ne
@@ -6917,7 +6917,7 @@ normal size=1 diamond (default) =EPZS ty
      000
       0
 .fi
-.IPs 2
+.iP 2
 normal size=2 diamond
 .nf
 .ne
@@ -6938,12 +6938,12 @@ the PSNR versus bitrate sense (Assuming 
 errors introduced by the IDCT, which is obviously not the case.).
 It simply finds a block for the minimum of error and lambda*bits.
 .PD 0
-.RSs
-.IPs lambda
+.Rs
+.iP lambda
 quantization parameter (QP) dependent constant
-.IPs bits\ 
+.iP bits\ 
 amount of bits needed to encode the block
-.IPs error
+.iP error
 sum of squared errors of the quantization
 .RE
 .PD 1
@@ -6968,10 +6968,10 @@ lambda of each macroblock
 .B last_pred=<0\-99>
 amount of motion predictors from the previous frame
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 (default)
-.IPs a
+.iP a
 Will use 2a+1 x 2a+1 macroblock square of motion vector predictors from the
 previous frame.
 .RE
@@ -6981,12 +6981,12 @@ previous frame.
 .B preme=<0\-2>
 motion estimation pre-pass
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 disabled
-.IPs 1
+.iP 1
 only after I-frames (default)
-.IPs 2
+.iP 2
 always
 .RE
 .PD 1
@@ -7060,14 +7060,14 @@ This can and should be used together wit
 the trellis quantization (optimal for constant weight) will be used as
 startpoint for the iterative search.
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 disabled (default)
-.IPs 1
+.iP 1
 Only lower the absolute value of coefficients.
-.IPs 2
+.iP 2
 Only change coefficients before the last non-zero coefficient + 1.
-.IPs 3
+.iP 3
 Try all.
 .RE
 .PD 1
@@ -7431,16 +7431,16 @@ to search for a motion vector that minim
 difference but also the encoding length of the block.
 Fastest to slowest:
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 off (default)
-.IPs 1
+.iP 1
 mode decision (inter/\:intra MB) (default)
-.IPs 2
+.iP 2
 limited search
-.IPs 3
+.iP 3
 medium search
-.IPs 4
+.iP 4
 wide search
 .RE
 .PD 1
@@ -7553,20 +7553,20 @@ one, giving the opportunity to specify a
 ratio.
 5 standard modes can be specified:
 .PD 0
-.RSs
-.IPs vga11
+.Rs
+.iP vga11
 It's the usual PAR for PC content.
 Pixels are a square unit.
-.IPs pal43
+.iP pal43
 PAL standard 4:3 PAR.
 Pixels are rectangles.
-.IPs pal169
+.iP pal169
 same as above
-.IPs ntsc43
+.iP ntsc43
 same as above
-.IPs ntsc169
+.iP ntsc169
 same as above (Don't forget to give the exact ratio.)
-.IPs ext\ \ 
+.iP ext\ \ 
 Allows you to specify your own pixel aspect ratio with par_width and
 par_height.
 .RE
@@ -7643,12 +7643,12 @@ Enable 2 or 3-pass mode.
 It is recommended to always encode in 2 or 3-pass mode as it leads to a
 better bit distribution and improves overall quality.
 .PD 0
-.RSs
-.IPs 1
+.Rs
+.iP 1
 first pass
-.IPs 2
+.iP 2
 second pass (of two pass encoding)
-.IPs 3
+.iP 3
 Nth pass (second and third passes of three pass encoding)
 .RE
 .RS
@@ -7683,7 +7683,7 @@ NOTE:
 x264 three pass support being quite recent in MEncoder, we welcome any
 feedback you could give us on good combinations of x264 options that are
 both fast and provide good quality.
-.REss
+.rX
 .
 .TP
 .B keyint=<value>
@@ -7854,12 +7854,12 @@ higher values force it to vary more smoo
 Determines the type of motion prediction used for direct macroblocks
 in B-frames.
 .PD 0
-.RSs
-.IPs 0
+.Rs
+.iP 0
 None: direct macroblocks are not used.
-.IPs 1
+.iP 1
 Spatial: motion vectors are extrapolated from neighboring blocks.
-.IPs 2
+.iP 2
 Temporal: motion vectors are interpolated from the following P-frame.
 (default)
 .RE
@@ -7912,7 +7912,7 @@ Adjust subpel refinement quality.
 This parameter controls quality versus speed tradeoffs involved in the motion
 estimation decision process.
 subq=5 can compress up to 10% better than subq=1.
-.RSs
+.Rs
 1: Runs fullpixel precision motion estimation on all candidate
 macroblock types.
 Then selects the best type.
@@ -7935,7 +7935,7 @@ Then finishes the quarterpixel refinemen
 5: Runs best quality quarterpixel precision motion estimation on all
 candidate macroblock types, before selecting the best type.
 (best, default)
-.REss
+.rX
 In the above, "all candidates" doesn't exactly mean all enabled types:
 4x4, 4x8, 8x4 are tried only if 8x8 is better than 16x16.
 .
@@ -7961,7 +7961,7 @@ and you have a need to set it.
 .TP
 .B log=<-1\-3>
 Adjust the amount of logging info printed to the screen.
-.RSs
+.Rs
 -1: none
 .br
  0: Print errors only.
@@ -7972,7 +7972,7 @@ Adjust the amount of logging info printe
 (default)
 .br
  3: PSNR, QP, frametype, size, and other stats for every frame
-.REss
+.rX
 .
 .TP
 .B (no)psnr

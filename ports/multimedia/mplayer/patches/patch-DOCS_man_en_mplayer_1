$MirOS$
--- DOCS/man/en/mplayer.1.orig	Wed Jul 14 22:07:14 2004
+++ DOCS/man/en/mplayer.1	Sat Jul 24 18:28:04 2004
@@ -11,20 +11,20 @@
 .\" define indentation for suboptions
 .nr SS 5
 .\" add new suboption
-.de IPs
+.de iP
 .IP "\\$1" \n(SS
 ..
 .\" begin of first level suboptions, end with .RE
-.de RSs
+.de rS
 .RS \n(IN+3
 ..
 .\" begin of 2nd level suboptions
-.de RSss
+.de rP
 .PD 0
 .RS \n(SS+3
 ..
 .\" end of 2nd level suboptions
-.de REss
+.de rE
 .RE
 .PD 1
 ..
@@ -196,57 +196,57 @@ using the \-input option.
 .TP
 .B general control
 .PD 0
-.RSs
-.IPs "<\- and \->"
+.rS
+.iP "<\- and \->"
 seek backward/\:forward 10 seconds
-.IPs "up and down"
+.iP "up and down"
 seek backward/\:forward  1 minute
-.IPs "pgup and pgdown"
+.iP "pgup and pgdown"
 seek backward/\:forward 10 minutes
-.IPs "< and >"
+.iP "< and >"
 backward/\:forward in playlist
-.IPs "HOME and END"
+.iP "HOME and END"
 go to next/\:previous playtree entry in the parent list
-.IPs "INS and DEL"
+.iP "INS and DEL"
 go to next/\:previous alternative source (ASX playlist only)
-.IPs "p / SPACE"
+.iP "p / SPACE"
 pause movie (any key unpauses)
-.IPs "q / ESC"
+.iP "q / ESC"
 stop playing and quit
-.IPs "+ and -"
+.iP "+ and -"
 adjust audio delay by +/\:- 0.1 second
-.IPs "/ and *"
+.iP "/ and *"
 decrease/\:increase volume
-.IPs "9 and 0"
+.iP "9 and 0"
 decrease/\:increase volume
-.IPs m\ \ \ \ 
+.iP m\ \ \ \ 
 mute sound
-.IPs f\ \ \ \ 
+.iP f\ \ \ \ 
 toggle fullscreen
-.IPs T\ \ \ \ 
+.iP T\ \ \ \ 
 toggle stay-on-top.
 Supported by video out drivers which use X11, except SDL, as well as directx
 and gl2 under Windows.
-.IPs "w and e"
+.iP "w and e"
 decrease/\:increase panscan range
-.IPs o\ \ \ \ 
+.iP o\ \ \ \ 
 toggle OSD states: none / seek / seek + timer / seek + timer + total time
-.IPs d\ \ \ \ 
+.iP d\ \ \ \ 
 toggle frame dropping states:  none / skip display / skip decoding
 (see \-framedrop and \-hardframedrop)
-.IPs v\ \ \ \ 
+.iP v\ \ \ \ 
 toggle subtitle visibility
-.IPs j\ \ \ \ 
+.iP j\ \ \ \ 
 switch subtitle language
 .IP F\ \ \ \ 
 toggle display of "forced subtitles"
-.IPs a\ \ \ \ 
+.iP a\ \ \ \ 
 toggle subtitle aligment: top/middle/bottom
-.IPs "z and x"
+.iP "z and x"
 adjust subtitle delay by +/\:- 0.1 second
-.IPs "r and t"
+.iP "r and t"
 adjust subtitle position
-.IPs i\ \ \ \ 
+.iP i\ \ \ \ 
 set EDL mark
 .RE
 .PD 1
@@ -256,14 +256,14 @@ output (xv, (x)vidix, (x)mga, etc), or t
 (\-vf eq or \-vf eq2).
 .PP
 .PD 0
-.RSs
-.IPs "1 and 2"
+.rS
+.iP "1 and 2"
 adjust contrast
-.IPs "3 and 4"
+.iP "3 and 4"
 adjust brightness
-.IPs "5 and 6"
+.iP "5 and 6"
 adjust hue
-.IPs "7 and 8"
+.iP "7 and 8"
 adjust saturation
 .RE
 .PD 1
@@ -271,16 +271,16 @@ adjust saturation
 .TP
 .B GUI keyboard control
 .PD 0
-.RSs
-.IPs ENTER
+.rS
+.iP ENTER
 start playing
-.IPs s\ \ \ \ 
+.iP s\ \ \ \ 
 stop playing
-.IPs l\ \ \ \ 
+.iP l\ \ \ \ 
 load file
-.IPs c\ \ \ \ 
+.iP c\ \ \ \ 
 skin browser
-.IPs p\ \ \ \ 
+.iP p\ \ \ \ 
 toggle playlist
 .RE
 .PD 1
@@ -288,12 +288,12 @@ toggle playlist
 .TP
 .B TV input control
 .PD 0
-.RSs
-.IPs "h and k"
+.rS
+.iP "h and k"
 select previous/\:next channel
-.IPs n\ \ \ \ 
+.iP n\ \ \ \ 
 change norm
-.IPs u\ \ \ \ 
+.iP u\ \ \ \ 
 change channel list
 .RE
 .PD 1
@@ -368,14 +368,14 @@ handle carriage return (i.e. \\r).
 Increment verbose level (more \-v means more verbosity).
 .
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 only some informational output (default)
-.IPs 1
+.iP 1
 some basic debug infos, avi header, function values (init debug)
-.IPs 2
+.iP 2
 print avi indexes, chunk inputs, more debug infos (player debug)
-.IPs 3
+.iP 3
 prints everything related to input parsers (parser debug)
 .RE
 .PD 1
@@ -479,21 +479,21 @@ Autorepeat is currently only supported b
 Available commands are:
 
 .PD 0
-.RSs
-.IPs conf=<file>
+.rS
+.iP conf=<file>
 Read alternative input.conf.
 If no full path is given, ~/\:.mplayer/<file> is assumed.
-.IPs ar-delay
+.iP ar-delay
 Delay in msec before we start to autorepeat a key (0 to disable).
-.IPs ar-rate
+.iP ar-rate
 Number of key presses to generate per second on autorepeat.
-.IPs keylist
+.iP keylist
 Prints all keys that can be bound to commands.
-.IPs cmdlist
+.iP cmdlist
 Prints all commands that can be bound to keys.
-.IPs js-dev
+.iP js-dev
 Specifies the joystick device to use (default is /dev/\:input/\:js0).
-.IPs file\ 
+.iP file\ 
 Read commands from the given file.
 Mostly useful with a fifo.
 .br
@@ -571,8 +571,8 @@ directories, /usr/local/share/mplayer/Sk
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-skin fittyfene"
+.rS
+.iP "\-skin fittyfene"
 Tries /usr/local/share/mplayer/Skin/fittyfene
 and afterwards ~/.mplayer/Skin/fittyfene.
 .RE
@@ -623,8 +623,8 @@ output.
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-alang hu,en"
+.rS
+.iP "\-alang hu,en"
 Plays Hungarian and falls back to English if Hungarian is not available.
 .RE
 .PD 1
@@ -661,32 +661,32 @@ This option can be used to tune the CD A
 
 Available options are:
 .
-.RSs
-.IPs speed=<value>
+.rS
+.iP speed=<value>
 set CD spin speed
-.IPs paranoia=<0\-2>
+.iP paranoia=<0\-2>
 set paranoia level
-.RSss
+.rP
 0: disable checking
 .br
 1: overlap checking only (default)
 .br
 2: full data correction and verification
-.REss
-.IPs generic-dev=<value>
+.rE
+.iP generic-dev=<value>
 use specified generic SCSI device
-.IPs sector-size=<value>
+.iP sector-size=<value>
 atomic read size
-.IPs overlap=<value>
+.iP overlap=<value>
 force minimum overlap search during verification to <value> sectors.
-.IPs toc-bias
+.iP toc-bias
 Assume that the beginning offset of track 1 as reported in the TOC will be
 addressed as LBA\ 0.
 Some Toshiba drives need this for getting track boundaries correct.
-.IPs toc-offset=<value>
+.iP toc-offset=<value>
 Add <value> sectors to the values reported when addressing tracks.
 May be negative.
-.IPs (no)skip
+.iP (no)skip
 (never) accept imperfect data reconstruction.
 .RE
 .
@@ -714,12 +714,12 @@ This option is honored by codecs (AC3 on
 Available options are:
 
 .PD 0
-.RSs
-.IPs 2
+.rS
+.iP 2
 stereo
-.IPs 4
+.iP 4
 surround
-.IPs 6
+.iP 6
 full 5.1
 .RE
 .PD 1
@@ -763,10 +763,10 @@ Pass the following parameters to the DVB
 the default ones:
 
 .PD 0
-.RSs
-.IPs card=<1\-4>
+.rS
+.iP card=<1\-4>
 Specifies using card number 1\-4 (default: 1).
-.IPs file=<file>
+.iP file=<file>
 Instructs MPlayer to read the channels list from <file>.
 Default is ~/.mplayer/channels.conf.{sat,ter,cbl} (based on your card type)
 or ~/.mplayer/channels.conf as a last resort.
@@ -838,14 +838,14 @@ Used when decoding from multiple PNG or 
 Available options are:
 
 .PD 0
-.RSs
-.IPs w=<value>
+.rS
+.iP w=<value>
 width of the output (autodetect)
-.IPs h=<value>
+.iP h=<value>
 height of the output (autodetect)
-.IPs fps=<value>
+.iP fps=<value>
 fps of the output (default: 25)
-.IPs type=<value>
+.iP type=<value>
 type of input files (available types: jpeg, png, tga, sgi)
 .RE
 .PD 1
@@ -884,18 +884,18 @@ It may also be used to play audio CDs wh
 Available options are:
 
 .PD 0
-.RSs
-.IPs on\ \ \ 
+.rS
+.iP on\ \ \ 
 use raw audio demuxer
-.IPs channels=<value>
+.iP channels=<value>
 number of channels
-.IPs rate=<value>
+.iP rate=<value>
 rate in samples per second
-.IPs samplesize=<value>
+.iP samplesize=<value>
 sample size in byte
-.IPs bitrate=<value>
+.iP bitrate=<value>
 bitrate for rawaudio files
-.IPs format=<value>
+.iP format=<value>
 fourcc in hex
 .RE
 .PD 1
@@ -907,22 +907,22 @@ This option lets you play raw video file
 Available options are:
 
 .PD 0
-.RSs
-.IPs on\ \ \ 
+.rS
+.iP on\ \ \ 
 use raw video demuxer
-.IPs fps=<value>
+.iP fps=<value>
 rate in frames per second, default 25.0
-.IPs sqcif|qcif|cif|4cif|pal|ntsc
+.iP sqcif|qcif|cif|4cif|pal|ntsc
 set standard image size
-.IPs w=<value>
+.iP w=<value>
 image width in pixels
-.IPs h=<value>
+.iP h=<value>
 image height in pixels
-.IPs y420|yv12|yuy2|y8
+.iP y420|yv12|yuy2|y8
 set colorspace
-.IPs format=<value>
+.iP format=<value>
 colorspace (fourcc) in hex
-.IPs size=<value>
+.iP size=<value>
 frame size in Bytes
 .RE
 .PD 1
@@ -955,10 +955,10 @@ Seek to given time position.
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-ss 56"
+.rS
+.iP "\-ss 56"
 seeks to 56 seconds
-.IPs "\-ss 01:10:00"
+.iP "\-ss 01:10:00"
 seeks to 1\ hour 10\ min
 .RE
 .PD 1
@@ -997,40 +997,40 @@ samplerate and use this codec.
 
 Available options are:
 .
-.RSs
-.IPs noaudio
+.rS
+.iP noaudio
 no sound
-.IPs driver=<value>
+.iP driver=<value>
 available: dummy, v4l, v4l2, bsdbt848
-.IPs device=<value>
+.iP device=<value>
 Specify other device than the default /dev/\:video0.
-.IPs input=<value>
+.iP input=<value>
 Specify other input than the default 0 (Television) (see output for a list)
-.IPs freq=<value>
+.iP freq=<value>
 Specify the frequency to set the tuner to (e.g.\& 511.250).
 Not compatible with channels parameter.
-.IPs outfmt=<value>
+.iP outfmt=<value>
 Specify the output format of the tuner with a preset value supported by the
 V4L driver (yv12, rgb32, rgb24, rgb16, rgb15, uyvy, yuy2, i420) or an
 arbitrary format given as hex value.
 Try outfmt=help for a list of all available formats.
-.IPs width=<value>
+.iP width=<value>
 width of the output window
-.IPs height=<value>
+.iP height=<value>
 height of the output window
-.IPs fps=<value>
+.iP fps=<value>
 framerate at which to capture video (frames per second)
-.IPs buffersize=<value>
+.iP buffersize=<value>
 maximum size of the capture buffer in megabytes (default: dynamical)
-.IPs norm=<value>
+.iP norm=<value>
 available: PAL, SECAM, NTSC. For v4l2 use the normid option below.
-.IPs normid=<value>
+.iP normid=<value>
 v4l2 only. See MPlayer output for a list of available TV norms.
-.IPs channel=<value>
+.iP channel=<value>
 Set tuner to <value> channel.
-.IPs chanlist=<value>
+.iP chanlist=<value>
 available: europe-east, europe-west, us-bcast, us-cable, etc
-.IPs channels=<channel>\-<name>,<channel>\-<name>,...
+.iP channels=<channel>\-<name>,<channel>\-<name>,...
 Set names for channels.
 Use _ for spaces in names (or play with quoting ;-).
 The channel names will then be written using OSD, and the commands tv_step_channel,
@@ -1039,17 +1039,17 @@ Not compatible with frequency parameter.
 Warning: The channel number will then be the position in the 'channels' list,
 beginning with 1.
 Example: use tv://1, tv://2, tv://TV1, tv_set_channel 1, tv_set_channel 2, tv_set_channel TV1, etc.
-.IPs [brightness|contrast|hue|saturation]=<-100\-100>
+.iP [brightness|contrast|hue|saturation]=<-100\-100>
 set the color equalizer on the card
-.IPs audiorate=<value>
+.iP audiorate=<value>
 set audio capture bitrate
-.IPs forceaudio
+.iP forceaudio
 capture audio even if there are no audio sources reported by v4l
-.IPs alsa\ 
+.iP alsa\ 
 capture from ALSA
-.IPs amode=<0\-3>
+.iP amode=<0\-3>
 choose an audio mode:
-.RSss
+.rP
 0: mono
 .br
 1: stereo
@@ -1057,44 +1057,44 @@ choose an audio mode:
 2: language 1
 .br
 3: language 2
-.REss
-.IPs forcechan=<1\-2>
+.rE
+.iP forcechan=<1\-2>
 By default, the count of recorded audio channels is determined automatically
 by querying the audio mode from the tv card.
 This option allows to force stereo/\:mono recording regardless of the amode
 option and the values returned by v4l.
 This can be used for troubleshooting when the tv card is unable to report the
 current audio mode.
-.IPs adevice=<value>
+.iP adevice=<value>
 set an audio device
-.RSss
+.rP
 /dev/\:...\& for OSS
 .br
 hardware ID for ALSA
-.REss
-.IPs audioid=<value>
+.rE
+.iP audioid=<value>
 choose an audio output of the capture card, if it has more of them
-.IPs [volume|bass|treble|balance]=<0\-65535>
-.IPs [volume|bass|treble|balance]=<0\-100>
+.iP [volume|bass|treble|balance]=<0\-65535>
+.iP [volume|bass|treble|balance]=<0\-100>
 These options set parameters of the mixer on the video capture card.
 They will have no effect, if your card doesn't have one.
 For v4l1, 0\-65535 is a valid range.
 For v4l2, the valid range is 0 to 100, and 50 maps to the default value of the
 control, as reported by the driver.
-.IPs immediatemode=<bool>
+.iP immediatemode=<bool>
 A value of 0 means capture and buffer audio and video together
 (default for MEncoder).
 A value of 1 (default for MPlayer) means to do video capture only and let the
 audio go through a loopback cable from the TV card to the soundcard.
-.IPs mjpeg
+.iP mjpeg
 Use hardware mjpeg compression (if the card supports it). 
 When using this option, you do not need to specify the width and height
 of the output window, because MPlayer will determine it automatically 
 from the decimation value (see below).
-.IPs decimation=<1,2,4>
+.iP decimation=<1,2,4>
 choose the size of the picture that will be compressed by hardware
 mjpeg compression:
-.RSss
+.rP
 1: full size
     704x576    PAL
     704x480    NTSC
@@ -1106,8 +1106,8 @@ mjpeg compression:
 4: small size
     176x144    PAL
     176x120    NTSC
-.REss
-.IPs quality=<0\-100>
+.rE
+.iP quality=<0\-100>
 choose the quality of the jpeg compression
 .br
 (quality < 60 recommended for full size)
@@ -1167,14 +1167,14 @@ Resample alphamap of the font.
 Can be:
 .
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 plain white fonts
-.IPs 0.75
+.iP 0.75
 very narrow black outline (default)
-.IPs 1
+.iP 1
 narrow black outline
-.IPs 10
+.iP 10
 bold black outline
 .RE
 .PD 1
@@ -1195,7 +1195,7 @@ With fontconfig, this option determines 
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 \-font ~/\:.mplayer/\:arial-14/\:font.desc
 .br
 \-font ~/\:.mplayer/\:arialuni.ttf
@@ -1227,14 +1227,14 @@ Turns off automatic loading of subtitle 
 Specifies which mode the OSD should start in.
 .
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 subtitles only
-.IPs 1
+.iP 1
 volume + seek (default)
-.IPs 2
+.iP 2
 volume + seek + timer + percentage
-.IPs 3
+.iP 3
 volume + seek + timer + percentage + total time
 .RE
 .PD 1
@@ -1262,8 +1262,8 @@ priority when searching for subtitles.
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-slang hu,en"
+.rS
+.iP "\-slang hu,en"
 Selects Hungarian and falls back to English if Hungarian is not available.
 .RE
 .PD 1
@@ -1276,16 +1276,16 @@ when original and scaled frame size alre
 smooth subtitles with the gaussian blur.
 The available modes are:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 none (fastest, very ugly)
-.IPs 1
+.iP 1
 approximate (broken?)
-.IPs 2
+.iP 2
 full (slow)
-.IPs 3
+.iP 3
 bilinear (default, fast and not too bad)
-.IPs 4
+.iP 4
 uses swscaler gaussian blur (looks very good)
 .RE
 .PD 1
@@ -1324,12 +1324,12 @@ Give the demuxer ID as defined in subrea
 .B \-sub-fuzziness <mode>
 Adjust matching fuzziness when searching for subtitles:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 exact match
-.IPs 1
+.iP 1
 load all subs containing movie name
-.IPs 2
+.iP 2
 load all subs in the current directory
 .RE
 .PD 1
@@ -1356,7 +1356,7 @@ specify codepage of the subtitle.
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 \-subcp latin2
 .br
 \-subcp cp1250
@@ -1373,11 +1373,11 @@ autodetection fails.
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-subcp enca:cs:latin2"
+.rS
+.iP "\-subcp enca:cs:latin2"
 Guess the encoding, assuming the subtitles are Czech, fall back to
 latin 2, if the detection fails.
-.IPs "\-subcp enca:pl:cp1250"
+.iP "\-subcp enca:pl:cp1250"
 Guess the encoding for Polish, fall back to cp1250.
 .RE
 .PD 1
@@ -1400,14 +1400,14 @@ Zero means that text-scale and osd-scale
 The mode can be:
 
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 no autoscale
-.IPs 1
+.iP 1
 proportional to movie height
-.IPs 2
+.iP 2
 proportional to movie width
-.IPs 3
+.iP 3
 proportional to movie diagonal (default)
 .RE
 .PD 1
@@ -1475,21 +1475,21 @@ Specify audio plugin(s) and their option
 
 Available options are:
 .
-.RSs
-.IPs list=[plugins]
+.rS
+.iP list=[plugins]
 comma separated list of plugins (resample, surround, format, volume,
 extrastereo, volnorm)
-.IPs delay=<sec>
+.iP delay=<sec>
 example plugin, do not use.
-.IPs format=<format>
+.iP format=<format>
 output format (format plugin only)
-.IPs fout=<Hz>
+.iP fout=<Hz>
 output frequency (resample plugin only)
-.IPs volume=<0\-255>
+.iP volume=<0\-255>
 volume (volume plugin only)
-.IPs mul=<value>
+.iP mul=<value>
 stereo coefficient (default: 2.5) (extrastereo plugin only)
-.IPs softclip
+.iP softclip
 compressor / 'soft-clipping' capabilities (volume plugin only)
 .RE
 .
@@ -1502,32 +1502,32 @@ Select the format used for output from t
 defines in libao2/afmt.h):
 .
 .PD 0
-.RSs
-.IPs 1
+.rS
+.iP 1
 Mu-Law
-.IPs 2
+.iP 2
 A-Law
-.IPs 4
+.iP 4
 Ima-ADPCM
-.IPs 8
+.iP 8
 Signed 8-bit
-.IPs 16
+.iP 16
 Unsigned 8-bit
-.IPs 32
+.iP 32
 Unsigned 16-bit (Little-Endian)
-.IPs 64
+.iP 64
 Unsigned 16-bit (Big-Endian)
-.IPs 128
+.iP 128
 Signed  16-bit (Little-Endian)
-.IPs 256
+.iP 256
 Signed 16-bit (Big-Endian)
-.IPs 512
+.iP 512
 MPEG (2) Audio
-.IPs 1024
+.iP 1024
 AC3
-.IPs 4096
+.iP 4096
 Signed 32-bit (Little-Endian)
-.IPs 8192
+.iP 8192
 Signed 32-bit (Big-Endian)
 .RE
 .PD 1
@@ -1569,10 +1569,10 @@ See \-ao help for a list of compiled-in 
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-ao alsa,oss,"
+.rS
+.iP "\-ao alsa,oss,"
 Try the ALSA driver, then the OSS driver, then others.
-.IPs "\-ao alsa:mmap:noblock:device=hw#0.3"
+.iP "\-ao alsa:mmap:noblock:device=hw#0.3"
 Sets noblock-mode, mmap-mode and the device-name as first card, fourth device.
 .RE
 .PD 1
@@ -1587,12 +1587,12 @@ Available audio output drivers are:
 .B alsa\ \ \ 
 ALSA 0.9/1.x audio output driver.
 .PD 0
-.RSs
-.IPs mmap\ \ \ 
+.rS
+.iP mmap\ \ \ 
 Sets experimental mmap-mode (does not work for more than 2 channels).
-.IPs noblock
+.iP noblock
 Sets noblock-mode.
-.IPs device=<device>
+.iP device=<device>
 Sets the device name.
 Replace any ',' with '.' and any ':' with '#' in the ALSA device name.
 .RE
@@ -1612,8 +1612,8 @@ ALSA 0.5 audio output driver.
 .B oss\ \ \ \ 
 OSS audio output driver
 .PD 0
-.RSs
-.IPs dsp-device
+.rS
+.iP dsp-device
 Sets the audio-output device (default: /dev/dsp).
 .RE
 .PD 1
@@ -1698,7 +1698,7 @@ on.
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 \-display xtest.localdomain:0
 .RE
 .PD 1
@@ -1720,82 +1720,82 @@ Warning: may cause OSD/\:SUB corruption!
 .B \-dxr2 <option1:option2:...>
 This option is used to control the dxr2 driver.
 .
-.RSs
-.IPs ar-mode=<value>
+.rS
+.iP ar-mode=<value>
 aspect ratio mode (0 = normal, 1 = pan scan, 2 = letterbox (default))
-.IPs iec958-encoded
+.iP iec958-encoded
 iec958 output mode
-.IPs iec958-decoded
+.iP iec958-decoded
 set iec958 output mode to decoded (default)
-.IPs macrovision=<value>
+.iP macrovision=<value>
 macrovision mode (0 = off (default), 1 = agc, 2 = agc 2 colorstripe,
 3 = agc 4 colorstripe)
-.IPs mute\ 
+.iP mute\ 
 mute sound output
-.IPs unmute
+.iP unmute
 unmute sound output
-.IPs ucode=<value>
+.iP ucode=<value>
 path to the microcode
 .RE
 .RS
 
 .I TV Out
 .RE
-.RSs
-.IPs 75ire
+.rS
+.iP 75ire
 enable 7.5 IRE output mode
-.IPs no75ire
+.iP no75ire
 disable 7.5 IRE output mode (default)
-.IPs bw\ \ \ 
+.iP bw\ \ \ 
 b/\:w TV output
-.IPs color
+.iP color
 color TV output (default)
-.IPs interlaced
+.iP interlaced
 interlaced TV output (default)
-.IPs nointerlaced
+.iP nointerlaced
 disable interlaced TV output
-.IPs norm=<value>
+.iP norm=<value>
 TV norm (ntsc (default), pal, pal60, palm, paln, palnc)
-.IPs square-pixel
+.iP square-pixel
 set pixel mode to square
-.IPs ccir601-pixel
+.iP ccir601-pixel
 set pixel mode to ccir601
 .RE
 .RS
 
 .I Overlay
 .RE
-.RSs
-.IPs cr-left=<0\-500>
+.rS
+.iP cr-left=<0\-500>
 set the left cropping value (default: 50)
-.IPs cr-right=<0\-500>
+.iP cr-right=<0\-500>
 set the right cropping value (default: 300)
-.IPs cr-top=<0\-500>
+.iP cr-top=<0\-500>
 set the top cropping value (default: 0)
-.IPs cr-bottom=<0\-500>
+.iP cr-bottom=<0\-500>
 set the bottom cropping value (default: 0)
-.IPs ck-[r|g|b]=<0\-255>
+.iP ck-[r|g|b]=<0\-255>
 set the r(ed), g(reen) or b(lue) gain of the overlay color-key
-.IPs ck-[r|g|b]min=<0\-255>
+.iP ck-[r|g|b]min=<0\-255>
 minimum value for the respective color key
-.IPs ck-[r|g|b]max=<0\-255>
+.iP ck-[r|g|b]max=<0\-255>
 maximum value for the respective color key
-.IPs ignore-cache
+.iP ignore-cache
 ignore cached overlay settings
-.IPs update-cache
+.iP update-cache
 update cached overlay settings
-.IPs ol-osd
+.iP ol-osd
 enable overlay onscreen display
-.IPs nool-osd
+.iP nool-osd
 disable overlay onscreen display (default)
-.IPs ol[h|w|x|y]-cor=<-20\-20>
+.iP ol[h|w|x|y]-cor=<-20\-20>
 adjust the overlay size (h,w) and position (x,y) in case it doesn't match the
 window perfectly (default: 0)
-.IPs overlay
+.iP overlay
 activate overlay (default)
-.IPs nooverlay
+.iP nooverlay
 activate TVout
-.IPs overlay-ratio=<1\-2500>
+.iP overlay-ratio=<1\-2500>
 tune the overlay (default 1000)
 .RE
 .
@@ -1833,22 +1833,22 @@ used.
 The available types are:
 
 .PD 0
-.RSs
-.IPs above
+.rS
+.iP above
 Use _NETWM_STATE_ABOVE hint if available.
-.IPs below
+.iP below
 Use _NETWM_STATE_BELOW hint if available.
-.IPs fullscreen
+.iP fullscreen
 Use _NETWM_STATE_FULLSCREEN hint if available.
-.IPs layer
+.iP layer
 Use _WIN_LAYER hint with default layer.
-.IPs layer=<0..15>
+.iP layer=<0..15>
 Use _WIN_LAYER hint with layer number.
-.IPs netwm
+.iP netwm
 Force NETWM style.
-.IPs none\ 
+.iP none\ 
 Don't set fullscreen window layer.
-.IPs stays_on_top
+.iP stays_on_top
 Use _NETWM_STATE_STAYS_ON_TOP hint if available.
 .RE
 .PD 1
@@ -1885,14 +1885,14 @@ directx and tdfxfb.
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs 50:40
+.rS
+.iP 50:40
 Places the window at x=50, y=40.
-.IPs 50%:50%
+.iP 50%:50%
 Places the window in the middle of the screen.
-.IPs 100%\ 
+.iP 100%\ 
 Places the window at the middle of the right edge of the screen.
-.IPs 100%:100%
+.iP 100%:100%
 Places the window at the bottom right corner of the screen.
 .RE
 .PD 1
@@ -1913,18 +1913,18 @@ Specify options for the JPEG output.
 Available options are:
 
 .PD 0
-.RSs
-.IPs [no]progressive
+.rS
+.iP [no]progressive
 Specify standard or progressive JPEG.
-.IPs [no]baseline
+.iP [no]baseline
 Specify use of baseline or not.
-.IPs optimize=<value>
+.iP optimize=<value>
 Optimization factor [0\-100]
-.IPs smooth=<value>
+.iP smooth=<value>
 Smooth factor [0\-100]
-.IPs quality=<value>
+.iP quality=<value>
 Quality factor [0\-100]
-.IPs outdir=<value>
+.iP outdir=<value>
 Directory to save the JPEG files
 .RE
 .PD 1
@@ -1944,7 +1944,7 @@ See also \-aspect for movie aspect.
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 \-monitoraspect 4:3  or 1.3333
 .br
 \-monitoraspect 16:9 or 1.7777
@@ -2019,10 +2019,10 @@ displays) this option tells MPlayer whic
 Specifies compression level for PNG output.
 .
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 no compression
-.IPs 9
+.iP 9
 max compression
 .RE
 .PD 1
@@ -2090,10 +2090,10 @@ See \-vo help for a list of compiled-in 
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-vo xmga,xv,"
+.rS
+.iP "\-vo xmga,xv,"
 Try the Matrox X11 driver, then the Xv driver, then others.
-.IPs "\-vo directx:noaccel"
+.iP "\-vo directx:noaccel"
 Uses the DirectX driver with acceleration features turned off.
 .RE
 .PD 1
@@ -2112,8 +2112,8 @@ accelerated playback.
 If you cannot use a hardware specific driver, this is probably
 the best option.
 .PD 0
-.RSs
-.IPs port=<number>
+.rS
+.iP port=<number>
 Select a specific XVideo port.
 .RE
 .PD 1
@@ -2130,18 +2130,18 @@ Currently only supported by tdfx_vid.
 Video output driver that uses the XvMC (X Video Motion Compensation)
 extension of XFree86 4.x to speed up MPEG1/2 and VCR2 decoding.
 .PD 0
-.RSs
-.IPs benchmark
+.rS
+.iP benchmark
 Disables image display.
 Necessary for proper benchmarking of drivers that change
 image buffers on monitor retrace only (nVidia).
-.IPs queue
+.iP queue
 Queue frames for display to allow more parallel work of the video hardware.
 May add a small (not noticeable) constant A/V desync.
-.IPs sleep
+.iP sleep
 Use sleep function while waiting for rendering to finish
 (not recomended on Linux).
-.IPs wait\ 
+.iP wait\ 
 Do not use sleep function while waiting for rendering to finish
 (default).
 .RE
@@ -2160,8 +2160,8 @@ VIDIX (VIDeo Interface for *niX) is an i
 video acceleration features of different graphics cards.
 Very fast output driver on cards that support it.
 .PD 0
-.RSs
-.IPs <subdevice>
+.rS
+.iP <subdevice>
 Explicitly choose the VIDIX subdevice driver to use.
 Available subdevice drivers are cyberblade_vid, mach64_vid, mga_crtc2_vid,
 mga_vid, nvidia_vid, pm3_vid, radeon_vid, rage128_vid, sis_vid.
@@ -2171,8 +2171,8 @@ mga_vid, nvidia_vid, pm3_vid, radeon_vid
 .B xvidix (X11 only)
 X11 frontend for VIDIX
 .PD 0
-.RSs
-.IPs <subdevice>
+.rS
+.iP <subdevice>
 same as vidix
 .RE
 .PD 1
@@ -2181,8 +2181,8 @@ same as vidix
 Generic and platform independent VIDIX frontend, can even run in a
 textconsole with nVidia cards.
 .PD 0
-.RSs
-.IPs <subdevice>
+.rS
+.iP <subdevice>
 same as vidix
 .RE
 .PD 1
@@ -2190,8 +2190,8 @@ same as vidix
 .B winvidix (Windows only)
 Windows frontend for VIDIX
 .PD 0
-.RSs
-.IPs <subdevice>
+.rS
+.iP <subdevice>
 same as vidix
 .RE
 .PD 1
@@ -2199,8 +2199,8 @@ same as vidix
 .B directx (Windows only)
 Output driver that uses the DirectX interface.
 .PD 0
-.RSs
-.IPs noaccel
+.rS
+.iP noaccel
 Turns off hardware acceleration.
 Try this option if you have display problems.
 .RE
@@ -2211,8 +2211,8 @@ Mac OS X Quartz output driver.
 Under some circumstances, it might be more efficient to force a
 packed YUV output format, with e.g. \-vf format=yuy2
 .PD 0
-.RSs
-.IPs device_id=<number>
+.rS
+.iP device_id=<number>
 Choose the display device to use in fullscreen.
 .RE
 .PD 1
@@ -2228,14 +2228,14 @@ alternative implementation.
 Very general output driver that should work on any VESA VBE 2.0
 compatible card.
 .PD 0
-.RSs
-.IPs dga\ \ 
+.rS
+.iP dga\ \ 
 Turns on DGA mode.
-.IPs nodga
+.iP nodga
 Turns off DGA mode.
-.IPs vidix
+.iP vidix
 FIXME: document this
-.IPs lvo\ \ 
+.iP lvo\ \ 
 FIXME: document this
 .RE
 .PD 1
@@ -2249,11 +2249,11 @@ Very simple version, no OSD support and 
 the maximum texture size of your OpenGL implementation.
 Intended to work even with the most simple OpenGL implementations.
 .PD 0
-.RSs
-.IPs manyfmts
+.rS
+.iP manyfmts
 Enables support for more (RGB and BGR) color formats.
 Needs OpenGL version >= 1.2, NOT yet WORKING correctly.
-.IPs slice-height=<0\-...>
+.iP slice-height=<0\-...>
 Number of lines copied to texture in one piece (default: 4).
 0 for whole image.
 .RE
@@ -2283,22 +2283,22 @@ Output driver for the GGI graphics syste
 .B directfb
 Play video using the DirectFB library.
 .PD 0
-.RSs
-.IPs (no)input
+.rS
+.iP (no)input
 Use the DirectFB instead of the MPlayer keyboard code (default: enabled).
-.IPs buffermode=single|double|triple
+.iP buffermode=single|double|triple
 Double and triple buffering give best results if you want to avoid tearing issues.
 Triple buffering is more efficent than double buffering as it doesn't block MPlayer
 while waiting for the vertical retrace.
 Single buffering should be avoided (default: single).
-.IPs fieldparity=top|bottom
+.iP fieldparity=top|bottom
 Control the output order for interlaced frames (default: disabled).
 Valid values are top = top fields first, bottom = bottom fields first.
 This option doesn't have any effect on progressive film material
 like most MPEG movies are.
 You need to enable this option if you have tearing issues/unsmooth
 motions watching interlaced film material.
-.IPs layer=N
+.iP layer=N
 Will force layer with id N for playback (default: -1 - auto).
 .RE
 .PD 1
@@ -2307,33 +2307,33 @@ Will force layer with id N for playback 
 Matrox G400/G450/G550 specific output driver that uses the DirectFB library.
 Enables CRTC2 (second head), displaying video independently of the first head.
 .PD 0
-.RSs
-.IPs (no)bes
+.rS
+.iP (no)bes
 Enable the use of the Matrox BES (backend scaler) (default: disabled).
 Gives very good results concerning speed and output quality as interpolated
 picture processing is done in hardware.
 Works only on the primary head.
-.IPs (no)spic
+.iP (no)spic
 Make use of the Matrox sub picture layer to display the OSD (default: enabled).
-.IPs (no)crtc2
+.iP (no)crtc2
 Turn on TV-out on the second head (default: enabled).
 The output quality is amazing as it's a full interlaced picture
 with proper sync to every odd/even field.
-.IPs (no)input
+.iP (no)input
 Use the DirectFB instead of the MPlayer keyboard code (default: disabled).
-.IPs buffermode=single|double|triple
+.iP buffermode=single|double|triple
 Double and triple buffering give best results if you want to avoid tearing issues.
 Triple buffering is more efficent than double buffering as it doesn't block MPlayer
 while waiting for the vertical retrace.
 Single buffering should be avoided (default: triple).
-.IPs fieldparity=top|bottom
+.iP fieldparity=top|bottom
 Control the output order for interlaced frames (default: disabled).
 Valid values are top = top fields first, bottom = bottom fields first.
 This option doesn't have any effect on progressive film material
 like most MPEG movies are.
 You need to enable this option if you have tearing issues/unsmooth
 motions watching interlaced film material.
-.IPs tvnorm=pal|ntsc|auto
+.iP tvnorm=pal|ntsc|auto
 Will set the TV norm of the Matrox card without the need
 for modifying /etc/\:directfbrc (default: disabled).
 Valid norms are pal = PAL, ntsc = NTSC.
@@ -2368,10 +2368,10 @@ Works in conjunction with a kernel modul
 Creative DXR2 specific output driver.
 Also see the \-dxr2 option.
 .PD 0
-.RSs
-.IPs x11
+.rS
+.iP x11
 Enables overlay.
-.IPs xv
+.iP xv
 Enables overlay.
 .RE
 .PD 1
@@ -2381,16 +2381,16 @@ Sigma Designs em8300 MPEG decoder chip (
 Hollywood Plus) specific output driver.
 Also see the lavc video filter.
 .PD 0
-.RSs
-.IPs overlay
+.rS
+.iP overlay
 Activates the overlay instead of TVOut.
-.IPs prebuf
+.iP prebuf
 Turns on prebuffering.
-.IPs sync
+.iP sync
 Will turn on the new sync-engine.
-.IPs norm=<norm>
+.iP norm=<norm>
 Specifies the TV norm.
-.RSss
+.rP
 0: Does not change current norm (default).
 .br
 1: Auto-adjust using PAL/NTSC.
@@ -2402,8 +2402,8 @@ Specifies the TV norm.
 4: PAL-60
 .br
 5: NTSC
-.REss
-.IPs device=<number>
+.rE
+.iP device=<number>
 Specifies the device number to use if you have more than one em8300 card.
 .RE
 .PD 1
@@ -2465,14 +2465,14 @@ If the list has a trailing ',' it will f
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-ac mp3acm"
+.rS
+.iP "\-ac mp3acm"
 force l3codeca.acm MP3 codec
-.IPs "\-ac mad,"
+.iP "\-ac mad,"
 try libmad first, then fallback to others
-.IPs "\-ac hwac3,a52,"
+.iP "\-ac hwac3,a52,"
 try hardware AC3 passthrough, then software AC3 codec, then others
-.IPs "\-ac -ffmp3,"
+.iP "\-ac -ffmp3,"
 try other codecs except FFmpeg's MP3 decoder
 .RE
 .PD 1
@@ -2483,18 +2483,18 @@ Activate a comma separated list of audio
 .br
 Available filters are:
 .
-.RSs
-.IPs resample[=srate[:sloppy][:type]]
+.rS
+.iP resample[=srate[:sloppy][:type]]
 Changes the sample rate of the audio stream to an integer srate (Hz).
 It only supports the 16 bit little endian format.
-.IPs channels[=nch]
+.iP channels[=nch]
 Change the number of channels to nch output channels.
 If the number of output channels is bigger than the number of input channels
 empty channels are inserted (except mixing from mono to stereo, then the mono
 channel is repeated in both of the output channels).
 If the number of output channels is smaller than the number of input channels
 the exceeding channels are truncated.
-.IPs format[=bps:f]
+.iP format[=bps:f]
 Select the format f and bytes per sample bps used for output from the
 filter layer.
 The option bps is an integer and denotes Bytes per sample.
@@ -2508,57 +2508,57 @@ unsigned or signed
 .br
 le or be (little or big endian)
 .br
-.IPs volume[=v:sc]
+.iP volume[=v:sc]
 Select the output volume level.
 This filter is not reentrant and can therefore only be enabled once for every
 audio stream.
-.RSss
+.rP
 v: desired gain in dB for all channels in the stream.
 The gain can be set from -200dB to +60dB (where -200dB mutes the sound
 completely and +60dB equals a gain of 1000).
 .br
 sc: enable soft clipping.
-.REss
-.IPs pan[=n:l01:l02:..l10:l11:l12:...ln0:ln1:ln2:...]
+.rE
+.iP pan[=n:l01:l02:..l10:l11:l12:...ln0:ln1:ln2:...]
 Mixes channels arbitrarily, see DOCS/HTML/en/devices.html#audio-dev for details.
-.RSss
+.rP
 n: number of output channels (1\-6).
 .br
 lij: how much of input channel j is mixed into output channel i.
-.REss
-.IPs sub[=fc:ch]
+.rE
+.iP sub[=fc:ch]
 Add sub-woofer channel.
-.RSss
+.rP
 fc: Cutoff frequency for low-pass filter (20Hz to 300Hz) default is 60Hz.
 .br
 ch: channel number for the sub-channel.
-.REss
-.IPs surround[=d]
+.rE
+.iP surround[=d]
 Decoder for matrix encoded surround sound, works on many 2 channel files.
-.RSss
+.rP
 d: delay time in ms for the rear speakers (0ms to 1000ms) default is 15ms.
-.REss
-.IPs delay[=ch1:ch2:...]
+.rE
+.iP delay[=ch1:ch2:...]
 Delays the sound output.
 Specify the delay separately for each channel in milliseconds (floating point
 number between 0 and 1000).
-.IPs export[=mmapped_file[:nsamples]]
+.iP export[=mmapped_file[:nsamples]]
 Exports the incoming signal to other processes using memory mapping (mmap()).
-.RSss
+.rP
 mmapped_file: File to map data to (default: ~/.mplayer/mplayer-af_export).
 .br
 nsamples: number of samples per channel (default: 512)
-.REss
+.rE
 .RE
 .
 .TP
 .B \-af-adv <force=(0\-3):list=(filters)> (see \-af option too)
 Specify advanced audio filter options:
 .
-.RSs
-.IPs force=<0\-3>
+.rS
+.iP force=<0\-3>
 Forces the insertion of audio filters to one of the following:
-.RSss
+.rP
 0: Completely automatic insertion of filters (default)
 .br
 1: Optimize for accuracy
@@ -2566,8 +2566,8 @@ Forces the insertion of audio filters to
 2: Optimize for speed
 .br
 3: Turn off auto
-.REss
-.IPs list=<filters>
+.rE
+.iP list=<filters>
 Same as \-af (see \-af option).
 .RE
 .
@@ -2582,10 +2582,10 @@ See \-afm help for a full list of availa
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-afm ffmpeg"
+.rS
+.iP "\-afm ffmpeg"
 try FFmpeg's libavcodec (mp1/\:2/\:3) codecs first
-.IPs "\-afm acm,dshow"
+.iP "\-afm acm,dshow"
 try Win32 codecs first
 .RE
 .PD 1
@@ -2597,7 +2597,7 @@ It's autodetected on MPEG files, but can
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 \-aspect 4:3  or \-aspect 1.3333
 .br
 \-aspect 16:9 or \-aspect 1.7777
@@ -2616,7 +2616,7 @@ If decoding with libavcodec, you can spe
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 \-lavdopts bug=1
 .RE
 .PD 1
@@ -2628,19 +2628,19 @@ Just add the values of the things you wa
 Available options are:
 .RE
 .
-.RSs
-.IPs ec\ \ \ 
+.rS
+.iP ec\ \ \ 
 error concealment:
-.RSss
+.rP
 1: use strong deblock filter for damaged MBs
 .br
 2: iterative MV search (slow)
 .br
 3: all (default)
-.REss
-.IPs er=<value>
+.rE
+.iP er=<value>
 error resilience:
-.RSss
+.rP
 .br
 0: disabled
 .br
@@ -2651,10 +2651,10 @@ error resilience:
 3: agressive (more checks but might cause problems even for valid bitstreams)
 .br
 4: very agressive
-.REss
-.IPs debug=<value>
+.rE
+.iP debug=<value>
 debug:
-.RSss
+.rP
 .br
 0: disabled
 .br
@@ -2683,10 +2683,10 @@ debug:
 0x0800: memory management control operations (H264)
 .br
 0x1000: bugs
-.REss
-.IPs vismv=<value>
+.rE
+.iP vismv=<value>
 vismv:
-.RSss
+.rP
 .br
 0: disabled
 .br
@@ -2695,10 +2695,10 @@ vismv:
 2: visualize forward predicted MVs of B frames
 .br
 4: visualize backward predicted MVs of B frames
-.REss
-.IPs bug=<value>
+.rE
+.iP bug=<value>
 manually work around encoder bugs:
-.RSss
+.rP
 0: nothing
 .br
 1: autodetect bugs (default)
@@ -2722,12 +2722,12 @@ manually work around encoder bugs:
 512 (mpeg4): direct-qpel-blocksize bug (autodetected per fourcc/ver)
 .br
 1024 (mpeg4): edge padding bug (autodetected per fourcc/ver)
-.REss
-.IPs idct=<0\-99>
+.rE
+.iP idct=<0\-99>
 (see lavcopts)
 For best decoding quality use the same idct algorithm for decoding and encoding.
 This may come at a price in accuracy, though.
-.IPs gray\ 
+.iP gray\ 
 grayscale only decoding (a bit faster than with color)
 .RE
 .
@@ -2769,24 +2769,24 @@ Specifies SwScaler parameters.
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 \-vf scale \-ssf lgb=3.0
 .RE
 .PD 1
 .
 .PD 0
-.RSs
-.IPs lgb=<0\-100>
+.rS
+.iP lgb=<0\-100>
 Gaussian blur filter (luma)
-.IPs cgb=<0\-100>
+.iP cgb=<0\-100>
 Gaussian blur filter (chroma)
-.IPs ls=<0\-100>
+.iP ls=<0\-100>
 sharpen filter (luma)
-.IPs cs=<0\-100>
+.iP cs=<0\-100>
 sharpen filter (chroma)
-.IPs chs=<h>
+.iP chs=<h>
 chroma horizontal shifting
-.IPs cvs=<v>
+.iP cvs=<v>
 chroma vertical shifting
 .RE
 .PD 1
@@ -2796,12 +2796,12 @@ chroma vertical shifting
 Select type of MP2/\:MP3 stereo output.
 .
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 Stereo
-.IPs 1
+.iP 1
 Left channel
-.IPs 2
+.iP 2
 Right channel
 .RE
 .PD 1
@@ -2819,28 +2819,28 @@ of \-vf scale (0 (soft) \- 100 (sharp)),
 length (1 \- 10).
 
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 fast bilinear (default)
-.IPs 1
+.iP 1
 bilinear
-.IPs 2
+.iP 2
 bicubic (good quality)
-.IPs 3
+.iP 3
 experimental
-.IPs 4
+.iP 4
 nearest neighbour (bad quality)
-.IPs 5
+.iP 5
 area
-.IPs 6
+.iP 6
 luma bicubic / chroma bilinear
-.IPs 7
+.iP 7
 gauss
-.IPs 8
+.iP 8
 sincR
-.IPs 9
+.iP 9
 lanczos
-.IPs 10
+.iP 10
 bicubic spline
 .RE
 .PD 1
@@ -2858,14 +2858,14 @@ If the list has a trailing ',' it will f
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-vc divx"
+.rS
+.iP "\-vc divx"
 force Win32/\:VFW DivX codec, no fallback
-.IPs "\-vc divx4,"
+.iP "\-vc divx4,"
 try divx4linux codec first, then fallback to others
-.IPs "\-vc -divxds,-divx,"
+.iP "\-vc -divxds,-divx,"
 try other codecs except Win32 DivX codecs
-.IPs "\-vc ffmpeg12,mpeg12,"
+.iP "\-vc ffmpeg12,mpeg12,"
 try libavcodec's MPEG1/\:2 codec, then libmpeg2, then others
 .RE
 .PD 1
@@ -2886,11 +2886,11 @@ See \-vfm help for a full list of availa
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-vfm ffmpeg,dshow,vfw"
+.rS
+.iP "\-vfm ffmpeg,dshow,vfw"
 try the libavcodec, then Directshow, then VFW codecs and fallback to the
 others, if still none is ok
-.IPs "\-vfm xanim"
+.iP "\-vfm xanim"
 try XAnim codecs first
 .RE
 .PD 1
@@ -2904,18 +2904,18 @@ Disables aspect calculations.
 Specify additional parameters when decoding with XviD.
 .
 .PD 0
-.RSs
-.IPs deblock-chroma
+.rS
+.iP deblock-chroma
 Activate XviD internal postprocessing filter: chroma deblock filter.
 See also \-vf pp, which is faster than XviD's own filter.
-.IPs deblock-luma
+.iP deblock-luma
 Activate XviD internal postprocessing filter: luma deblock filter.
 See also \-vf pp, which is faster than XviD's own filter.
-.IPs dr2\ \ 
+.iP dr2\ \ 
 Activate direct rendering method 2.
-.IPs nodr2
+.iP nodr2
 Deactivate direct rendering method 2.
-.IPs filmeffect
+.iP filmeffect
 Activate XviD internal film grain effect.
 Adds artificial film grain to the video. 
 May increase perceived quality, while lowering true quality.
@@ -2926,10 +2926,10 @@ Also see \-vf noise.
 .TP
 .B \-xy <value>
 .PD 0
-.RSs
-.IPs value<=8
+.rS
+.iP value<=8
 Scale image by factor <value>.
-.IPs value>8
+.iP value>8
 Set width to value and calculate height to keep correct aspect ratio.
 .RE
 .PD 1
@@ -3005,10 +3005,10 @@ Available filters are:
 Crops the given part of the image and discards the rest.
 Useful to remove black bands from widescreen movies.
 .PD 0
-.RSs
-.IPs w,h
+.rS
+.iP w,h
 Cropped width and height, defaults to original width and height.
-.IPs x,y
+.iP x,y
 Position of the cropped picture, defaults to center.
 .RE
 .PD 1
@@ -3024,11 +3024,11 @@ The threshold can be optionally specifie
 The plugin responds to the input.conf directive 'change_rectangle'
 that takes two parameters.
 .PD 0
-.RSs
-.IPs w,h
+.rS
+.iP w,h
 width and height (default: -1, maximum possible width where boundaries
 are still visible.
-.IPs x,y
+.iP x,y
 top left corner position (default: -1, uppermost leftmost)
 .RE
 .PD 1
@@ -3037,27 +3037,27 @@ top left corner position (default: -1, u
 Expands (not scales) movie resolution to the given value and places the
 unscaled original at coordinates x, y.
 Can be used for placing subtitles/\:OSD in the resulting black bands.
-.RSs
-.IPs w,h
+.rS
+.iP w,h
 expanded width,height (default: original width,height).
 Negative values for w and h are treated as offsets to the original size.
 
 .I EXAMPLE:
 .PD 0
-.RSs
+.rS
 .IP expand=0:-50:0:0
 adds a 50 pixel border to the bottom of the picture
 .RE
 .PD 1
-.IPs x,y
+.iP x,y
 position of original image on the expanded image (default: center)
-.IPs o
+.iP o
 OSD/subtitle rendering
-.RSss
+.rP
 0: disable (default)
 .br
 1: enable
-.REss
+.rE
 .RE
 .TP
 .B flip\ \ \ 
@@ -3075,14 +3075,14 @@ portrait and not landscape.
 .B scale[=w:h[:interlaced[:chr_drop[:param[:presize]]]]]
 Scales the image with the software scaler (slow) and performs a YUV<\->RGB
 colorspace conversion (also see \-sws option).
-.RSs
-.IPs w,h\ \ 
+.rS
+.iP w,h\ \ 
 scaled width/height (default: original width/height)
 .br
 .I NOTE:
 If \-zoom is used, and underlying filters (including libvo) are
 incapable of scaling, it defaults to d_width/\:d_height!
-.RSss
+.rP
  0:   scaled d_width/\:d_height
 .br
 -1:   original width/\:height
@@ -3090,12 +3090,12 @@ incapable of scaling, it defaults to d_w
 -2:   Calculate w/\:h using the other dimension and the prescaled aspect ratio.
 .br
 -3:   Calculate w/\:h using the other dimension and the original aspect ratio.
-.REss
-.IPs interlaced
+.rE
+.iP interlaced
 Toggle interlaced scaling.
-.IPs chr_drop
+.iP chr_drop
 chroma skipping
-.RSss
+.rP
 0: use all available input lines for chroma
 .br
 1: use only every 2. input line for chroma
@@ -3103,19 +3103,19 @@ chroma skipping
 2: use only every 4. input line for chroma
 .br
 3: use only every 8. input line for chroma
-.REss
-.IPs param
+.rE
+.iP param
 scaling parameter (depends upon the scaling method used)
-.RSss
+.rP
 \-sws 2 (bicubic):  sharpness (0 (soft) \- 100 (sharp))
 .br
 \-sws 7 (gaussian): sharpness (0 (soft) \- 100 (sharp))
 .br
 \-sws 9 (lanczos):  filter length (1\-10)
-.REss
-.IPs presize
+.rE
+.iP presize
 Scale to preset sizes.
-.RSss
+.rP
 qntsc:   352x240 (NTSC quarter screen)
 .br
 qpal:    352x288 (PAL quarter screen)
@@ -3127,7 +3127,7 @@ pal:     720x576 (standard PAL)
 sntsc:   640x480 (square pixel NTSC)
 .br
 spal:    768x576 (square pixel PAL)
-.REss
+.rE
 .RE
 .TP
 .B dsize={aspect|w:h}
@@ -3155,8 +3155,8 @@ Clamps YUV color values to the CCIR 601 
 .B rgb2bgr[=swap]
 RGB 24/\:32 <\-> BGR 24/\:32 colorspace conversion.
 .PD 0
-.RSs
-.IPs swap\ 
+.rS
+.iP swap\ 
 Also perform  R <\-> B swapping.
 .RE
 .PD 1
@@ -3169,8 +3169,8 @@ Restricts the colorspace for the next fi
 Use together with the scale filter for a real conversion.
 For a list of available formats see format=fmt=help.
 .PD 0
-.RSs
-.IPs fourcc
+.rS
+.iP fourcc
 format name like rgb15, bgr24, yv12, etc (default: yuy2)
 .RE
 .PD 1
@@ -3182,8 +3182,8 @@ Unlike the format filter, this will allo
 the one you specify.
 For a list of available formats see noformat=fmt=help.
 .PD 0
-.RSs
-.IPs fourcc
+.rS
+.iP fourcc
 format name like rgb15, bgr24, yv12, etc (default: yv12)
 .RE
 .PD 1
@@ -3201,12 +3201,12 @@ The keywords accept a '-' prefix to disa
 A ':' followed by a letter may be appended to the option to indicate its
 scope:
 .PD 0
-.RSs
-.IPs a
+.rS
+.iP a
 Automatically switches the filter off if the CPU is too slow.
-.IPs c
+.iP c
 Do chrominance filtering, too.
-.IPs y
+.iP y
 Do not do chrominance filtering (only luminance filtering).
 .RE
 .PD 1
@@ -3215,18 +3215,18 @@ Do not do chrominance filtering (only lu
 .I EXAMPLE:
 .RE
 .PD 0
-.RSs
-.IPs "\-vf pp=hb/vb/dr/al"
+.rS
+.iP "\-vf pp=hb/vb/dr/al"
 horizontal and vertical deblocking, deringing and automatic
 brightness/\:contrast
-.IPs "\-vf pp=hb/vb/dr/al/lb"
+.iP "\-vf pp=hb/vb/dr/al/lb"
 horizontal and vertical deblocking, deringing, automatic
 brightness/\:contrast and linear blend deinterlacer
-.IPs "\-vf pp=de/-al"
+.iP "\-vf pp=de/-al"
 default filters without brightness/\:contrast correction
-.IPs "\-vf pp=de/tn:1:2:3"
+.iP "\-vf pp=de/tn:1:2:3"
 Enable default filters & temporal denoiser.
-.IPs "\-vf pp=hb:y/vb:a \-autoq 6"
+.iP "\-vf pp=hb:y/vb:a \-autoq 6"
 Deblock horizontal only luminance and switch vertical deblocking on or
 off automatically depending on available CPU time.
 .RE
@@ -3234,12 +3234,12 @@ off automatically depending on available
 .TP
 .B spp[=quality[:qp[:mode]]]
 simple postprocessing filter
-.RSs
-.IPs quality
+.rS
+.iP quality
 0\-6 (default: 3)
-.IPs qp\ \ \ 
+.iP qp\ \ \ 
 force quantization parameter (default: 0, use qp from video)
-.IPs mode\ \ \ 
+.iP mode\ \ \ 
 0: hard thresholding (default)
 .br
 1: soft thresholding (better deringing, but blurrier)
@@ -3247,8 +3247,8 @@ force quantization parameter (default: 0
 .TP
 .B qp=equation
 qp change filter
-.RSs
-.IPs equation
+.rS
+.iP equation
 some equation like "2+2*sin(PI*qp)"
 .RE
 .TP
@@ -3262,14 +3262,14 @@ You should see a red, green and blue str
 .B lavc[=quality:fps]
 Fast software YV12 to MPEG1 conversion with libavcodec for use with DVB/\:DXR3.
 Faster and of better quality than \-vf fame.
-.RSs
-.IPs quality
-.RSss
+.rS
+.iP quality
+.rP
 1\-31: fixed qscale
 .br
 32\-:  fixed bitrate in kBits
-.REss
-.IPs fps\ \ 
+.rE
+.iP fps\ \ 
 force output fps (float value) (default: 0, autodetect based on height)
 .RE
 .TP
@@ -3281,8 +3281,8 @@ Set up optimal scaling for DVB cards, sc
 calculating the Y axis scaling in software to keep aspect.
 It's only useful together with expand+scale
 (\-vf dvbscale,scale=-1:0,expand=-1:576:-1:-1:1,lavc).
-.RSs
-.IPs aspect
+.rS
+.iP aspect
 control aspect ratio, calculate as DVB_HEIGHT*ASPECTRATIO (default:
 576*4/3=768), set it to 576*(16/9)=1024 for a 16:9 TV.
 .RE
@@ -3290,20 +3290,20 @@ control aspect ratio, calculate as DVB_H
 .B noise[=luma[u][t|a][h][p]:chroma[u][t|a][h][p]]
 Adds noise.
 .PD 0
-.RSs
-.IPs <0\-100>
+.rS
+.iP <0\-100>
 luma noise
-.IPs <0\-100>
+.iP <0\-100>
 chroma noise
-.IPs u
+.iP u
 uniform noise (gaussian otherwise)
-.IPs t
+.iP t
 temporal noise (noise pattern changes between frames)
-.IPs a
+.iP a
 averaged temporal noise (smoother, but a lot slower)
-.IPs h
+.iP h
 high quality (slightly better looking, slightly slower)
-.IPs p
+.iP p
 mix random noise with a (semi)regular pattern
 .RE
 .PD 1
@@ -3315,12 +3315,12 @@ images really still (This should enhance
 It can be given from 0 to 3 parameters.  If you omit a parameter, a reasonable
 value will be inferred.
 .PD 0
-.RSs
-.IPs luma\ 
+.rS
+.iP luma\ 
 spatial luma strength (default = 4)
-.IPs chroma
+.iP chroma
 spatial chroma strength (default = 3)
-.IPs time\ 
+.iP time\ 
 temporal strength (default = 6)
 .RE
 .PD 1
@@ -3435,38 +3435,38 @@ Use libavcodec's deinterlace filter.
 Donald Graft's adaptive kernel deinterlacer.
 Deinterlaces parts of a video if a configurable threshold is exceeded.
 .PD 0
-.RSs
-.IPs "thresh (0 - 255)"
+.rS
+.iP "thresh (0 - 255)"
 Threshold (default 10).
-.IPs "map (0 or 1)"
+.iP "map (0 or 1)"
 Paint pixels which exceed the threshold white (default: 0).
-.IPs "order (0 or 1)"
+.iP "order (0 or 1)"
 Swap fields if 1 (default: 0).
-.IPs "sharp (0 or 1)"
+.iP "sharp (0 or 1)"
 Enable additional sharpening (default: 0).
-.IPs "twoway (0 or 1)"
+.iP "twoway (0 or 1)"
 Enable twoway sharpening (default: 0).
 .RE
 .PD 1
 .TP
 .B unsharp=l|cWxH:amount[:l|cWxH:amount]
 Unsharp mask / gaussian blur.
-.RSs
-.IPs l
+.rS
+.iP l
 Apply effect on luma component.
-.IPs c
+.iP c
 Apply effect on chroma components.
-.IPs WxH
+.iP WxH
 width and height of the matrix, odd sized in both directions
 (min = 3x3, max = 13x11 or 11x13, usually something between 3x3 and 7x7)
-.IPs amount
+.iP amount
 Relative amount of sharpness/\:blur to add to the image
 (a sane range should be -1.5\-1.5).
-.RSss
+.rP
 <0: blur
 .br
 >0: sharpen
-.REss
+.rE
 .RE
 .TP
 .B swapuv\ 
@@ -3483,12 +3483,12 @@ permanently (by smoothing, averaging, et
 2 fields (so called half pictures), so you can process (filter) them
 independently and then re-interleave them.
 .PD 0
-.RSs
-.IPs d
+.rS
+.iP d
 deinterleave (placing one above the other)
-.IPs i
+.iP i
 interleave
-.IPs s
+.iP s
 swap fields (exchange even & odd lines)
 .RE
 .PD 1
@@ -3501,10 +3501,10 @@ Especially if combined with other filter
 up images, so be happy if it works but don't complain if it doesn't for
 your combination of filters. 
 .PD 0
-.RSs
-.IPs d
+.rS
+.iP d
 Deinterleave fields, placing them side by side.
-.IPs i
+.iP i
 Interleave fields again (reversing the effect of fil=d).
 .RE
 .PD 1
@@ -3529,8 +3529,8 @@ Development on this filter is no longer 
 and filmdint are better for most applications.
 The following arguments (see syntax above) may be used to control
 detc's behavior:
-.RSs
-.IPs dr
+.rS
+.iP dr
 Set the frame dropping mode.
 0 (default) means don't drop frames to maintain fixed output framerate.
 1 means always drop a frame when there have been no drops or telecine
@@ -3538,19 +3538,19 @@ merges in the past 5 frames.
 2 means always maintain exact 5:4 input to output frame ratio.
 .I NOTE:
 Use mode 1 or 2 with MEncoder.
-.IPs am
+.iP am
 Analysis mode.
 Available values are 0 (fixed pattern with initial frame number
 specified by fr=#) and 1 (agressive search for telecine pattern).
 Default is 1.
-.IPs fr
+.iP fr
 Set initial frame number in sequence.
 0\-2 are the three clean progressive frames; 3 and 4 are the two
 interlaced frames.
 The default, -1, means 'not in telecine sequence'.
 The number specified here is the type for the imaginary previous
 frame before the movie starts.
-.IPs "tr0, tr1, tr2, tr3"
+.iP "tr0, tr1, tr2, tr3"
 Threshold values to be used in certain modes.
 .RE
 .TP
@@ -3611,28 +3611,28 @@ When this filter is used with mplayer, i
 framerate during playback, but it is still generally better than using
 pp=lb or no deinterlacing at all.
 Multiple options can be specified separated by /.
-.RSs
-.IPs crop=w:h:x:y
+.rS
+.iP crop=w:h:x:y
 Just like the crop filter, but faster, and works on mixed hard and soft
 telecined content as well as when y is not a multiple of 4.
 If x or y would require cropping fractional pixels from the chroma
 planes, the crop area is extended.
 This usually means that x and y must be even.
-.IPs io=ifps:ofps
+.iP io=ifps:ofps
 For each ifps input frames the filter will output ofps frames.
 The ratio of ifps/ofps should match the \-fps/\-ofps ratio.
 This could be used to filter movies that are broadcast on TV at a frame
 rate different from their original frame rate.
-.IPs luma_only=n
+.iP luma_only=n
 If n is nonzero, the chroma plane is copied unchanged.
 This is useful for YV12 sampled TV, which discards one of the chroma
 fields.
-.IPs mmx2=n
+.iP mmx2=n
 On x86, if n=1, use MMX2 optimized functions, if n=2, use 3DNow!
 optimized functions, othewise, use plain C.
 If this option is not specified, MMX2 and 3DNow! are auto-detected, use
 this option to override auto-detection.
-.IPs fast=n
+.iP fast=n
 The larger n will speed up the filter at the expense of accuracy.
 The default value is n=3.
 If n is odd, a frame immediately following a frame marked with the
@@ -3647,22 +3647,22 @@ much accuracy.
 If n=4 or 5, a faster, but much less accurate metric will be used to
 find the frame breaks, which is more likely to misdetect high vertical
 detail as interlaced content.
-.IPs verbose=n
+.iP verbose=n
 If n is nonzero, print the detailed metrics for each frame.
 Useful for debugging.
-.IPs dint_thres=n
+.iP dint_thres=n
 Deinterlace threshold.
 Used during de-interlacing of unmatched frames.
 Larger value means less deinterlacing, use n=256 to completely turn off
 deinterlacing.
 Default is n=8.
-.IPs comb_thres=n
+.iP comb_thres=n
 Threshold for comparing a top and bottom fields.
 Defaults to 128.
-.IPs diff_thres=n
+.iP diff_thres=n
 Threshold to detect temporal change of a field.
 Default is 128.
-.IPs sad_thres=n
+.iP sad_thres=n
 Sum of Absolute Difference threshold, default is 64.
 .RE
 .TP
@@ -3684,8 +3684,8 @@ original film frame rate.
 When using this filter, you must specify \-ofps that is 4/5 of the fps of the
 input file (23.976 if the input is 29.97fps).
 The options are:
-.RSs
-.IPs pass=1|2
+.rS
+.iP pass=1|2
 Use two-pass mode.
 This produces best results.
 Pass 1 analyzes the video and writes the results to a log file.
@@ -3695,14 +3695,14 @@ process.
 In order to use divtc two-pass with two-pass video encoding, you must perform
 three passes: first divtc pass 1 and encoder pass 1, then divtc pass 2 and
 encoder pass 1, and finally divtc pass 2 and encoder pass 2.
-.IPs file=filename
+.iP file=filename
 Set the 2-pass log file name (default: "framediff.log").
-.IPs threshold=value
+.iP threshold=value
 Set the minimum strength the telecine pattern must have for the filter to
 believe in it (default: 0.5).
 This is used to avoid recognizing false pattern from the parts of the video
 that are very dark or very still.
-.IPs window=numframes 
+.iP window=numframes 
 Set the number of past frames to look at when searching for pattern
 (default: 30).
 Longer window improves the reliability of the pattern search, but shorter
@@ -3710,7 +3710,7 @@ window improves the reaction time to the
 This only affects the one-pass mode.
 The two-pass mode currently uses fixed window that extends to both future
 and past.
-.IPs phase=0|1|2|3|4
+.iP phase=0|1|2|3|4
 Sets the initial telecine phase for one-pass mode (default: 0).
 The two-pass mode can see the future, so it is able to use the correct
 phase from the beginning, but one-pass mode can only guess.
@@ -3718,7 +3718,7 @@ It catches the correct phase when it fin
 to fix the possible juddering at the beginning.
 The first pass of the two-pass mode also uses this, so if you save the output
 from the first pass, you get constant phase result.
-.IPs deghost=value
+.iP deghost=value
 Set the deghosting threshold (0\-255 for one-pass mode, -255\-255 for two-pass
 mode, default 0).
 If nonzero, deghosting mode is used.
@@ -3740,41 +3740,41 @@ changes.
 The intended use is to fix PAL movies that have been captured with the
 opposite field order to the film-to-video transfer.
 The options are:
-.RSs
-.IPs t
+.rS
+.iP t
 Capture field order top-first, transfer bottom-first.
 Filter will delay the bottom field.
-.IPs b
+.iP b
 Capture bottom-first, transfer top-first.
 Filter will delay the top field.
-.IPs p
+.iP p
 Capture and transfer with the same field order.
 This mode only exists for the documentation of the other options to refer to,
 but if you actually select it, the filter will faithfully do nothing ;-)
-.IPs a
+.iP a
 Capture field order determined automatically by field flags, transfer opposite.
 Filter selects among t and b modes on a frame by frame basis using field flags.
 If no field information is available, then this works just like u.
-.IPs u
+.iP u
 Capture unknown or varying, transfer opposite.
 Filter selects among t and b on a frame by frame basis by analyzing the
 images and selecting the alternative that produces best match between the
 fields.
-.IPs T
+.iP T
 Capture top-first, transfer unknown or varying.
 Filter selects among t and p using image analysis.
-.IPs B
+.iP B
 Capture bottom-first, transfer unknown or varying.
 Filter selects among b and p using image analysis.
-.IPs A
+.iP A
 Capture determined by field flags, transfer unknown or varying.
 Filter selects among t, b and p using field flags and image analysis.
 If no field information is available, then this works just like U.
 This is the default mode.
-.IPs U
+.iP U
 Both capture and transfer unknown or varying.
 Filter selects among t, b and p using image analysis only.
-.IPs v
+.iP v
 Verbose operation.
 Prints the selected mode for each frame and the average squared difference
 between fields for t, b, and p alternatives.
@@ -3795,15 +3795,15 @@ frame, halving the framerate. Even frame
 field, odd frames to the lower field. This can be used to fully reverse
 the effect of the tfields filter (in mode 0). Available modes are:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 odd frames into upper field, even to lower, generating a full-height
 frame at half the framerate
-.IPs 1
+.iP 1
 only output odd frames, even frames are dropped, height unchanged
-.IPs 2
+.iP 2
 only output even frames, odd frames are dropped, height unchanged
-.IPs 3
+.iP 3
 expand each frame to full height, but pad alternate lines with black,
 framerate unchanged
 .RE
@@ -3817,14 +3817,14 @@ MEncoder, and only if both \-fps and \-o
 desired (double) framerate!
 Available modes are:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 leave fields unchanged (this will jump/flicker)
-.IPs 1
+.iP 1
 interpolate missing lines (the algorithm used might not be so good)
-.IPs 2
+.iP 2
 translate fields by 1/4 pixel with linear interp (no jump)
-.IPs 4
+.iP 4
 translate fields by 1/4 pixel with 4tap filter (higher quality)
 .RE
 .PD 1
@@ -3832,10 +3832,10 @@ translate fields by 1/4 pixel with 4tap 
 .B boxblur=radius:power[:radius:power]
 box blur
 .PD 0
-.RSs
-.IPs radius
+.rS
+.iP radius
 size of the filter
-.IPs power
+.iP power
 How often the filter should be applied.
 .RE
 .PD 1
@@ -3843,12 +3843,12 @@ How often the filter should be applied.
 .B sab=rad:pf:colorDiff[:rad:pf:colorDiff]
 shape adaptive blur
 .PD 0
-.RSs
-.IPs rad\ \ \ 
+.rS
+.iP rad\ \ \ 
 blur filter strength (~0.1\-4.0) (slower if larger)
-.IPs pf\ \ \ 
+.iP pf\ \ \ 
 prefilter strength (~0.1\-2.0)
-.IPs colorDiff
+.iP colorDiff
 How different the pixels are allowed to be considered.
 (~0.1\-100.0)
 .RE
@@ -3857,12 +3857,12 @@ How different the pixels are allowed to 
 .B smartblur=rad:strength:thresh[:rad:strength:thresh]
 smart blur
 .PD 0
-.RSs
-.IPs rad\ \ 
+.rS
+.iP rad\ \ 
 blur filter strength (~0.1\-5.0) (slower if larger)
-.IPs strength
+.iP strength
 blur (0.0\-1.0) or sharpen (-1.0\-0.0)
-.IPs thresh
+.iP thresh
 filter all (0), filter flat areas (0\-30) or filter edges (-30\-0)
 .RE
 .PD 1
@@ -3870,10 +3870,10 @@ filter all (0), filter flat areas (0\-30
 .B perspective=x0:y0:x1:y1:x2:y2:x3:y3:t
 perspective correction
 .PD 0
-.RSs
-.IPs x0,y0,...
+.rS
+.iP x0,y0,...
 coordinates of the top left, top right, bottom left, bottom right corners
-.IPs t\ \ \ \ 
+.iP t\ \ \ \ 
 linear (0) or cubic resampling (1)
 .RE
 .PD 1
@@ -3889,8 +3889,8 @@ Reposition and resize stereoscopic image
 Extracts both stereo fields and places them side by side, resizing
 them to maintain the original movie aspect.
 .PD 0
-.RSs
-.IPs lines
+.rS
+.iP lines
 number of lines to select from the middle of the image (default: 12)
 .RE
 .PD 1
@@ -3899,12 +3899,12 @@ number of lines to select from the middl
 Read bitmaps from a FIFO and display them in a window.
 .
 .PD 0
-.RSs
-.IPs hidden
+.rS
+.iP hidden
 sets the default value of the 'hidden' flag (boolean)
-.IPs opaque
+.iP opaque
 flag switching between alphablended (transparent) and opaque (fast) mode
-.IPs fifo\ 
+.iP fifo\ 
 path/filename for the FIFO (named pipe connecting mplayer \-vf bmovl to the
 controlling application)
 .RE
@@ -3914,25 +3914,25 @@ controlling application)
 FIFO commands are:
 .RE
 .PD 0
-.RSs
-.IPs "RGBA32 width height xpos ypos alpha clear"
+.rS
+.iP "RGBA32 width height xpos ypos alpha clear"
 followed by width*height*4 Bytes of raw RGBA32 data.
-.IPs "ABGR32 width height xpos ypos alpha clear"
+.iP "ABGR32 width height xpos ypos alpha clear"
 followed by width*height*4 Bytes of raw ABGR32 data.
-.IPs "RGB24 width height xpos ypos alpha clear"
+.iP "RGB24 width height xpos ypos alpha clear"
 followed by width*height*3 Bytes of raw RGB32 data.
-.IPs "BGR24 width height xpos ypos alpha clear"
+.iP "BGR24 width height xpos ypos alpha clear"
 followed by width*height*3 Bytes of raw BGR32 data.
-.IPs "ALPHA width height xpos ypos alpha"
+.iP "ALPHA width height xpos ypos alpha"
 change alpha for area
-.IPs "CLEAR width height xpos ypos"
+.iP "CLEAR width height xpos ypos"
 clear area
-.IPs OPAQUE
+.iP OPAQUE
 disable all alpha transparency.
 Send "ALPHA 0 0 0 0 0" to enable it again.
-.IPs HIDE\ 
+.iP HIDE\ 
 hide bitmap
-.IPs SHOW\ 
+.iP SHOW\ 
 show bitmap
 .RE
 .PD 1
@@ -3941,30 +3941,30 @@ show bitmap
 Arguments are:
 .RE
 .PD 0
-.RSs
-.IPs "width, height"
+.rS
+.iP "width, height"
 size of image/area
-.IPs "xpos, ypos"
+.iP "xpos, ypos"
 start blitting at X/Y position   
-.IPs alpha
+.iP alpha
 set alpha difference.
 If you set this to -255 you can then send a sequence of ALPHA-commands to set
 the area to -225, -200, -175 etc for a nice fade-in-effect! ;)
-.RSss
+.rP
 0:    same as original
 .br
 255:  makes everything opaque
 .br
 -255: makes everything transparent
-.REss
-.IPs clear
+.rE
+.iP clear
 clear the framebuffer before blitting.
-.RSss
+.rP
 0: The image will just be blitted on top of the old one, so you don't need to
 send 1,8MB of RGBA32 data everytime a small part of the screen is updated.
 .br
 1: clear
-.REss
+.rE
 .RE
 .PD 1
 .TP
@@ -4001,20 +4001,20 @@ It is probably a good idea to put the sc
 The parameters are:
 
 .PD 0
-.RSs
-.IPs xtile
+.rS
+.iP xtile
 number of tiles on the x axis (default: 5)
-.IPs ytile
+.iP ytile
 number of tiles on the y axis (default: 5)
-.IPs output
+.iP output
 Render the tile when 'output' number of frames are reached, where 'output'
 should be a number less than xtile * ytile.
 Missing tiles are left blank.
 You could, for example, write an 8 * 7 tile every 50 frames to have one
 image every 2 seconds @ 25 fps.
-.IPs start  
+.iP start  
 pixel at the start (x/y) (default: 2)
-.IPs delta
+.iP delta
 pixel between 2 tiles, (x/y) (default: 4)
 .RE
 .PD 1
@@ -4025,12 +4025,12 @@ surrounding pixels. Just set a rectangle
 it disappear (and sometimes something even uglier appear \- your
 mileage may vary).
 .PD 0
-.RSs
-.IPs x,y
+.rS
+.iP x,y
 Position of the top left corner of the logo.
-.IPs w,h
+.iP w,h
 Width and height of the cleared rectangle.
-.IPs t
+.iP t
 Thickness of the fuzzy edge of the rectangle (added to w and h). When
 set to -1, a green rectangle is drawn on the screen to simplify finding
 the right x,y,w,h parameters.
@@ -4040,25 +4040,25 @@ the right x,y,w,h parameters.
 .B zrmjpeg[=options]
 Software YV12 to MJPEG encoder for use with the zr2 video
 output device.
-.RSs
-.IPs maxheight=h|maxwidth=w
+.rS
+.iP maxheight=h|maxwidth=w
 These options set the maximum width and height the zr card
 can handle (the MPlayer filter layer currently cannot query those).
-.IPs {dc10+,dc10,buz,lml33}-{PAL|NTSC}
+.iP {dc10+,dc10,buz,lml33}-{PAL|NTSC}
 Use these options to set maxwidth and maxheight automatically to the 
 values known for card/mode combo.
 For example, valid options are: dc10-PAL and buz-NTSC (default: dc10+PAL)
-.IPs color|bw
+.iP color|bw
 Select color or black and white encoding.
 Black and white encoding is faster.
 Color is the default.
-.IPs hdec={1,2,4}
+.iP hdec={1,2,4}
 Horizontal decimation 1, 2 or 4.
-.IPs vdec={1,2,4}
+.iP vdec={1,2,4}
 Vertical decimation 1, 2 or 4.
-.IPs quality=1-20
+.iP quality=1-20
 Set JPEG compression quality [BEST] 1 - 20 [VERY BAD].
-.IPs fd|nofd
+.iP fd|nofd
 By default, decimation is only performed if the Zoran hardware
 can upscale the resulting MJPEG images to the original size.
 The option fd instructs the filter to always perform the requested
@@ -4093,12 +4093,12 @@ a frame boundary.
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-endpos 56"
+.rS
+.iP "\-endpos 56"
 encode only 56 seconds
-.IPs "\-endpos 01:10:00"
+.iP "\-endpos 01:10:00"
 encode only 1 hour 10 minutes
-.IPs "\-endpos 100mb"
+.iP "\-endpos 100mb"
 encode only 100 MBytes
 .RE
 .PD 1
@@ -4109,8 +4109,8 @@ Can be used to override the video fourcc
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-ffourcc div3"
+.rS
+.iP "\-ffourcc div3"
 will have the output file contain 'div3' as video fourcc.
 .RE
 .PD 1
@@ -4125,22 +4125,22 @@ Specify the info header of the resulting
 .br
 Available options are:
 .
-.RSs
-.IPs help\ 
+.rS
+.iP help\ 
 show this description
-.IPs name=<value>
+.iP name=<value>
 title of the work
-.IPs artist=<value>
+.iP artist=<value>
 artist or author of the work
-.IPs genre=<value>
+.iP genre=<value>
 original work category
-.IPs subject=<value>
+.iP subject=<value>
 contents of the work
-.IPs copyright=<value>
+.iP copyright=<value>
 copyright information
-.IPs srcform=<value>
+.iP srcform=<value>
 original format of the digitized material
-.IPs comment=<value>
+.iP comment=<value>
 general comments about the work
 .RE
 .
@@ -4166,14 +4166,14 @@ Use \-oac help to get a list of availabl
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-oac copy"
+.rS
+.iP "\-oac copy"
 no encoding, just streamcopy
-.IPs "\-oac pcm"
+.iP "\-oac pcm"
 encode to uncompressed PCM
-.IPs "\-oac mp3lame"
+.iP "\-oac mp3lame"
 encode to MP3 (using Lame)
-.IPs "\-oac lavc"
+.iP "\-oac lavc"
 encode with a libavcodec codec
 .RE
 .PD 1
@@ -4185,12 +4185,12 @@ Use \-of help to get a list of available
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-of avi"
+.rS
+.iP "\-of avi"
 encode to avi (default)
-.IPs "\-of mpeg"
+.iP "\-of mpeg"
 encode to mpeg
-.IPs "\-of rawvideo"
+.iP "\-of rawvideo"
 raw video stream (no muxing - video only, one stream only)
 .RE
 .PD 1
@@ -4208,14 +4208,14 @@ Use \-ovc help to get a list of availabl
 
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs "\-ovc copy"
+.rS
+.iP "\-ovc copy"
 no encoding, just streamcopy
-.IPs "\-ovc divx4"
+.iP "\-ovc divx4"
 encode to DivX4/\:DivX5
-.IPs "\-ovc raw"
+.iP "\-ovc raw"
 encode to arbitrary uncompressed format (use \-vf format to select)
-.IPs "\-ovc lavc"
+.iP "\-ovc lavc"
 encode with a libavcodec codecs
 .RE
 .PD 1
@@ -4264,10 +4264,10 @@ get help
 .TP
 .B br=<value>
 specify bitrate
-.RSs
-.IPs 4\-16000
+.rS
+.iP 4\-16000
 (in kbit)
-.IPs 16001\-24000000
+.iP 16001\-24000000
 (in bit)
 .RE
 .TP
@@ -4307,13 +4307,13 @@ pass=2.
 Override the pass argument and use XviD VBR Library instead of DivX4 VBR.
 Available options are:
 .
-.RSs
-.IPs 0
+.rS
+.iP 0
 one pass encoding (as in not putting pass on the command line)
-.IPs 1
+.iP 1
 Analysis (first) pass of two pass encoding.
 The resulting AVI file can be directed to /dev/null.
-.IPs 2
+.iP 2
 Final (second) pass of two pass encoding.
 .RE
 .
@@ -4327,16 +4327,16 @@ get help
 .B vbr=<0\-4>
 variable bitrate method
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 cbr
-.IPs 1
+.iP 1
 mt
-.IPs 2
+.iP 2
 rh (default)
-.IPs 3
+.iP 3
 abr
-.IPs 4
+.iP 4
 mtrh
 .RE
 .PD 1
@@ -4367,26 +4367,26 @@ set audio input gain
 .B mode=<0\-3>
 (default: auto)
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 stereo
-.IPs 1
+.iP 1
 joint-stereo
-.IPs 2
+.iP 2
 dualchannel
-.IPs 3
+.iP 3
 mono
 .RE
 .PD 1
 .TP
 .B padding=<0\-2>
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 no
-.IPs 1
+.iP 1
 all
-.IPs 2
+.iP 2
 adjust
 .RE
 .PD 1
@@ -4409,16 +4409,16 @@ will let lame choose values automaticall
 .TP
 .B preset=<value>
 preset values
-.RSs
-.IPs medium
+.rS
+.iP medium
 VBR encoding, good quality, 150\-180 kbps bitrate range.
-.IPs standard
+.iP standard
 VBR encoding, high quality, 170\-210 kbps bitrate range.
-.IPs extreme
+.iP extreme
 VBR encoding, very high quality, 200\-240 kbps bitrate range.
-.IPs insane
+.iP insane
 CBR encoding, highest preset quality, 320 kbps bitrate.
-.IPs <8\-320>
+.iP <8\-320>
 ABR encoding at average given kbps bitrate.
 .RE
 
@@ -4426,16 +4426,16 @@ ABR encoding at average given kbps bitra
 .I EXAMPLE:
 .RE
 .PD 0
-.RSs
-.IPs fast:preset=standard
+.rS
+.iP fast:preset=standard
 for most people on most music and already quite high in quality.
-.IPs cbr:preset=192
+.iP cbr:preset=192
 encode with ABR presets at a 192 kbps forced constant bitrate.
-.IPs preset=172
+.iP preset=172
 encode with ABR presets at a 172 kbps average bitrate.
-.IPs preset=extreme
+.iP preset=extreme
 for people with extremely good hearing and similar equipment.
-.IPs preset=help
+.iP preset=help
 print additional options and informations on presets settings.
 .RE
 .PD 1
@@ -4447,8 +4447,8 @@ Read the source for full details.
 .PP
 .I EXAMPLE:
 .PD 0
-.RSs
-.IPs vcodec=msmpeg4:vbitrate=1800:vhq:keyint=250
+.rS
+.iP vcodec=msmpeg4:vbitrate=1800:vhq:keyint=250
 .RE
 .PD 1
 .
@@ -4456,14 +4456,14 @@ Read the source for full details.
 .B acodec=<value>
 Audio codec (default: mp2):
 .PD 0
-.RSs
-.IPs mp2
+.rS
+.iP mp2
 MPEG Layer 2
-.IPs mp3
+.iP mp3
 MPEG Layer 3
-.IPs ac3
+.iP ac3
 AC3
-.IPs adpcm_ima_wav
+.iP adpcm_ima_wav
 IMA Adaptive PCM (4bits per sample, 4:1 compression)
 .RE
 .PD 1
@@ -4489,52 +4489,52 @@ Maximum number of threads to use (defaul
 .B vcodec=<value>
 use the specified codec (default: mpeg4):
 .PD 0
-.RSs
-.IPs mjpeg
+.rS
+.iP mjpeg
 Motion JPEG
-.IPs ljpeg
+.iP ljpeg
 Lossless JPEG
-.IPs h263\ 
+.iP h263\ 
 H263
-.IPs h263p
+.iP h263p
 H263 Plus
-.IPs mpeg4
+.iP mpeg4
 DivX 4/\:5
-.IPs msmpeg4
+.iP msmpeg4
 DivX 3
-.IPs msmpeg4v2
+.iP msmpeg4v2
 MS MPEG4v2
-.IPs wmv1
+.iP wmv1
 Windows Media Video, version 1 (aka WMV7)
-.IPs wmv2
+.iP wmv2
 Windows Media Video, version 2 (aka WMV8)
-.IPs rv10
+.iP rv10
 an old RealVideo codec
-.IPs mpeg1video
+.iP mpeg1video
 MPEG1 video
-.IPs mpeg2video
+.iP mpeg2video
 MPEG2 video
-.IPs huffyuv
+.iP huffyuv
 HuffYUV
-.IPs asv1
+.iP asv1
 ASUS Video v1
-.IPs asv2
+.iP asv2
 ASUS Video v2
-.IPs ffv1
+.iP ffv1
 FFmpeg's lossless video codec
 .RE
 .PD 1
 .TP
 .B vqmin=<1\-31>
 minimum quantizer (pass\ 1/\:2)
-.RSs
-.IPs 1
+.rS
+.iP 1
 Not recommended (much larger file, little quality difference and weird side
 effects: msmpeg4, h263 will be very low quality, ratecontrol will be confused
 resulting in lower quality and some decoders will not be able to decode it).
-.IPs 2
+.iP 2
 Recommended for normal mpeg4/mpeg1video encoding (default).
-.IPs 3
+.iP 3
 Recommended for h263(p)/msmpeg4.  The reason for preferring 3 over 2 is that
 2 could lead to overflows (this will be fixed for h263(p) by changing the
 quantizer per MB in the future, msmpeg4 cannot be fixed as it does not support
@@ -4570,10 +4570,10 @@ maximum quantizer difference between I o
 .B vmax_b_frames=<0\-4>
 maximum number of B frames between non B frames:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 no B frames (default)
-.IPs 0\-2
+.iP 0\-2
 sane range for MPEG4
 .RE
 .PD 1
@@ -4585,18 +4585,18 @@ motion estimation method.
 so quality may be low.
 Available methods are:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 none (very low quality)
-.IPs 1
+.iP 1
 full (slow)
-.IPs 2
+.iP 2
 log (low quality)
-.IPs 3
+.iP 3
 phods (low quality)
-.IPs 4
+.iP 4
 EPZS (default)
-.IPs 5
+.iP 5
 X1 (experimental)
 .RE
 .PD 1
@@ -4609,12 +4609,12 @@ Macroblock decision algorithm (high qual
 block in all modes and choose the best.
 This is slow but results in better quality and file size.
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 use mbcmp (default)
-.IPs 1
+.iP 1
 select the MB mode which needs the fewest bits (=vhq)
-.IPs 2
+.iP 2
 select the MB mode which has the best rate distortion
 .RE
 .PD 1
@@ -4655,10 +4655,10 @@ no scene changes are detected (default 0
 .TP
 .B vb_strategy=<0\-1>
 strategy to choose between I/\:P/\:B frames (pass\ 2):
-.RSs
-.IPs 0
+.rS
+.iP 0
 always use the maximum number of B frames (default)
-.IPs 1
+.iP 1
 avoid B frames in high motion scenes (will cause bitrate misprediction)
 .RE
 .TP
@@ -4666,10 +4666,10 @@ avoid B frames in high motion scenes (wi
 Activates internal two pass mode, only specify if you wish to use two pass
 encoding (default: disabled).
 .PD 0
-.RSs
-.IPs 1
+.rS
+.iP 1
 first pass
-.IPs 2
+.iP 2
 second pass
 .RE
 .PD 1
@@ -4678,10 +4678,10 @@ second pass
 huffyuv:
 .RE
 .PD 0
-.RSs
-.IPs pass 1
+.rS
+.iP pass 1
 saves statistics
-.IPs pass 2
+.iP pass 2
 encodes with an optimal Huffman table based upon pass 1 statistics.
 .RE
 .PD 1
@@ -4696,9 +4696,9 @@ The aspect parameter can be given as a r
 .RS
 .I EXAMPLE:
 .RE
-.RSs
+.rS
 .PD 0
-.IPs "aspect=16/9 or aspect=1.78"
+.iP "aspect=16/9 or aspect=1.78"
 .PD 1
 .RE
 .TP
@@ -4709,12 +4709,12 @@ filter chain.
 .TP
 .B vbitrate=<value>
 specify bitrate (pass\ 1/\:2).  Warning: 1kBit = 1000 Bits.
-.RSs
-.IPs 4\-16000
+.rS
+.iP 4\-16000
 (in kbit)
-.IPs 16001\-24000000
+.iP 16001\-24000000
 (in bit)
-.IPs 800
+.iP 800
 default
 .RE
 .TP
@@ -4772,12 +4772,12 @@ lmin= <ip_quant>:lmax= <ip_quant>:vb_qfa
 .B vqblur=<0.0\-1.0> (pass 1)
 Quantizer blur, larger values will average the quantizer more over
 time (slower change).
-.RSs
-.IPs 0.0
+.rS
+.iP 0.0
 qblur disabled
-.IPs 0.5
+.iP 0.5
 (default)
-.IPs 1.0
+.iP 1.0
 average the quantizer over all previous frames
 .RE
 .TP
@@ -4791,14 +4791,14 @@ quantizer compression, depends upon vrc_
 .B vrc_eq=<equation>
 main ratecontrol equation (pass\ 1/\:2):
 .RE
-.RSs
-.IPs 1\ \ \ \ 
+.rS
+.iP 1\ \ \ \ 
 constant bitrate
-.IPs tex\ \ 
+.iP tex\ \ 
 constant quality
-.IPs 1+(tex/\:avgTex-1)*qComp
+.iP 1+(tex/\:avgTex-1)*qComp
 approximately the equation of the old ratecontrol code
-.IPs tex^qComp
+.iP tex^qComp
 with qcomp 0.5 or something like that (default)
 .RE
 .PP
@@ -4809,52 +4809,52 @@ infix operators: +,-,*,/,^
 .RS
 variables:
 .RE
-.RSs
-.IPs tex\ \ 
+.rS
+.iP tex\ \ 
 texture complexity
-.IPs iTex,pTex
+.iP iTex,pTex
 intra, non intra texture complexity
-.IPs avgTex
+.iP avgTex
 average texture complexity
-.IPs avgIITex
+.iP avgIITex
 average intra texture complexity in I frames
-.IPs avgPITex
+.iP avgPITex
 average intra texture complexity in P frames
-.IPs avgPPTex
+.iP avgPPTex
 average non intra texture complexity in P frames
-.IPs avgBPTex
+.iP avgBPTex
 average non intra texture complexity in B frames
-.IPs mv\ \ \ 
+.iP mv\ \ \ 
 Bits used for motion vectors
-.IPs fCode
+.iP fCode
 maximum length of motion vector in log2 scale
-.IPs iCount
+.iP iCount
 number of intra macro blocks / number of macro blocks
-.IPs var\ \ 
+.iP var\ \ 
 spatial complexity
-.IPs mcVar
+.iP mcVar
 temporal complexity
-.IPs qComp
+.iP qComp
 qcomp from the command line
-.IPs "isI, isP, isB"
+.iP "isI, isP, isB"
 is 1 if picture type is I/\:P/\:B else 0
-.IPs Pi,E\ 
+.iP Pi,E\ 
 see your favorite math book
 .RE
 .PP
 .RS
 functions:
 .RE
-.RSs
-.IPs max(a,b),min(a,b)
+.rS
+.iP max(a,b),min(a,b)
 maximum / minimum
-.IPs gt(a,b)
+.iP gt(a,b)
 is 1 if a>b, 0 otherwise
-.IPs lt(a,b)
+.iP lt(a,b)
 is 1 if a<b, 0 otherwise
-.IPs eq(a,b)
+.iP eq(a,b)
 is 1 if a==b, 0 otherwise
-.IPs "sin, cos, tan, sinh, cosh, tanh, exp, log, abs"
+.iP "sin, cos, tan, sinh, cosh, tanh, exp, log, abs"
 .RE
 .
 .TP
@@ -4862,10 +4862,10 @@ is 1 if a==b, 0 otherwise
 User specified quality for specific parts (ending, credits, ..) (pass\ 1/\:2).
 The options are <start-frame>, <end-frame>, <quality>[/\:<start-frame>,
 <end-frame>, <quality>[/...]]:
-.RSs
-.IPs "quality (2\-31)"
+.rS
+.iP "quality (2\-31)"
 quantizer
-.IPs "quality (-500\-0)"
+.iP "quality (-500\-0)"
 quality correction in %
 .RE
 .TP
@@ -4875,10 +4875,10 @@ initial complexity (pass\ 1)
 .B vqsquish=<0,1>
 specify how to keep the quantizer between qmin and qmax (pass\ 1/\:2):
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 use clipping
-.IPs 1
+.iP 1
 use a nice differentiable function (default)
 .RE
 .PD 1
@@ -4888,10 +4888,10 @@ single coefficient elimination threshold
 Negative values will also consider the dc coefficient (should be at least -4
 or lower for encoding at quant=1):
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 disabled (default)
-.IPs -4
+.iP -4
 (JVT recommendation)
 .RE
 .PD 1
@@ -4901,22 +4901,22 @@ single coefficient elimination threshold
 Negative values will also consider the dc coefficient (should be at least -4
 or lower for encoding at quant=1):
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 disabled (default)
-.IPs 7
+.iP 7
 (JVT recommendation)
 .RE
 .TP
 .B vstrict=<-1,0,1>
 strict standard compliance
-.RSs
-.IPs 0
+.rS
+.iP 0
 disabled (default)
-.IPs 1
+.iP 1
 only recommended if you want to feed the output into the mpeg4 reference
 decoder
-.IPs -1
+.iP -1
 allows non-standard YV12 huffyuv encoding (20% smaller files, but cannot be
 played by the official huffyuv codec)
 .RE
@@ -4928,12 +4928,12 @@ Adds 2 Bytes per video packet, improves 
 unreliable channels (eg.\& streaming over the internet)
 Each video packet will be encoded in 3 separate partitions:
 .PD 0
-.RSs
-.IPs "1. MVs"
+.rS
+.iP "1. MVs"
 (movement)
-.IPs "2. DC coefficients"
+.iP "2. DC coefficients"
 (low res picture)
-.IPs "3. AC coefficients"
+.iP "3. AC coefficients"
 (details)
 .RE
 .PD 1
@@ -4948,10 +4948,10 @@ as without partitioning an error will tr
 .TP
 .B vpsize=<0\-10000>
 video packet size, improves error-resistance (see \-vdpart option too):
-.RSs
-.IPs 0
+.rS
+.iP 0
 disabled (default)
-.IPs 100-1000
+.iP 100-1000
 good choice
 .RE
 .TP
@@ -4964,20 +4964,20 @@ grayscale only encoding (faster) (defaul
 .B vfdct=<0\-10>
 dct algorithm:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 automatically select a good one (default)
-.IPs 1
+.iP 1
 fast integer
-.IPs 2
+.iP 2
 accurate integer
-.IPs 3
+.iP 3
 mmx
-.IPs 4
+.iP 4
 mlib
-.IPs 5
+.iP 5
 altivec
-.IPs 6
+.iP 6
 floating point AAN
 .RE
 .PD 1
@@ -4987,26 +4987,26 @@ idct algorithm.
 .I NOTE:
 To the best of our knowledge all these IDCTs do pass the IEEE1180 tests.
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 automatically select a good one (default)
-.IPs 1
+.iP 1
 jpeg reference integer
-.IPs 2
+.iP 2
 simple
-.IPs 3
+.iP 3
 simplemmx
-.IPs 4
+.iP 4
 libmpeg2mmx (inaccurate, DON'T USE for encoding with keyint >100)
-.IPs 5
+.iP 5
 ps2
-.IPs 6
+.iP 6
 mlib
-.IPs 7
+.iP 7
 arm
-.IPs 8
+.iP 8
 altivec
-.IPs 9
+.iP 9
 sh4
 .RE
 .PD 1
@@ -5016,10 +5016,10 @@ luminance masking.
 Warning: Be careful, too large values can cause disastrous things.
 Warning2: Large values might look good on some monitors but may look horrible
 on other monitors:
-.RSs
-.IPs 0.0
+.rS
+.iP 0.0
 disabled (default)
-.IPs 0.0\-0.3
+.iP 0.0\-0.3
 sane range
 .RE
 .TP
@@ -5028,10 +5028,10 @@ darkness masking.
 Warning: be careful, too large values can cause disasterous things.
 Warning2: large values might look good on some monitors but may look horrible
 on other monitors / TV / TFT:
-.RSs
-.IPs 0.0
+.rS
+.iP 0.0
 disabled (default)
-.IPs 0.0\-0.3
+.iP 0.0\-0.3
 sane range
 .RE
 .TP
@@ -5044,10 +5044,10 @@ Larger values help against blockiness, i
 decoding.
 Tip: Crop any black borders completely as they will reduce the quality
 of the macro blocks (also applies without scplx_mask).
-.RSs
-.IPs 0.0
+.rS
+.iP 0.0
 disabled (default)
-.IPs 0.0\-0.5
+.iP 0.0\-0.5
 sane range
 .RE
 .TP
@@ -5071,38 +5071,38 @@ use interlaced motion estimation
 use alternative scantable
 .TP
 .B top=<-1\-1>\ \ \ 
-.RSs
-.IPs -1
+.rS
+.iP -1
 automatic
-.IPs 0
+.iP 0
 bottom field first
-.IPs 1
+.iP 1
 top field first
 .RE
 .TP
 .B format=<value>
-.RSs
-.IPs YV12
+.rS
+.iP YV12
 default
-.IPs 444P
+.iP 444P
 for ffv1
-.IPs 422P
+.iP 422P
 for huffyuv, lossless jpeg and ffv1
-.IPs 411P,YVU9
+.iP 411P,YVU9
 for lossless jpeg and ffv1
-.IPs BGR32
+.iP BGR32
 for lossless jpeg and ffv1
 .RE
 .TP
 .B pred
 (for huffyuv)
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 left prediction
-.IPs 1
+.iP 1
 plane/gradient prediction
-.IPs 2
+.iP 2
 median prediction
 .RE
 .PD 1
@@ -5110,16 +5110,16 @@ median prediction
 .B pred
 (for lossless jpeg)
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 left prediction
-.IPs 1
+.iP 1
 top prediction
-.IPs 2
+.iP 2
 topleft prediction
-.IPs 3
+.iP 3
 plane/gradient prediction
-.IPs 6
+.iP 6
 mean prediction
 .RE
 .PD 1
@@ -5127,10 +5127,10 @@ mean prediction
 .B coder
 (for ffv1)
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 vlc coding (golomb rice)
-.IPs 1
+.iP 1
 arithmetic coding (cabac)
 .RE
 .PD 1
@@ -5138,10 +5138,10 @@ arithmetic coding (cabac)
 .B context
 (for ffv1)
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 small context model
-.IPs 1
+.iP 1
 large context model
 .RE
 .PD 1
@@ -5165,30 +5165,30 @@ comparison function for sub pel motion e
 .B mbcmp=<0\-2000>
 comparison function for the macroblock decision, only used if mbd=0
 .PD 0
-.RSs
-.IPs "0 (SAD)"
+.rS
+.iP "0 (SAD)"
 sum of absolute differences, fast (default)
-.IPs "1 (SSE)"
+.iP "1 (SSE)"
 sum of squared errors
-.IPs "2 (SATD)"
+.iP "2 (SATD)"
 sum of absolute hadamard transformed differences
-.IPs "3 (DCT)"
+.iP "3 (DCT)"
 sum of absolute dct transformed differences
-.IPs "4 (PSNR)"
+.iP "4 (PSNR)"
 sum of the squared quantization errors (don't use, low quality)
-.IPs "5 (BIT)"
+.iP "5 (BIT)"
 number of bits needed for the block
-.IPs "6 (RD)"
+.iP "6 (RD)"
 rate distortion optimal, slow
-.IPs "7 (ZERO)"
+.iP "7 (ZERO)"
 0
-.IPs "8 (VSAD)"
+.iP "8 (VSAD)"
 sum of absolute vertical differences 
-.IPs "9 (VSSE)"
+.iP "9 (VSSE)"
 sum of squared vertical differences
-.IPs "10 (NSSE)"
+.iP "10 (NSSE)"
 noise preserving sum of squared differences
-.IPs +256\ 
+.iP +256\ 
 use chroma too, doesn't work (correctly) with B frames currently
 .RE
 .PD 1
@@ -5205,14 +5205,14 @@ Diamond type & size for motion estimatio
 .I NOTE:
 The sizes of the normal diamonds and shape adaptive ones don't have
 the same meaning.
-.RSs
-.IPs -3
+.rS
+.iP -3
 shape adaptive (fast) diamond with size 3
-.IPs -2
+.iP -2
 shape adaptive (fast) diamond with size 2
-.IPs -1
+.iP -1
 experimental
-.IPs  1
+.iP  1
 normal size=1 diamond (default) =EPZS type diamond
 .nf
 .ne
@@ -5221,7 +5221,7 @@ normal size=1 diamond (default) =EPZS ty
       0 
 .fi
 .br
-.IPs 2
+.iP 2
 normal size=2 diamond
 .nf
 .ne
@@ -5241,12 +5241,12 @@ vs bitrate sense (assuming that there wo
 by the IDCT, which is obviously not the case) it simply finds a block for
 the minimum of error and lambda*bits.
 .PD 0
-.RSs
-.IPs lambda
+.rS
+.iP lambda
 qp dependant constant
-.IPs bits\ 
+.iP bits\ 
 amount of bits needed to encode the block
-.IPs error
+.iP error
 sum of squared errors of the quantization
 .RE
 .PD 1
@@ -5267,10 +5267,10 @@ needs mbd=2
 .B last_pred=<0\-99>
 Amount of motion predictors from the previous frame
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 (default)
-.IPs a
+.iP a
 will use 2a+1 x 2a+1 macro block square of motion vector predictors from the
 previous frame
 .RE
@@ -5279,12 +5279,12 @@ previous frame
 .B preme=<0\-2> 
 motion estimation pre-pass
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 disabled
-.IPs 1
+.iP 1
 only after I frames (default)
-.IPs 2
+.iP 2
 always
 .RE
 .PD 1
@@ -5349,14 +5349,14 @@ this can and should be used together wit
 the trellis quantization (optimal for constant weight) will be used as startpoint
 for the iterative search.
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 disabled (default)
-.IPs 1
+.iP 1
 only lower the absolute value of coefficients
-.IPs 2
+.iP 2
 only change coefficients before the last non zero coefficient + 1
-.IPs 3
+.iP 3
 try all
 .RE
 .PD 1
@@ -5535,16 +5535,16 @@ enable a better prediction of AC compone
 .B vhq=<0\-4>
 enable a higher quality ME search using DCT, faster to slower:
 .PD 0
-.RSs
-.IPs 0
+.rS
+.iP 0
 off (default)
-.IPs 1
+.iP 1
 mode decision (inter/intra MB)
-.IPs 2
+.iP 2
 limited search
-.IPs 3
+.iP 3
 medium search
-.IPs 4
+.iP 4
 wide search
 .RE
 .PD 1

$MirOS: ports/multimedia/mplayer/patches/patch-configure,v 1.1.7.1 2005/03/18 15:50:49 tg Exp $
$OpenBSD: patch-configure,v 1.34 2005/05/13 16:14:00 biorn Exp $
--- configure.orig	Wed Apr 13 11:46:13 2005
+++ configure	Thu May 19 21:26:30 2005
@@ -62,7 +62,7 @@ cygwin()  { issystem "CYGWIN"  ; return 
 freebsd() { issystem "FreeBSD" ; return "$?" ; }
 netbsd()  { issystem "NetBSD"  ; return "$?" ; }
 bsdos()   { issystem "BSD/OS"  ; return "$?" ; }
-openbsd() { issystem "OpenBSD" ; return "$?" ; }
+openbsd() { issystem "OpenBSD" || issystem "MirBSD" ; return "$?" ; }
 bsd()     { freebsd || netbsd || bsdos || openbsd ; return "$?" ; }
 qnx()     { issystem "QNX"     ; return "$?" ; }
 darwin()  { issystem "Darwin"  ; return "$?" ; }
@@ -430,7 +430,7 @@ if test -z "$_target" ; then
   # OS name
   system_name=`( uname -s ) 2>&1`
   case "$system_name" in
-  Linux|FreeBSD|NetBSD|BSD/OS|OpenBSD|SunOS|QNX|Darwin|GNU|BeOS)
+  Linux|FreeBSD|MirBSD|NetBSD|BSD/OS|OpenBSD|SunOS|QNX|Darwin|GNU|BeOS)
     ;;
   IRIX*)
     system_name=IRIX
@@ -475,6 +475,9 @@ if test -z "$_target" ; then
         if [ "`$_cc -dumpmachine | grep x86_64 | cut -d- -f1`" = "x86_64" -a \
              -z "`echo $CFLAGS | grep -- -m32`"  ]; then
           host_arch=x86_64
+        elif [ "`$_cc -dumpmachine | grep amd64 | cut -d- -f1`" = "amd64" -a \
+              -z "`echo $CFLAGS | grep -- -m32`"  ]; then
+          host_arch=x86_64
         else
           host_arch=i386
         fi
@@ -501,6 +504,7 @@ else
     netbsd) system_name=NetBSD ;;
     bsd/os) system_name=BSD/OS ;;
     openbsd) system_name=OpenBSD ;;
+    mirbsd) system_name=OpenBSD ;;
     sunos) system_name=SunOS ;;
     qnx) system_name=QNX ;;
     morphos) system_name=MorphOS ;;
@@ -710,10 +714,15 @@ fi
 
 x86_exts_check()
 {
+  case $host_arch in
+  x86_64) pparam="3dnow 3dnowext mmx mmxext xmm sse2"
+    ;;
+  *)
   pparam=`$_cpuinfo | grep 'features' | cut -d ':' -f 2 | _head 1`
   if test -z "$pparam" ; then
     pparam=`$_cpuinfo | grep 'flags' | cut -d ':' -f 2 | _head 1`
   fi
+  esac
 
   _mmx=no
   _3dnow=no
@@ -2195,7 +2204,7 @@ fi
 
 
 echocheck "iconv"
-if test "$_iconv" = auto ; then
+if test "$_iconv" != no ; then
   _iconv_tmp='#include <iconv.h>'
 
   cat > $TMPC << EOF
@@ -2708,19 +2717,19 @@ if mingw32 ; then
   _ld_pthread=''
 elif hpux ; then
   _ld_pthread=''
-elif ( cc_check && $TMPO ) ; then              # QNX
+elif ( qnx && cc_check && $TMPO ) ; then              # QNX
   _ld_pthread=' ' # _ld_pthread='' would disable pthreads, but the test worked
-elif ( cc_check -lpthread && $TMPO ) ; then
-  _ld_pthread='-lpthread'
 elif ( cc_check -pthread && $TMPO ) ; then
   _ld_pthread='-pthread'
+elif ( cc_check -lpthread && $TMPO ) ; then
+  _ld_pthread='-lpthread'
 else
   if test "$_ld_static" ; then
     # for crosscompilation, we cannot execute the program, be happy if we can link statically
-    if ( cc_check -lpthread ) ; then
-      _ld_pthread='-lpthread'
-    elif ( cc_check -pthread ) ; then
+    if ( cc_check -pthread ) ; then
      _ld_pthread='-pthread'
+    elif ( cc_check -lpthread ) ; then
+      _ld_pthread='-lpthread'
     else
       echores "no static pthread found (v4l, vo_gl, ao_alsa, ao_nas, ao_macosx, Win32 loader disabled)"
       _ld_pthread='' ; _nas=no ; _tv_v4l=no ; _macosx=no ; _win32=no
@@ -3789,6 +3798,8 @@ if test "$_aa" = yes ; then
   _def_aa='#define HAVE_AA 1'
   if cygwin ; then
     _ld_aa=`aalib-config --libs | cut -d " " -f 2,5,6`
+  else
+    _ld_aa="-laa"
   fi
   _vosrc="$_vosrc vo_aa.c"
   _vomodules="aa $_vomodules"
@@ -4730,7 +4741,7 @@ echores "$_sgiaudio"
 
 
 echocheck "VCD support"
-if linux || bsdos || freebsd || netbsd || sunos || darwin ; then
+if linux || bsdos || freebsd || netbsd || openbsd || sunos || darwin ; then
   _inputmodules="vcd $_inputmodules"
   _def_vcd='#define HAVE_VCD 1'
   echores "ok"

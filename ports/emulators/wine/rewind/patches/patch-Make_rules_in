$MirOS$

	Our make seems to not handle substituted target definitions well.

--- Make.rules.in.orig	2003-09-24 22:18:36.000000000 +0000
+++ Make.rules.in	2003-09-24 22:19:47.000000000 +0000
@@ -195,14 +195,18 @@ Makefile: Makefile.in $(TOPSRCDIR)/confi
 
 # Rules for auto documentation
 
-$(SUBDIRS:%=%/__man__): dummy
+.for a in $(SUBDIRS:%=%/__man__)
+$a: dummy
 	cd `dirname $@` && $(MAKE) man
+.endfor
 
 man: $(C_SRCS) $(SUBDIRS:%=%/__man__)
 	if [ -n "$(C_SRCS)" ]; then $(MKDIR) $(TOPOBJDIR)/documentation/man3w; for i in $(C_SRCS); do $(C2MAN) -L -o $(TOPOBJDIR)/documentation/man3w -S3w $(DIVINCL) -D__WINE__ $(MANSPECS) $$i; done; fi
 
-$(SUBDIRS:%=%/__doc_html__): dummy
+.for a in $(SUBDIRS:%=%/__doc_html__)
+$a: dummy
 	cd `dirname $@` && $(MAKE) doc-html
+.endfor
 
 doc-html: $(C_SRCS) $(SUBDIRS:%=%/__doc_html__)
 	if [ -n "$(C_SRCS)" ]; then $(MKDIR) $(TOPOBJDIR)/documentation/html; for i in $(C_SRCS); do $(C2MAN) -L -o $(TOPOBJDIR)/documentation/html -Th -iwindows.h  $(DIVINCL) -D__WINE__ $(MANSPECS) $$i; done; fi
@@ -227,22 +231,30 @@ winapi_check::
 
 # Rules for dependencies
 
-$(SUBDIRS:%=%/__depend__): $(MAKEDEP) dummy
+.for a in $(SUBDIRS:%=%/__depend__)
+$a: $(MAKEDEP) dummy
 	cd `dirname $@` && $(MAKE) depend
+.endfor
 
 depend: $(MAKEDEP) $(GEN_C_SRCS) $(SUBDIRS:%=%/__depend__)
 	$(MAKEDEP) $(DIVINCL) -C$(SRCDIR) $(C_SRCS) $(RC_SRCS) $(RC_SRCS16) $(MC_SRCS) $(EXTRA_SRCS) $(CTESTS) -C. $(GEN_C_SRCS)
 
 # Rules for cleaning
 
-$(SUBDIRS:%=%/__clean__): dummy
+.for a in $(SUBDIRS:%=%/__clean__)
+$a: dummy
 	cd `dirname $@` && $(MAKE) clean
+.endfor
 
-$(SUBDIRS:%=%/__testclean__): dummy
+.for a in $(SUBDIRS:%=%/__testclean__)
+$a: dummy
 	cd `dirname $@` && $(MAKE) testclean
+.endfor
 
-$(EXTRASUBDIRS:%=%/__clean__): dummy
+.for a in $(EXTRASUBDIRS:%=%/__clean__)
+$a: dummy
 	-cd `dirname $@` && $(RM) $(CLEAN_FILES)
+.endfor
 
 testclean:: $(SUBDIRS:%=%/__testclean__)
 	$(RM) $(TESTRESULTS)
@@ -252,11 +264,15 @@ clean:: $(SUBDIRS:%=%/__clean__) $(EXTRA
 
 # Rules for installing
 
-$(SUBDIRS:%=%/__install__): dummy
+.for a in $(SUBDIRS:%=%/__install__)
+$a: dummy
 	cd `dirname $@` && $(MAKE) install
+.endfor
 
-$(SUBDIRS:%=%/__uninstall__): dummy
+.for a in $(SUBDIRS:%=%/__uninstall__)
+$a: dummy
 	cd `dirname $@` && $(MAKE) uninstall
+.endfor
 
 # Rules for testing
 

$MirOS$
--- libs/wine/mmap.c.orig	Tue Jun 17 14:07:08 2008
+++ libs/wine/mmap.c	Tue Jul 29 17:52:28 2008
@@ -78,7 +78,7 @@ static inline int get_fdzero(void)
     return fd;
 }
 
-#if (defined(__svr4__) || defined(__NetBSD__)) && !defined(MAP_TRYFIXED)
+#if (defined(__svr4__) || defined(__NetBSD__) || defined(__OpenBSD__)) && !defined(MAP_TRYFIXED)
 /***********************************************************************
  *             try_mmap_fixed
  *
@@ -181,7 +181,7 @@ static int try_mmap_fixed (void *addr, s
     return 0;
 }
 
-#endif  /* (__svr4__ || __NetBSD__) && !MAP_TRYFIXED */
+#endif  /* (__svr4__ || __NetBSD__ || __OpenBSD__) && !MAP_TRYFIXED */
 
 
 /***********************************************************************
@@ -208,7 +208,7 @@ void *wine_anon_mmap( void *start, size_
 #ifdef MAP_TRYFIXED
         /* If available, this will attempt a fixed mapping in-kernel */
         flags |= MAP_TRYFIXED;
-#elif defined(__svr4__) || defined(__NetBSD__) || defined(__APPLE__)
+#elif defined(__svr4__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__APPLE__)
         if ( try_mmap_fixed( start, size, prot, flags, get_fdzero(), 0 ) )
             return start;
 #endif
@@ -248,7 +248,7 @@ static void reserve_area( void *addr, vo
 {
     size_t size = (char *)end - (char *)addr;
 
-#if (defined(__svr4__) || defined(__NetBSD__)) && !defined(MAP_TRYFIXED)
+#if (defined(__svr4__) || defined(__NetBSD__) || defined(__OpenBSD__)) && !defined(MAP_TRYFIXED)
     /* try_mmap_fixed is inefficient when using vfork, so we need a different algorithm here */
     /* we assume no other thread is running at this point */
     size_t i, pagesize = getpagesize();

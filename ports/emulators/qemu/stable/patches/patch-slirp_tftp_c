$MirOS$

	Change annoying behaviour

--- slirp/tftp.c.orig	Sun Sep  4 17:11:09 2005
+++ slirp/tftp.c	Tue Oct 27 12:50:46 2009
@@ -26,7 +26,7 @@
 
 struct tftp_session {
     int in_use;
-    unsigned char filename[TFTP_FILENAME_MAX];
+    unsigned char filename[PATH_MAX];
     
     struct in_addr client_ip;
     u_int16_t client_port;
@@ -228,7 +228,7 @@ static void tftp_handle_rrq(struct tftp_
 {
   struct tftp_session *spt;
   int s, k, n;
-  u_int8_t *src, *dst;
+  u_int8_t *src, *dst, dstbuf[TFTP_FILENAME_MAX];
 
   s = tftp_session_allocate(tp);
 
@@ -239,7 +239,7 @@ static void tftp_handle_rrq(struct tftp_
   spt = &tftp_sessions[s];
 
   src = tp->x.tp_buf;
-  dst = spt->filename;
+  dst = dstbuf;
   n = pktlen - ((uint8_t *)&tp->x.tp_buf[0] - (uint8_t *)tp);
 
   /* get name */
@@ -275,9 +275,9 @@ static void tftp_handle_rrq(struct tftp_
 
   /* do sanity checks on the filename */
 
-  if ((spt->filename[0] != '/')
-      || (spt->filename[strlen(spt->filename) - 1] == '/')
-      ||  strstr(spt->filename, "/../")) {
+  if ((dstbuf[0] != '/')
+      || (dstbuf[strlen(dstbuf) - 1] == '/')
+      ||  strstr(dstbuf, "/../")) {
       tftp_send_error(spt, 2, "Access violation", tp);
       return;
   }
@@ -285,10 +285,13 @@ static void tftp_handle_rrq(struct tftp_
   /* only allow exported prefixes */
 
   if (!tftp_prefix
-      || (strncmp(spt->filename, tftp_prefix, strlen(tftp_prefix)) != 0)) {
+      || (strlen(tftp_prefix) + strlen(dstbuf)) >= sizeof(spt->filename)) {
       tftp_send_error(spt, 2, "Access violation", tp);
       return;
   }
+
+  strlcpy(spt->filename, tftp_prefix, sizeof(spt->filename));
+  strlcat(spt->filename, dstbuf, sizeof(spt->filename));
 
   /* check if the file exists */
   

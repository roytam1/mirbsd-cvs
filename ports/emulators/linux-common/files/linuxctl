#!@MKSH@
# $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $
#-
# Copyright (c) 2006, 2007
#	Thorsten Glaser <tg@mirbsd.de>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.

localbase=@LOCALBASE@

if [[ $(sysctl -n kern.emul.linux) != 1 ]]; then
	echo "+================================================"
	echo "| Error: the Linux emulation must be enabled in"
	echo "| order to use this port. To do so, execute"
	echo "|    \$ sudo sysctl -w kern.emul.linux=1"
	echo "| Please refer to compat_linux(8) for further"
	echo "| information on this topic."
	echo "+================================================"
	exit 1
fi

if [[ $1 = autosetup ]]; then
	[[ $(id -u) = 0 ]] || exit 0
	# can continue to set up as root
fi

cd $localbase/emul/linux

if [[ $1 = register ]]; then
	where=$2
	[[ -z $2 || ! -d $2 ]] && exit 1
	shift; shift
	for directory
	do
		if [[ -d $directory ]]; then
			print -u2 Error: cannot link $(pwd)/$directory to $where/$directory
			print -u2 Reason: directory already in use, skipping
		elif [[ -h $directory ]]; then
			if [[ $(readlink $directory) != $where/$directory ]]; then
				print -u2 Error: cannot link to $where/$directory, skipping
				print -u2 Reason: $(pwd)/$directory already linked to $(readlink $directory)
			fi
		elif [[ -e $directory ]]; then
			print -u2 Warning: removing already existing node
			/bin/ls -dlF $(pwd)/$directory
			rm -rf $directory
		fi
		if [[ ! -e $directory ]]; then
			ln -s $where/$directory
			if [[ $directory = etc ]]; then
				[[ -e etc/mtab ]] || ln -s $(pwd)/mtab.empty etc/mtab
			fi
		fi
	done
elif [[ $1 = @(un|de)register ]]; then
	where=$2
	[[ -z $2 || ! -d $2 ]] && exit 1
	shift; shift
	for directory
	do
		if [[ -h $directory ]]; then
			if [[ $(readlink $directory) != $where/$directory ]]; then
				print -u2 Error: cannot unregister $where/$directory, skipping
				print -u2 Reason: $(pwd)/$directory wrongly linked to $(readlink $directory)
			else
				if [[ $directory = etc ]]; then
					[[ $(readlink etc/mtab 2>/dev/null) = $(pwd)/mtab.empty ]] \
					    && rm -f etc/mtab
				fi
				rm -f $directory
			fi
		else
			print -u2 Error: cannot unregister $where/$directory, skipping
			print -u2 Reason: $(/bin/ls -dlF $(pwd)/$directory)
		fi
	done
elif [[ $1 = ?(auto)setup ]]; then
	rm -f .setup_done
	[[ -w / ]] || exec sudo $0 setup
	[[ -e /emul ]] || mkdir /emul
	if [[ -h /emul/linux ]]; then
		if [[ $(readlink /emul/linux) != $localbase/emul/linux ]]; then
			print -u2 Error: cannot setup $localbase/emul/linux
			print -u2 Reason: /emul/linux already points to $(readlink /emul/linux)
			exit 1
		fi
	elif [[ ! -e /emul/linux ]]; then
		ln -s $localbase/emul/linux /emul/linux
	else
		print -u2 Error: cannot setup $localbase/emul/linux
		print -u2 Reason: $(/bin/ls -dlF /emul/linux)
		exit 1
	fi
	mkdir /emul/linux/dev
	cd /emul/linux/dev
	ln -s /dev/console tty0
	ln -s /dev/ttyC0 tty1
	ln -s /dev/ttyC1 tty2
	ln -s /dev/ttyC2 tty3
	ln -s /dev/ttyC3 tty4
	ln -s /dev/ttyC4 tty5
	ln -s /dev/ttyC5 tty6
	ln -s /dev/ttyC6 tty7
	ln -s /dev/sound dsp
	ln -s /dev/null /dev/zero .
	cd $localbase/emul/linux
	echo -n >.setup_done
	if ! mount | grep -q 'on /proc type procfs.*linux' 2>&1; then
		print -u2 Warning: \'mount_procfs -o linux proc /proc\' recommended!
	fi
elif [[ $1 = dispose ]]; then
	rm -rf dev .setup_done
	[[ -h /emul/linux ]] && if [[ $(readlink /emul/linux) = $localbase/emul/linux ]]; then
		rm /emul/linux
		for a in /emul/*; do
			[[ $a = @(/emul/*) ]] && rm -rf /emul
			break
		done
	fi
else
	print -u2 Syntax error!
	exit 1
fi
exit 0

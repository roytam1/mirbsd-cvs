$MirOS$
$OpenBSD: patch-src_linux_sdllink_c,v 1.1 2002/08/31 04:19:14 wcobb Exp $
--- src/linux/sdllink.c.orig	Fri Jan 14 13:10:56 2005
+++ src/linux/sdllink.c	Mon Nov  3 17:08:37 2008
@@ -391,14 +391,24 @@ int Main_Proc(void)
 				if(cvidmode != 17) {
 				    surface = SDL_SetVideoMode(WindowWidth, WindowHeight,
 					    BitDepth, surface->flags & ~SDL_RESIZABLE);
-					adjustMouseXScale();
-					adjustMouseYScale();
+				    if (surface == NULL) {
+				    	printf("SDL_SetVideoMode: %s\n",
+					    SDL_GetError());
+					break;
+				    }
+				    adjustMouseXScale();
+				    adjustMouseYScale();
 				    break;
 				}
 				WindowWidth = SurfaceX = event.resize.w;
 				WindowHeight = SurfaceY = event.resize.h;
 				surface = SDL_SetVideoMode(WindowWidth,
 				    WindowHeight, BitDepth, surface->flags);
+				if (surface == NULL) {
+				    	printf("SDL_SetVideoMode: %s\n",
+					    SDL_GetError());
+					break;
+				}
 				adjustMouseXScale();
 				adjustMouseYScale();
 				glViewport(0,0, WindowWidth, WindowHeight);
@@ -573,7 +583,7 @@ int InitSound(void)
 
 	if (SDL_OpenAudio(&wanted, &audiospec) < 0)
 	{
-		fprintf(stderr, "Sound init failed!\n");
+		fprintf(stderr, "SDL_OpenAudio: %s\n", SDL_GetError());
 		fprintf(stderr, "freq: %d, channels: %d, samples: %d\n",
 			wanted.freq, wanted.channels, wanted.samples);
 		SoundEnabled = 0;
@@ -605,7 +615,10 @@ BOOL InitJoystickInput(void)
 	// If it is possible to use SDL_NumJoysticks
 	// before initialising SDL_INIT_JOYSTICK then
 	// this call can be replaced with SDL_InitSubSystem
-	SDL_InitSubSystem (SDL_INIT_JOYSTICK);
+	if (SDL_InitSubSystem (SDL_INIT_JOYSTICK) != 0) {
+		printf("SDL_InitSubSystem: %s\n", SDL_GetError());
+		return FALSE;
+	}
 	max_num_joysticks = SDL_NumJoysticks();
 	if (!max_num_joysticks)
 	{
@@ -620,6 +633,10 @@ BOOL InitJoystickInput(void)
 	for (i = 0; i < max_num_joysticks; i++)
 	{
 		JoystickInput[i] = SDL_JoystickOpen(i);
+		if (JoystickInput[i] == NULL) {
+			printf("SDL_JoystickOpen[%d]: %s\n", i, SDL_GetError());
+			return FALSE;
+		}
 		num_axes = SDL_JoystickNumAxes(JoystickInput[i]);
 		num_buttons = SDL_JoystickNumButtons(JoystickInput[i]);
 		num_hats = SDL_JoystickNumHats(JoystickInput[i]);
@@ -681,7 +698,8 @@ int startgame(void)
 		if (SDL_Init(SDL_INIT_AUDIO | SDL_INIT_TIMER |
 	        SDL_INIT_VIDEO) < 0)
 		{
-			fprintf(stderr, "Could not initialize SDL: %s", SDL_GetError());
+			fprintf(stderr, "Could not initialize SDL: %s\n",
+			    SDL_GetError());
 			return FALSE;
 		}
 		sdl_state = vid_none;
@@ -693,7 +711,10 @@ int startgame(void)
 #ifdef __OPENGL__
 	else if (sdl_state == vid_gl) gl_end();
 
-	SDL_Init(SDL_INIT_VIDEO);
+	if (SDL_Init(SDL_INIT_VIDEO) != 0) {
+		printf("SDL_INIT_VIDEO: %s\n", SDL_GetError());
+		return FALSE;
+	}
 
 	if (UseOpenGL)
 	{
@@ -1039,6 +1060,9 @@ void UpdateVFrame(void)
 {
 	const int SPCSize = 256;
 	int i;
+
+	//Quick fix for GUI CPU usage
+	if (GUIOn2) usleep(6000);
 
 	CheckTimers();
 	Main_Proc();

$MirOS$

	Fix IPv6 numeric IP SSL certificate matching

--- WWW/Library/Implementation/HTTP.c.orig	Mon Dec 15 00:24:33 2008
+++ WWW/Library/Implementation/HTTP.c	Wed Dec 17 00:14:05 2008
@@ -778,6 +778,13 @@ static int HTLoadHTTP(const char *arg,
 	/* strip port number or extract hostname component */
 	if ((p = HTParsePort(ssl_host, &port_number)) != 0)
 	    *p = '\0';
+	else
+	    p = ssl_host + strlen(ssl_host);
+	/* strip IPv6 brackets */
+	if (*ssl_host == '[' && *--p == ']') {
+		++ssl_host;
+		*p = '\0';
+	}
 
 	/* validate all CNs found in DN */
 	CTRACE((tfp, "Validating CNs in '%s'\n", ssl_dn_start));
@@ -791,9 +798,16 @@ static int HTLoadHTTP(const char *arg,
 		ssl_dn_start = p;	/* yes this points to the NUL byte */
 	    } else
 		ssl_dn_start = NULL;
-	    /* strip port number (XXX [ip]:port encap here too? -TG) */
+	    /* strip port number */
 	    if ((p = HTParsePort(cert_host, &port_number)) != 0)
 		*p = '\0';
+	    else
+		p = cert_host + strlen(cert_host);
+	    /* strip IPv6 brackets */
+	    if (*cert_host == '[' && *--p == ']') {
+		++cert_host;
+		*p = '\0';
+	    }
 
 	    /* verify this CN */
 	    CTRACE((tfp, "Matching\n\tssl_host  '%s'\n\tcert_host '%s'\n",
@@ -889,6 +903,12 @@ static int HTLoadHTTP(const char *arg,
 		    /* verify this SubjectAltName (see above) */
 		    if ((p = HTParsePort(cert_host, &port_number)) != 0)
 			*p = '\0';
+		    else
+			p = cert_host + strlen(cert_host);
+		    if (*cert_host == '[' && *--p == ']') {
+			++cert_host;
+			*p = '\0';
+		    }
 		    if (!(gn->type == GEN_IPADD ? strcasecomp :
 			  strcasecomp_asterisk) (ssl_host, cert_host)) {
 			status_sslcertcheck = 2;

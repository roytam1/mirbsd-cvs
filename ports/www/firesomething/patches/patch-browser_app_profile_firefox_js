$MirOS$
--- browser/app/profile/firefox.js.orig	Tue Dec  2 21:18:33 2008
+++ browser/app/profile/firefox.js	Tue Dec  2 21:18:43 2008
@@ -89,12 +89,12 @@ pref("browser.dictionaries.download.url"
 // App-specific update preferences
 
 // Whether or not app updates are enabled
-pref("app.update.enabled", true);
+pref("app.update.enabled", false);
 
 // This preference turns on app.update.mode and allows automatic download and
 // install to take place. We use a separate boolean toggle for this to make
 // the UI easier to construct.
-pref("app.update.auto", true);
+pref("app.update.auto", false);
 
 // Defines how the Application Update Service notifies the user about updates:
 //
@@ -188,7 +188,7 @@ pref("browser.shell.checkDefaultBrowser"
 
 // 0 = blank, 1 = home (browser.startup.homepage), 2 = last visited page, 3 = resume previous browser session
 // The behavior of option 3 is detailed at: http://wiki.mozilla.org/Session_Restore
-pref("browser.startup.page",                1);
+pref("browser.startup.page",                0);
 pref("browser.startup.homepage",            "resource:/browserconfig.properties");
 
 pref("browser.cache.disk.capacity",         50000);
@@ -590,7 +590,7 @@ pref("gecko.handlerService.allowRegister
 
 #ifdef MOZ_SAFE_BROWSING
 // Safe browsing does nothing unless this pref is set
-pref("browser.safebrowsing.enabled", true);
+pref("browser.safebrowsing.enabled", false);
 
 // Prevent loading of pages identified as malware
 pref("browser.safebrowsing.malware.enabled", true);
@@ -660,15 +660,13 @@ pref("browser.EULA.3.accepted", true);
 #elifdef XP_WIN
 pref("browser.EULA.3.accepted", true);
 #else
-pref("browser.EULA.3.accepted", false);
+pref("browser.EULA.3.accepted", true);
 #endif
 
 // if we rev the EULA again, we should bump this so users agree to the new EULA
 pref("browser.EULA.version", 3);
 
-#ifdef DEBUG
 pref("browser.EULA.override", true);
-#endif
 
 pref("browser.sessionstore.enabled", true);
 pref("browser.sessionstore.resume_from_crash", true);
@@ -744,7 +742,7 @@ pref("places.frecency.unvisitedTypedBonu
 // 0 - don't pre-populate anything
 // 1 - pre-populate site URL, but don't fetch certificate
 // 2 - pre-populate site URL and pre-fetch certificate
-pref("browser.ssl_override_behavior", 1);
+pref("browser.ssl_override_behavior", 2);
 
 // Controls the display of domain in the identity box for SSL connections.
 // 0 - do not show domain

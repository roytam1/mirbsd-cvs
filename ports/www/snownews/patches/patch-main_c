$MirOS$
$OpenBSD: patch-main_c,v 1.1 2004/01/25 05:49:35 jolan Exp $
--- main.c.orig	2004-01-23 13:13:07.000000000 +0100
+++ main.c	2004-02-01 14:31:45.000000000 +0100
@@ -53,7 +53,7 @@ struct color color;
 extern struct feed *first_bak;		/* For use with the signal handler. */
 
 char *browser;						/* Browser command. lynx is standard. */
-int versioncheck = 1;				/* Autoupdate check. 1=yes, 0=no. */
+int versioncheck = 0;				/* Autoupdate check. 1=yes, 0=no. */
 char *proxyname;					/* Hostname of proxyserver. */
 char *useragent;					/* Snownews User-Agent string. */
 unsigned short proxyport = 0;		/* Port on proxyserver to use. */
@@ -126,34 +126,34 @@ void Config (void) {
 	struct stat dirtest;
 	
 	/* stat configfile dirs and create them. */
-	snprintf (file, sizeof(file), "%s/.snownews", getenv("HOME"));
+	snprintf (file, sizeof(file), "%s/.etc/snownews", getenv("HOME"));
 	if ((stat (file, &dirtest)) == -1 ) {
 		/* Create directory. */
 		if (mkdir (file, S_IRWXU | S_IRGRP | S_IXGRP | S_IROTH | S_IXOTH) != 0)
-			MainQuit ("Creating config directory ~/.snownews/", strerror(errno));
+			MainQuit ("Creating config directory ~/.etc/snownews/", strerror(errno));
 	} else {
-		/* Something with the name .snownews exists, let's see what it is. */
+		/* Something with the name .etc/snownews exists, let's see what it is. */
 		if ((dirtest.st_mode & S_IFDIR) != S_IFDIR) {
-			MainQuit ("Creating config directory ~/.snownews/",
-				"A file with the name \"~/.snownews/\" exists!");
+			MainQuit ("Creating config directory ~/.etc/snownews/",
+				"A file with the name \"~/.etc/snownews/\" exists!");
 		}
 	}
 	
-	snprintf (file, sizeof(file), "%s/.snownews/cache", getenv("HOME"));
+	snprintf (file, sizeof(file), "%s/.etc/snownews/cache", getenv("HOME"));
 	if ((stat (file, &dirtest)) == -1) {
 		/* Create directory. */
 		if (mkdir (file, S_IRWXU | S_IRGRP | S_IXGRP | S_IROTH | S_IXOTH) != 0)
-			MainQuit (_("Creating config directory ~/.snownews/cache/"), strerror(errno));
+			MainQuit (_("Creating config directory ~/.etc/snownews/cache/"), strerror(errno));
 	} else {
 		if ((dirtest.st_mode & S_IFDIR) != S_IFDIR) {
-			MainQuit ("Creating config directory ~/.snownews/cache",
-				"A file with the name \"~/.snownews/cache/\" exists!");
+			MainQuit ("Creating config directory ~/.etc/snownews/cache",
+				"A file with the name \"~/.etc/snownews/cache/\" exists!");
 		}
 	}
 	
-	/* Redirect stderr to ~/.snownews/error.log
+	/* Redirect stderr to ~/.etc/snownews/error.log
 	   Be sure to call _after_ the directory checks above! */
-	snprintf (file, sizeof(file), "%s/.snownews/error.log", getenv("HOME"));
+	snprintf (file, sizeof(file), "%s/.etc/snownews/error.log", getenv("HOME"));
 	errorlog = fopen (file, "w+");
 	dup2 (fileno(errorlog), STDERR_FILENO);
 	
@@ -164,7 +164,7 @@ void Config (void) {
 	 * Default browser *
 	 *******************/
 	 
-	snprintf (file, sizeof(file), "%s/.snownews/browser", getenv("HOME"));
+	snprintf (file, sizeof(file), "%s/.etc/snownews/browser", getenv("HOME"));
 	configfile = fopen (file, "r");
 	if (configfile == NULL) {
 		UIStatus (_("Creating new config \"browser\"..."), 0);
@@ -190,7 +190,7 @@ void Config (void) {
 	 * Feed list *
 	 *************/
 	
-	snprintf (file, sizeof(file), "%s/.snownews/urls", getenv("HOME"));
+	snprintf (file, sizeof(file), "%s/.etc/snownews/urls", getenv("HOME"));
 	configfile = fopen (file, "r");
 	if (configfile == NULL) {
 		UIStatus (_("Creating new configfile."), 0);
@@ -320,7 +320,7 @@ void Config (void) {
 	keybindings.help = 'h';
 	keybindings.about = 'A';
 		
-	snprintf (file, sizeof(file), "%s/.snownews/keybindings", getenv("HOME"));
+	snprintf (file, sizeof(file), "%s/.etc/snownews/keybindings", getenv("HOME"));
 	configfile = fopen (file, "r");
 	if (configfile == NULL) {
 		/* Create new file. */
@@ -444,7 +444,7 @@ void Config (void) {
 	color.feedtitle = -1;
 	color.feedtitlebold = 0;
 	
-	snprintf (file, sizeof(file), "%s/.snownews/colors", getenv("HOME"));
+	snprintf (file, sizeof(file), "%s/.etc/snownews/colors", getenv("HOME"));
 	configfile = fopen (file, "r");
 	if (configfile == NULL) {
 		/* Set color configfile update flag. */
@@ -607,7 +607,7 @@ int LoadFeed (struct feed * cur_ptr) {
 	
 	strncpy (hashme, cur_ptr->feedurl, sizeof(hashme));
 	Hashify (hashme);
-	snprintf (file, sizeof(file), "%s/.snownews/cache/%s", getenv("HOME"), hashme);
+	snprintf (file, sizeof(file), "%s/.etc/snownews/cache/%s", getenv("HOME"), hashme);
 	cache = fopen (file, "r");
 	
 	if (cache == NULL) {
@@ -678,7 +678,7 @@ void WriteCache (void) {
 	
 	UIStatus (_("Saving settings..."), 0);
 	
-	snprintf (file, sizeof(file), "%s/.snownews/browser", getenv("HOME"));
+	snprintf (file, sizeof(file), "%s/.etc/snownews/browser", getenv("HOME"));
 	configfile = fopen (file, "w+");
 	if (configfile == NULL) {
 		MainQuit (_("Save settings (browser)"), strerror(errno));
@@ -686,11 +686,11 @@ void WriteCache (void) {
 	fputs (browser, configfile);
 	fclose (configfile);
 	
-	snprintf (file, sizeof(file), "%s/.snownews/urls", getenv("HOME"));
+	snprintf (file, sizeof(file), "%s/.etc/snownews/urls", getenv("HOME"));
 	
 	if ((stat (file, &filetest)) != -1) {
 		if ((filetest.st_mode & S_IFREG) == S_IFREG) {
-			snprintf (syscall, sizeof(file), "cp -f %s/.snownews/urls %s/.snownews/urls.bak", getenv("HOME"), getenv("HOME"));
+			snprintf (syscall, sizeof(file), "cp -f %s/.etc/snownews/urls %s/.etc/snownews/urls.bak", getenv("HOME"), getenv("HOME"));
 			system (syscall);
 		}
 	}
@@ -723,7 +723,7 @@ void WriteCache (void) {
 		 */
 		strncpy (hashme, cur_ptr->feedurl, sizeof(hashme));
 		Hashify (hashme);
-		snprintf (file, sizeof(file), "%s/.snownews/cache/%s", getenv("HOME"), hashme);
+		snprintf (file, sizeof(file), "%s/.etc/snownews/cache/%s", getenv("HOME"), hashme);
 		cache = fopen (file, "w+");
 		
 		fputs ("<?xml version=\"1.0\" ?>\n\n<rdf:RDF\n  xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n  xmlns=\"http://purl.org/rss/1.0/\">\n\n", cache);
@@ -803,7 +803,7 @@ void WriteCache (void) {
 	
 	/* Write color configfile if needed, */
 	if (color.changed) {
-		snprintf (file, sizeof(file), "%s/.snownews/colors", getenv("HOME"));
+		snprintf (file, sizeof(file), "%s/.etc/snownews/colors", getenv("HOME"));
 		configfile = fopen (file, "w+");
 		
 		fputs ("# Snownews color definitons\n", configfile);
@@ -861,11 +861,11 @@ int main (int argc, char *argv[]) {
 			strcmp(argv[1], "-u") == 0) {
 			autoupdate = 1;
 			if (argv[2] != NULL) {
-				if (strcmp(argv[2], "--disable-versioncheck") == 0)
-					versioncheck = 0;
+				if (strcmp(argv[2], "--enable-versioncheck") == 0)
+					versioncheck = 1;
 			}
-		} else if (strcmp(argv[1], "--disable-versioncheck") == 0) {
-			versioncheck = 0;
+		} else if (strcmp(argv[1], "--enable-versioncheck") == 0) {
+			versioncheck = 1;
 			if (argv[2] != NULL) {
 				if (strcmp(argv[2], "--update") == 0 ||
 					strcmp(argv[2], "-u") == 0) {
@@ -878,7 +878,7 @@ int main (int argc, char *argv[]) {
 			printf (_("\t--update|-u\tAutomatically update every feed.\n"));
 			printf (_("\t--help|-h\tPrint this help message.\n"));
 			printf (_("\t--version|-V\tPrint version number and exit.\n"));
-			printf (_("\t--disable-versioncheck\n"));
+			printf (_("\t--enable-versioncheck\n"));
 			return 0;
 		}
 	}

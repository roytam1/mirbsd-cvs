$MirOS: ports/print/cups/patches/patch-pdftops_PSOutputDev_cxx,v 1.2 2006/06/21 19:25:35 bsiegert Exp $
--- pdftops/PSOutputDev.cxx.orig	Mon Oct 23 02:26:29 2006
+++ pdftops/PSOutputDev.cxx	Wed Nov  8 18:01:54 2006
@@ -1694,7 +1694,7 @@ void PSOutputDev::setupFont(GfxFont *fon
     setupEmbeddedCIDTrueTypeFont(font, &fontFileID, psName, gTrue);
 
   } else if (font->getType() == fontType3) {
-    sprintf(type3Name, "T3_%d_%d",
+    snprintf(type3Name, sizeof(type3Name), "T3_%d_%d",
 	    font->getID()->num, font->getID()->gen);
     psName = new GString(type3Name);
     setupType3Font(font, psName, parentResDict);
@@ -1811,7 +1811,7 @@ void PSOutputDev::setupFont(GfxFont *fon
 	if (font->getType() == fontTrueType &&
 	    !subst &&
 	    !((Gfx8BitFont *)font)->getHasEncoding()) {
-	  sprintf(buf, "c%02x", i+j);
+	  snprintf(buf, sizeof(buf), "c%02x", i+j);
 	  charName = buf;
 	} else {
 	  charName = ((Gfx8BitFont *)font)->getCharName(i+j);
@@ -2062,7 +2062,7 @@ void PSOutputDev::setupEmbeddedTrueTypeF
   for (i = 0; i < fontFileIDLen; ++i) {
     if (fontFileIDs[i].num == id->num &&
 	fontFileIDs[i].gen == id->gen) {
-      sprintf(unique, "_%d", nextTrueTypeNum++);
+      snprintf(unique, sizeof(unique), "_%d", nextTrueTypeNum++);
       psName->append(unique);
       break;
     }
@@ -2114,7 +2114,7 @@ void PSOutputDev::setupExternalTrueTypeF
   fileName = font->getExtFontFile();
   for (i = 0; i < fontFileNameLen; ++i) {
     if (!fontFileNames[i]->cmp(fileName)) {
-      sprintf(unique, "_%d", nextTrueTypeNum++);
+      snprintf(unique, sizeof(unique), "_%d", nextTrueTypeNum++);
       psName->append(unique);
       break;
     }
@@ -2212,7 +2212,7 @@ void PSOutputDev::setupEmbeddedCIDTrueTy
   for (i = 0; i < fontFileIDLen; ++i) {
     if (fontFileIDs[i].num == id->num &&
 	fontFileIDs[i].gen == id->gen) {
-      sprintf(unique, "_%d", nextTrueTypeNum++);
+      snprintf(unique, sizeof(unique), "_%d", nextTrueTypeNum++);
       psName->append(unique);
       break;
     }
@@ -2321,10 +2321,10 @@ void PSOutputDev::setupType3Font(GfxFont
       charProc.free();
       if (t3String) {
 	if (t3Cacheable) {
-	  sprintf(buf, "%g %g %g %g %g %g setcachedevice\n",
+	  snprintf(buf, sizeof(buf), "%g %g %g %g %g %g setcachedevice\n",
 		  t3WX, t3WY, t3LLX, t3LLY, t3URX, t3URY);
 	} else {
-	  sprintf(buf, "%g %g setcharwidth\n", t3WX, t3WY);
+	  snprintf(buf, sizeof(buf), "%g %g setcharwidth\n", t3WX, t3WY);
 	}
 	(*outputFunc)(outputStream, buf, strlen(buf));
 	(*outputFunc)(outputStream, t3String->getCString(),
@@ -4892,7 +4892,7 @@ void PSOutputDev::writePSFmt(const char 
   char buf[512];
 
   va_start(args, fmt);
-  vsprintf(buf, fmt, args);
+  vsnprintf(buf, sizeof(buf), fmt, args);
   va_end(args);
   if (t3String) {
     t3String->append(buf);
@@ -4919,7 +4919,7 @@ void PSOutputDev::writePSString(GString 
       writePSChar((char)*p);
       line += 2;
     } else if (*p < 0x20 || *p >= 0x80) {
-      sprintf(buf, "\\%03o", *p);
+      snprintf(buf, sizeof(buf), "\\%03o", *p);
       writePS(buf);
       line += 4;
     } else {
@@ -4969,7 +4969,7 @@ GString *PSOutputDev::filterPSName(GStri
 	c == '(' || c == ')' || c == '<' || c == '>' ||
 	c == '[' || c == ']' || c == '{' || c == '}' ||
 	c == '/' || c == '%') {
-      sprintf(buf, "#%02x", c & 0xff);
+      snprintf(buf, sizeof(buf), "#%02x", c & 0xff);
       name2->append(buf);
     } else {
       name2->append(c);

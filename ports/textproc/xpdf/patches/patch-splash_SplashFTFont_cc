$MirOS$
--- splash/SplashFTFont.cc.orig	Thu Jan 22 01:26:22 2004
+++ splash/SplashFTFont.cc	Fri Dec 27 21:16:10 2013
@@ -12,8 +12,9 @@
 #pragma implementation
 #endif
 
+#include "freetype/ftglyph.h"
 #include "freetype/ftoutln.h"
-#include "freetype/internal/ftobjs.h" // needed for FT_New_Size decl
+#include "freetype/ftsizes.h"
 #include "gmem.h"
 #include "SplashMath.h"
 #include "SplashGlyphBitmap.h"
@@ -24,11 +25,11 @@
 
 //------------------------------------------------------------------------
 
-static int glyphPathMoveTo(FT_Vector *pt, void *path);
-static int glyphPathLineTo(FT_Vector *pt, void *path);
-static int glyphPathConicTo(FT_Vector *ctrl, FT_Vector *pt, void *path);
-static int glyphPathCubicTo(FT_Vector *ctrl1, FT_Vector *ctrl2,
-			    FT_Vector *pt, void *path);
+static int glyphPathMoveTo(const FT_Vector *pt, void *path);
+static int glyphPathLineTo(const FT_Vector *pt, void *path);
+static int glyphPathConicTo(const FT_Vector *ctrl, const FT_Vector *pt, void *path);
+static int glyphPathCubicTo(const FT_Vector *ctrl1, const FT_Vector *ctrl2,
+			    const FT_Vector *pt, void *path);
 
 //------------------------------------------------------------------------
 // SplashFTFont
@@ -231,17 +232,17 @@ SplashPath *SplashFTFont::getGlyphPath(i
   return path;
 }
 
-static int glyphPathMoveTo(FT_Vector *pt, void *path) {
+static int glyphPathMoveTo(const FT_Vector *pt, void *path) {
   ((SplashPath *)path)->moveTo(pt->x / 64.0, -pt->y / 64.0);
   return 0;
 }
 
-static int glyphPathLineTo(FT_Vector *pt, void *path) {
+static int glyphPathLineTo(const FT_Vector *pt, void *path) {
   ((SplashPath *)path)->lineTo(pt->x / 64.0, -pt->y / 64.0);
   return 0;
 }
 
-static int glyphPathConicTo(FT_Vector *ctrl, FT_Vector *pt, void *path) {
+static int glyphPathConicTo(const FT_Vector *ctrl, const FT_Vector *pt, void *path) {
   SplashCoord x0, y0, x1, y1, x2, y2, x3, y3, xc, yc;
 
   if (!((SplashPath *)path)->getCurPt(&x0, &y0)) {
@@ -277,8 +278,8 @@ static int glyphPathConicTo(FT_Vector *c
   return 0;
 }
 
-static int glyphPathCubicTo(FT_Vector *ctrl1, FT_Vector *ctrl2,
-			    FT_Vector *pt, void *path) {
+static int glyphPathCubicTo(const FT_Vector *ctrl1, const FT_Vector *ctrl2,
+			    const FT_Vector *pt, void *path) {
   ((SplashPath *)path)->curveTo(ctrl1->x / 64.0, -ctrl1->y / 64.0,
 				ctrl2->x / 64.0, -ctrl2->y / 64.0,
 				pt->x / 64.0, -pt->y / 64.0);

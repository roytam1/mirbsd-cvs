$MirOS$
--- src/interfaces/ecpg/pgtypeslib/dt_common.c.orig	Thu Dec 23 10:45:47 2004
+++ src/interfaces/ecpg/pgtypeslib/dt_common.c	Mon Feb 14 20:04:49 2005
@@ -611,12 +611,12 @@ date2j(int y, int m, int d)
 }	/* date2j() */
 
 void
-j2date(int jd, int *year, int *month, int *day)
+j2date(int jd, time_t *year, int *month, int *day)
 {
 	unsigned int julian;
 	unsigned int quad;
 	unsigned int extra;
-	int			y;
+	time_t		y;
 
 	julian = jd;
 	julian += 32044;
@@ -698,10 +698,10 @@ EncodeDateOnly(struct tm * tm, int style
 			/* compatible with ISO date formats */
 			if (tm->tm_year > 0)
 				sprintf(str, "%04d-%02d-%02d",
-						tm->tm_year, tm->tm_mon, tm->tm_mday);
+						(int)tm->tm_year, tm->tm_mon, tm->tm_mday);
 			else
 				sprintf(str, "%04d-%02d-%02d %s",
-					  -(tm->tm_year - 1), tm->tm_mon, tm->tm_mday, "BC");
+					  -((int)tm->tm_year - 1), tm->tm_mon, tm->tm_mday, "BC");
 			break;
 
 		case USE_SQL_DATES:
@@ -711,18 +711,18 @@ EncodeDateOnly(struct tm * tm, int style
 			else
 				sprintf(str, "%02d/%02d", tm->tm_mon, tm->tm_mday);
 			if (tm->tm_year > 0)
-				sprintf((str + 5), "/%04d", tm->tm_year);
+				sprintf((str + 5), "/%04d", (int)tm->tm_year);
 			else
-				sprintf((str + 5), "/%04d %s", -(tm->tm_year - 1), "BC");
+				sprintf((str + 5), "/%04d %s", -((int)tm->tm_year - 1), "BC");
 			break;
 
 		case USE_GERMAN_DATES:
 			/* German-style date format */
 			sprintf(str, "%02d.%02d", tm->tm_mday, tm->tm_mon);
 			if (tm->tm_year > 0)
-				sprintf((str + 5), ".%04d", tm->tm_year);
+				sprintf((str + 5), ".%04d", (int)tm->tm_year);
 			else
-				sprintf((str + 5), ".%04d %s", -(tm->tm_year - 1), "BC");
+				sprintf((str + 5), ".%04d %s", -((int)tm->tm_year - 1), "BC");
 			break;
 
 		case USE_POSTGRES_DATES:
@@ -733,9 +733,9 @@ EncodeDateOnly(struct tm * tm, int style
 			else
 				sprintf(str, "%02d-%02d", tm->tm_mon, tm->tm_mday);
 			if (tm->tm_year > 0)
-				sprintf((str + 5), "-%04d", tm->tm_year);
+				sprintf((str + 5), "-%04d", (int)tm->tm_year);
 			else
-				sprintf((str + 5), "-%04d %s", -(tm->tm_year - 1), "BC");
+				sprintf((str + 5), "-%04d %s", -((int)tm->tm_year - 1), "BC");
 			break;
 	}
 
@@ -779,7 +779,7 @@ EncodeDateTime(struct tm * tm, fsec_t fs
 			/* Compatible with ISO-8601 date formats */
 
 			sprintf(str, "%04d-%02d-%02d %02d:%02d",
-				  ((tm->tm_year > 0) ? tm->tm_year : -(tm->tm_year - 1)),
+				  (int)((tm->tm_year > 0) ? tm->tm_year : -(tm->tm_year - 1)),
 					tm->tm_mon, tm->tm_mday, tm->tm_hour, tm->tm_min);
 
 			/*
@@ -829,7 +829,7 @@ EncodeDateTime(struct tm * tm, fsec_t fs
 				sprintf(str, "%02d/%02d", tm->tm_mon, tm->tm_mday);
 
 			sprintf((str + 5), "/%04d %02d:%02d",
-				  ((tm->tm_year > 0) ? tm->tm_year : -(tm->tm_year - 1)),
+				  (int)((tm->tm_year > 0) ? tm->tm_year : -(tm->tm_year - 1)),
 					tm->tm_hour, tm->tm_min);
 
 			/*
@@ -875,7 +875,7 @@ EncodeDateTime(struct tm * tm, fsec_t fs
 			sprintf(str, "%02d.%02d", tm->tm_mday, tm->tm_mon);
 
 			sprintf((str + 5), ".%04d %02d:%02d",
-				  ((tm->tm_year > 0) ? tm->tm_year : -(tm->tm_year - 1)),
+				  (int)((tm->tm_year > 0) ? tm->tm_year : -(tm->tm_year - 1)),
 					tm->tm_hour, tm->tm_min);
 
 			/*
@@ -954,7 +954,7 @@ EncodeDateTime(struct tm * tm, fsec_t fs
 				sprintf((str + strlen(str)), ":%02d", tm->tm_sec);
 
 			sprintf((str + strlen(str)), " %04d",
-				 ((tm->tm_year > 0) ? tm->tm_year : -(tm->tm_year - 1)));
+				 (int)((tm->tm_year > 0) ? tm->tm_year : -(tm->tm_year - 1)));
 			if (tm->tm_year <= 0)
 				sprintf((str + strlen(str)), " BC");
 

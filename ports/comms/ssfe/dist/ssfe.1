.TH SSFE 1 "" "Roger Espel Llima"
.SH NAME
ssfe \- split-screen front-end
.SH SYNOPSIS
.B ssfe
[options] program-name [program-options]
.SH DESCRIPTION
.B ssfe
runs a line-oriented program in the background, and provides a full
screen interface for it.  The bottom line of the screen is the input
line, which you can edit using emacs-like keys; above that is the
status bar, and the scrolling area with the program's output.
.PP
You can configure 
.B ssfe
to reprint or not your own input lines, to use prompts, and to do word-wrap
on the program's output.
.PP
.B ssfe
also understands a little protocol to communicate with the program it is
running, which can be used to change the contents of the status line,
to set ssfe's modes and to prompt for input.
.SH OPTIONS
.TP
.BR "-raw"
Disables word-wrap and handling of control characters.  In this mode, ssfe
will not attempt keep track of the cursor's position.
.TP
.BR "-cooked"
Enables word-wrap, and prints control characters using inverse-video;  this
is the default mode.
.TP
.BR "-irc"
Same as -cooked, but also interprets Ctrl-B, Ctrl-V and Ctrl-_ with the
IRC convention (toggles for bold, inverse, underlined, respectively).
.TP
.BR "-hold"
Sets hold-mode.  In hold mode, 
.B ssfe
will stop after each screenful, and wait for the user to hit TAB.
.TP
.BR "-beep"
In cooked or IRC mode, enables beeps.  When beeps are disabled, the
character Ctrl-G is displayed as an inverse-video G.
.TP
.BR "-flow"
Enables flow-control with ^S and ^Q.  
.B ssfe
normally disables those, but some terminals require them to operate properly.
.TP
.BR "-print"
Enables printing of your own commands back in the scrolling area.
.TP
.BR "-prompt \fI<prompt>\fR"
Sets a prompt for the user input line.  The default prompt is none, or
``> '' if -print is specified.

.SH ARGUMENTS
.TP
.BR "program [options]"
Names the program that 
.B ssfe
should run.

.SH KEYS
.B ssfe 
understands these keys (^ means Control):
.TP
.BR "^\e"
Interrupt ssfe and whatever program it's running, and exit back to the unix
prompt.
.TP
.BR "^a"
Go to the beginning of the line.
.TP
.BR "^b, left arrow"
Move left a letter.
.TP
.BR "^c"
Interrupt: ignored by the front-end, can be used to interrupt connecting to a
server, with sirc.
.TP
.BR "^d"
Delete the character under the cursor.
.TP
.BR "^e"
Go to the end of the line.
.TP
.BR "^f, right arrow"
Move right a letter.
.TP
.BR "^h, DEL"
Erase the previous character.
.TP
.BR "^i, TAB"
Go to next /msg in msg history.
.TP
.BR "^j, ^m, Enter"
.TP
.BR "^k"
Erase from the cursor to the end of the line.
.TP
.BR "^l"
Redisplay the status bar and the command line.
.TP
.BR "^n, down arrow"
Go to the next line in command-line history.
.TP
.BR "^o"
With sirc, type the last msg you got on the command line
.TP
.BR "^p, up arrow"
Go to the previous line in command-line history.
.TP
.BR "^t"
With sirc, switch to the next channel you're on.
.TP
.BR "^u"
Erase command-line.
.TP 
.BR "^v"
Insert the next character literally, even if it's a ^something.
.TP
.BR "^x b"
Toggle beep on or off (off by default).
.TP
.BR "^x c"
Exit the front end, back to the unix prompt.
.TP
.BR "^x h"
Toggle hold mode.
.TP
.BR "^x i"
Toggle irc-mode (^b^v^_ handling) on and off.
.TP
.BR "^y"
Yank the current line in the history without sending it.
.TP
.BR "^z"
Suspend ssfe and sirc and go back to the unix prompt - you come back with 'fg'.

.SH COPYING
.B ssfe
is free software. You can redistribute it and/or modify it under the GNU
General Public License as published by the Free Software Foundation.  See
the file LICENSE for details.

.SH SEE ALSO
.BR sirc (1)

.SH ENVIRONMENT VARIABLES
.TP
.BR TERM 
sets the terminal type.  The terminal needs to be able to set a scrolling
zone for ssfe to work.

.SH BUGS
None known, please report to the author.

.SH AUTHOR
.B sirc
was written by Roger Espel Llima <roger.espel.llima@pobox.com>. 


#!/bin/mksh
rcsid='$MirOS: ports/essentials/ca-certificates/mntner/pem2lnk,v 1.1 2012/05/30 18:46:56 tg Exp $'
#-
# Run this to generate a list of symlinks for CA certificates
# using the OpenSSL 1.0.0+ hash format.

# XXX pem/* must already have normalised names
[[ -d pem/. ]] || exit 1
[[ -d lnk/. ]] && exit 1
rm -f certhash.lnk ssl.links.shar
[[ -e certhash.lnk ]] && exit 1
[[ -e ssl.links.shar ]] && exit 1
mkdir lnk
[[ -d lnk/. ]] || exit 1

cp pem/* lnk/
cd lnk
set -A files -- *.*

for file in "${files[@]}"; do
	if [[ $file != [0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f][0-9a-f].+([0-9]) ]]; then
		print -ru2 "Invalid file '$file'"
		exit 1
	fi
	fbase=${file%.*}
	hash0=$(openssl x509 -subject_hash_old -noout -in $file)
	hash1=$(openssl x509 -subject_hash -noout -in $file)
	if [[ $file != "${hash0}."+([0-9]) ]]; then
		print -ru2 "Invalid hash $file expected $hash0"
		exit 1
	fi
	print -ru2 "Processing $file → $hash1"
	num=0
	while [[ -e $hash1.$num ]]; do
		let num++
	done
	ln -s $file $hash1.$num
	print $file $hash1.$num >>OUT
done

cd ..
mv -f lnk/OUT certhash.lnk
while read src dst; do
	print -r "echo $src → $dst; ln -s $src $dst"
done <certhash.lnk >ssl.links.shar
rm -rf lnk

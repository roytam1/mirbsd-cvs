$MirOS$
$NetBSD: patch-ac,v 1.1.2.1 2005/08/04 15:22:02 salo Exp $
--- unix/unix.c.orig	2005-02-26 20:43:42.000000000 +0100
+++ unix/unix.c	2006-06-23 16:26:03.000000000 +0200
@@ -1042,8 +1042,6 @@ void close_outfile(__G)    /* GRR: chang
     ush z_uidgid[2];
     int have_uidgid_flg;
 
-    fclose(G.outfile);
-
 /*---------------------------------------------------------------------------
     If symbolic links are supported, allocate storage for a symlink control
     structure, put the uncompressed "data" and other required info in it, and
@@ -1059,6 +1057,8 @@ void close_outfile(__G)    /* GRR: chang
                                 strlen(G.filename);
         slinkentry *slnk_entry;
 
+        fclose(G.outfile);
+
         if ((unsigned)slnk_entrysize < ucsize) {
             Info(slide, 0x201, ((char *)slide,
               "warning:  symbolic link (%s) failed: mem alloc overflow\n",
@@ -1107,6 +1107,11 @@ void close_outfile(__G)    /* GRR: chang
     }
 #endif /* SYMLINKS */
 
+#ifndef NO_CHMOD
+    if (fchmod(fileno(G.outfile), filtattr(__G__ G.pInfo->file_attr)))
+        perror("chmod (file attributes) error");
+#endif
+
 #ifdef QLZIP
     if (G.extra_field) {
         static void qlfix OF((__GPRO__ uch *ef_ptr, unsigned ef_len));
@@ -1120,7 +1125,7 @@ void close_outfile(__G)    /* GRR: chang
     /* if -X option was specified and we have UID/GID info, restore it */
     if (have_uidgid_flg) {
         TTrace((stderr, "close_outfile:  restoring Unix UID/GID info\n"));
-        if (chown(G.filename, (uid_t)z_uidgid[0], (gid_t)z_uidgid[1]))
+        if (fchown(fileno(G.outfile), (uid_t)z_uidgid[0], (gid_t)z_uidgid[1]))
         {
             if (uO.qflag)
                 Info(slide, 0x201, ((char *)slide,
@@ -1133,6 +1138,8 @@ void close_outfile(__G)    /* GRR: chang
         }
     }
 
+    fclose(G.outfile);
+
     /* set the file's access and modification times */
     if (utime(G.filename, &(zt.t2))) {
 #ifdef AOS_VS
@@ -1156,11 +1163,6 @@ void close_outfile(__G)    /* GRR: chang
     zipfile.
   ---------------------------------------------------------------------------*/
 
-#ifndef NO_CHMOD
-    if (chmod(G.filename, filtattr(__G__ G.pInfo->file_attr)))
-        perror("chmod (file attributes) error");
-#endif
-
 } /* end function close_outfile() */
 
 #endif /* !MTS */

# $MirOS: src/share/misc/licence.template,v 1.28 2008/11/14 15:33:44 tg Rel $
#-
# Copyright (c) 2009
#	Thorsten Glaser <tg@mirbsd.org>
# Rewrite of code by Marc Espie, Thorsten Glaser and Benny Siegert
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.

noshared=0
libtype=bsd
sharedonly=0
strict=0
reqmajor=0
reqminor=0
bestmajor=0
bestminor=0
found_libtool=0
found_shared=0
found_goodshared=0
found_unshared=0

while [[ $1 = -* ]]; do
	case $1 {
	(-noshared)
		noshared=1
		;;
	(-dylib)
		libtype=dylib
		;;
	(-gnulib)
		libtype=gnu
		;;
	(*)
		break
		;;
	}
	shift
done

libname=${1%%*(.)}

if [[ $libname = *.a ]]; then
	libname=${libname%.a}
	noshared=1
else
	if [[ $libname = *.?(=)+([0-9]).+([0-9]) ]]; then
		:
	elif [[ $libname = *.?(=)+([0-9]) ]]; then
		libname=$libname.0
	fi
	if [[ $libname = *.?(=)+([0-9]).+([0-9]) ]]; then
		reqminor=${libname##*.}
		libname=${libname%.$reqminor}
		reqmajor=${libname##*.}
		libname=${libname%.$reqmajor}
		if [[ $reqmajor = =* ]]; then
			reqmajor=${reqmajor#=}
			strict=1
		fi
	fi
	if [[ $libname = *.so ]]; then
		libname=${libname%.so}
		sharedonly=1
	fi
fi

while read line; do
	[[ $line = lib$libname.* ]] || continue
	rest=${line#lib$libname.}
	if [[ $rest = la ]]; then
		found_libtool=1
		continue
	fi
	if (( !noshared )); then
		case $libtype {
		(dylib)
			[[ $rest = +([0-9])*(.+([0-9])).dylib ]] || continue
			major=${rest%%.*}
			minor=${rest#$major.}
			if [[ $minor = [0-9]* ]]; then
				minor=${minor%%.*}
			else
				minor=0
			fi
			;;
		(gnu)
			[[ $rest = so.+([0-9])?(.+([0-9])?(.*)) ]] || continue
			rest=${rest#so.}
			if [[ $rest = +([0-9]) ]]; then
				major=$rest
				minor=0
			else
				major=${rest%%.*}
				minor=${rest#$major.}
				minor=${minor%%.*}
			fi
			;;
		(bsd)
			[[ $rest = so.+([0-9]).+([0-9]) ]] || continue
			rest=${rest#so.}
			major=${rest%%.*}
			minor=${rest#$major.}
			;;
		}
		found_shared=1
		if (( strict )); then
			if (( major > reqmajor )); then
				print Error: strict library too high
				exit 0
			fi
			(( major < reqmajor )) && continue
			(( minor < reqminor )) && continue
			found_goodshared=1
			bestmajor=$major
			(( minor >= bestminor )) && bestminor=$minor
		else
			(( major < reqmajor || \
			    (major == reqmajor && minor < reqminor) )) && \
			    continue
			found_goodshared=1
			if (( major > bestmajor || \
			    (major == bestmajor && minor > bestminor) )); then
				bestmajor=$major
				bestminor=$minor
			fi
		fi
		continue
	fi
	if (( !sharedonly )) && [[ $rest = a ]]; then
		found_unshared=1
	fi
done

if (( found_libtool )); then
	print $libname.la
elif (( found_goodshared )); then
	print $libname.$bestmajor.$bestminor
elif (( found_shared )); then
	print Error: bad shared library
elif (( found_unshared )); then
	print $libname.a
else
	print Missing library
fi

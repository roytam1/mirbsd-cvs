#!/bin/bash
# $MirOS: src/share/misc/licence.template,v 1.14 2006/08/09 19:35:23 tg Rel $
# $NetBSD: darwindiskimage,v 1.2 2006/08/30 04:36:10 schmonz Exp $
#-
# Copyright (c) 2006
#	Thorsten Glaser <tg@mirbsd.de>
# Derived from NetBSD(R) pkgsrc(R)
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a defect.
#-
# Use this to create a disk image, for use with a MirPorts Framework
# installation on a default case-insensitive Mac OSX installation.
#
# $ /usr/bin/cvs -d anoncvs@anoncvs.mirbsd.org:/cvs co osxports
# $ cp ports/infrastructure/scripts/darwindiskimage ~
# $ bash ~/darwindiskimage create ~/Documents/MirPorts 512
#				# Mebibytes - season to taste
# $ bash ~/darwindiskimage mount ~/Documents/MirPorts
# $ sudo chown $(id -u):$(id -g) /Volumes/MirPorts
# $ pax -rw ports /Volumes/MirPorts/; rm -rf ports
# $ cd /Volumes/MirPorts/ports
# $ bash ./Setup.sh -uel /Volumes/MirPorts/mpkg
# $ . /Volumes/MirPorts/mpkg/db/SetEnv.sh
# $ cd devel/cvs
# $ mmake install clean
# $ cd /Volumes/MirPorts
# $ mv ports/Distfiles .
# $ rm -rf ports
# $ /Volumes/MirPorts/mpkg/bin/cvs -d anoncvs@anoncvs.mirbsd.org:/cvs \
#	co -PA ports
# $ cd ports; ln -s ../Distfiles .
#
# To use:
# $ bash ~/darwindiskimage mount ~/Documents/MirPorts
# $ . /Volumes/MirPorts/mpkg/db/SetEnv.sh
# $ cd /Volumes/MirPorts/ports/foo/bar; mmake install clean
#
# Have fun...


_getdevice_and_halfway_mount()
{
	hdid -nomount "$1" | _getdevicebasename | tail -1
}

_getdevicebasename()
{
	awk '{print $1}' | sed -e 's|^/dev/||'
}

_normalize_filename()
{
	echo "$1" | sed -e 's|\.dmg$||' -e 's|$|.dmg|'
}

dmg_create()
{
	local fstype fs osmajor file mountedname megabytes device
	[ $# -eq 2 ] || die 1 "Usage: $0 create <file> <megabytes>"

	# Use case-sensitive HFS+ where available (Darwin >= 7)
	fstype='Apple_UFS'
	fs='UFS'
	osmajor=`uname -r | awk 'BEGIN {FS="."} {print $1}'`
	if [ ${osmajor} -ge 7 ]; then
		fstype='Apple_HFSX'
		fs='HFSX'
	fi

	file="`_normalize_filename \"$1\"`"
	mountedname="`basename \"${file}\" .dmg`"
	megabytes=$2

	# create
	hdiutil create -quiet "${file}" -megabytes ${megabytes} \
		-partitionType ${fstype} -layout SPUD -fs ${fs}

	# rename
	device=`_getdevice_and_halfway_mount "${file}"`
	hdiutil mount "${file}"
	disktool -n "${device}" "${mountedname}"
	hdiutil eject -quiet "${device}"
}

dmg_mount()
{
	local file device exitcode
	[ $# -eq 1 ] || die 1 "Usage: $0 mount <file>"

	file="`_normalize_filename \"$1\"`"

	hdiutil mount ${file}
}


dmg_umount()
{
	local mountpoint device
	[ $# -eq 1 ] || die 1 "Usage: $0 umount <mount-point>"

	mountpoint="$1"
	device=`mount | grep "${mountpoint} (local" | _getdevicebasename`

	[ "${device}" ] || die 1 "error: no device mounted at ${mountpoint}"

	hdiutil eject -quiet "${device}"
}

die()
{
	local exitcode
	exitcode=$1; shift
	warn "$@"
	exit ${exitcode}
}

warn()
{
	echo >&2 "$@"
}

try()
{
	exitcode=$1; shift
	action=$1; shift
	error=`"${action}" "$@" 2>&1` || die ${exitcode} "${error}"
}

main()
{
	[ $# -eq 0 ] && die 1 "Usage: $0 <create|mount|umount>"
	ACTION="$1"; shift
	case ${ACTION} in
		create|mount|umount)
			try 1 "dmg_${ACTION}" "$@"
			return 0
			;;
		*)
			die 1 "Usage: $0 <create|mount|umount>"
			;;
	esac
}

PATH=${PATH}:/sbin:/usr/sbin
main "$@"
exit $?

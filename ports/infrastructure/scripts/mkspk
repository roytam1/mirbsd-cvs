#!/bin/mksh
# $MirOS: ports/infrastructure/scripts/mkspk,v 1.1 2005/12/17 04:05:27 tg Exp $
#-
# Copyright (c) 2005
#	Thorsten "mirabile" Glaser <tg@mirbsd.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a nontrivial bug.
#-
# Make a system package out of a port.

export PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/X11R6/bin _PORTPATH=$PATH

me=${0##*/}
curdir=$(readlink -fn .)

function usage {
	print -u2 Usage: $me /path/to/port
	exit 1
}

port=$1
[[ -z $port ]] && usage
[[ $port = /* ]] || port=/usr/ports/$port
[[ -e $port/Makefile ]] || usage
fgrep '<bsd.port.mk>' $port/Makefile >/dev/null 2>&1 || usage

pp=/
pr=${port#/}
while [[ ! -s ${pp}Setup.sh ]]; do
	if [[ $pr != */* ]]; then
		print -u2 $me: cannot find PORTSDIR
	fi
	pp=$pp${pr%%/*}/
	pr=${pr#*/}
done
pp=${pp%/}

mk="/usr/bin/make -m $(print | /usr/bin/make -f - ___DISPLAY_MAKEVARS=.SYSMK)"
mk="$mk -m $pp/infrastructure/install"

export PORTSDIR=$pp LOCALBASE=/usr SYSCONFDIR=/etc X11BASE=/usr/X11R6
export PREFIX=/usr PKG_CMDDIR=/usr/db/sbin PKGREPOSITORY=$curdir/mkspk-$$
unset MAKECONF BINOWN BINGRP
$SUDO mkdir -p /usr/db/{pkg,sbin}
mkdir -p $PKGREPOSITORY $curdir/mkspk-$$-tmp $curdir/mkspk

cd $curdir/mkspk-$$-tmp
lndir $pp/infrastructure/pkgtools
set -e
/usr/bin/make obj
/usr/bin/make NOMAN=Yes BSD_PREFIX=/usr/db all
$SUDO /usr/bin/make NOMAN=Yes BSD_PREFIX=/usr/db install
set +e
cd $curdir
rm -rf mkspk-$$-tmp

cd $port
set -e
$mk clean CLEANDEPENDS=Yes
$mk depends package
$mk clean CLEANDEPENDS=Yes
rundeps=$($mk full-run-depends _print-packagename)
set +e
cd $PKGREPOSITORY
rm -rf CDROM FTP
[[ -s /usr/db/shareddirs.db ]] || print -u2 $me: warning: shareddirs.db unused
$SUDO $PKG_CMDDIR/pkg_delete -f *

[[ -s /usr/db/shareddirs.db ]] && print -u2 $me: warning: shareddirs.db in use
$SUDO rmdir /usr/db/pkg || print -u2 $me: warning: still packages installed
$SUDO rm /usr/db/sbin/pkg /usr/db/sbin/pkg_*
$SUDO rmdir /usr/db/sbin || print -u2 $me: warning: /usr/db/sbin not empty
$SUDO rm /usr/db/fake.mtree
[[ -s /usr/db/shareddirs.db ]] || $SUDO rm /usr/db/shareddirs.db
$SUDO rmdir /usr/db || print -u2 $me: warning: not completely cleaned up

list=
for file in *; do
	needed=0
	for dep in $rundeps; do
		[[ $file = *$dep* ]] && needed=1
	done
	[[ $needed = 1 ]] || list="$list $file"
done
print Removing unneeded dependencies: $list
rm $list

print You now can cd to mkspk/ and run * through cgz2ngz.
mv * $curdir/mkspk
cd $curdir
rmdir $PKGREPOSITORY
exit 0

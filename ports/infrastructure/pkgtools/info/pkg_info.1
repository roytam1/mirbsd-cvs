.\" $MirOS$
.\" $OpenBSD: pkg_info.1,v 1.12 2003/06/12 12:59:52 jmc Exp $
.\"
.\" FreeBSD install - a package for the installation and maintenance
.\" of non-core utilities.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" Jordan K. Hubbard
.\"-
.\" Copyright (c) 2008, 2009, 2010, 2016
.\"	mirabilos <m@mirbsd.org>
.\"-
.\" Try to make GNU groff and AT&T nroff more compatible
.\" * ` generates ‘ in gnroff, so use \`
.\" * ' generates ’ in gnroff, \' generates ´, so use \*(aq
.\" * - generates ‐ in gnroff, \- generates −, so .tr it to -
.\"   thus use - for hyphens and \- for minus signs and option dashes
.\" * ~ is size-reduced and placed atop in groff, so use \*(TI
.\" * ^ is size-reduced and placed atop in groff, so use \*(ha
.\" * \(en does not work in nroff, so use \*(en
.\" * <>| are problematic, so redefine and use \*(Lt\*(Gt\*(Ba
.\" Also make sure to use \& *before* a punctuation char that is to not
.\" be interpreted as punctuation, and especially with two-letter words
.\" but also (after) a period that does not end a sentence (“e.g.\&”).
.\" The section after the "doc" macropackage has been loaded contains
.\" additional code to convene between the UCB mdoc macropackage (and
.\" its variant as BSD mdoc in groff) and the GNU mdoc macropackage.
.\"
.ie \n(.g \{\
.	if \*[.T]ascii .tr \-\N'45'
.	if \*[.T]latin1 .tr \-\N'45'
.	if \*[.T]utf8 .tr \-\N'45'
.	ds <= \[<=]
.	ds >= \[>=]
.	ds Rq \[rq]
.	ds Lq \[lq]
.	ds sL \(aq
.	ds sR \(aq
.	if \*[.T]utf8 .ds sL `
.	if \*[.T]ps .ds sL `
.	if \*[.T]utf8 .ds sR '
.	if \*[.T]ps .ds sR '
.	ds aq \(aq
.	ds TI \(ti
.	ds ha \(ha
.	ds en \(en
.\}
.el \{\
.	ds aq '
.	ds TI ~
.	ds ha ^
.	ds en \(em
.\}
.\"
.\" Implement .Dd with the Mdocdate RCS keyword
.\"
.rn Dd xD
.de Dd
.ie \\$1$Mdocdate: \{\
.	xD \\$2 \\$3, \\$4
.\}
.el .xD \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8
..
.\"
.\" .Dd must come before definition of .Mx, because when called
.\" with -mandoc, it might implement .Mx itself, but we want to
.\" use our own definition. And .Dd must come *first*, always.
.\"
.Dd $Mdocdate: February 11 2016 $
.\"
.\" Check which macro package we use, and do other -mdoc setup.
.\"
.ie \n(.g \{\
.	if \*[.T]utf8 .tr \[la]\*(Lt
.	if \*[.T]utf8 .tr \[ra]\*(Gt
.	ie d volume-ds-1 .ds tT gnu
.	el .ds tT bsd
.\}
.el .ds tT ucb
.\"
.\" Implement .Mx (MirBSD)
.\"
.ie "\*(tT"gnu" \{\
.	eo
.	de Mx
.	nr curr-font \n[.f]
.	nr curr-size \n[.ps]
.	ds str-Mx \f[\n[curr-font]]\s[\n[curr-size]u]
.	ds str-Mx1 \*[Tn-font-size]\%MirOS\*[str-Mx]
.	if !\n[arg-limit] \
.	if \n[.$] \{\
.	ds macro-name Mx
.	parse-args \$@
.	\}
.	if (\n[arg-limit] > \n[arg-ptr]) \{\
.	nr arg-ptr +1
.	ie (\n[type\n[arg-ptr]] == 2) \
.	as str-Mx1 \~\*[arg\n[arg-ptr]]
.	el \
.	nr arg-ptr -1
.	\}
.	ds arg\n[arg-ptr] "\*[str-Mx1]
.	nr type\n[arg-ptr] 2
.	ds space\n[arg-ptr] "\*[space]
.	nr num-args (\n[arg-limit] - \n[arg-ptr])
.	nr arg-limit \n[arg-ptr]
.	if \n[num-args] \
.	parse-space-vector
.	print-recursive
..
.	ec
.	ds sP \s0
.	ds tN \*[Tn-font-size]
.\}
.el \{\
.	de Mx
.	nr cF \\n(.f
.	nr cZ \\n(.s
.	ds aa \&\f\\n(cF\s\\n(cZ
.	if \\n(aC==0 \{\
.		ie \\n(.$==0 \&MirOS\\*(aa
.		el .aV \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9
.	\}
.	if \\n(aC>\\n(aP \{\
.		nr aP \\n(aP+1
.		ie \\n(C\\n(aP==2 \{\
.			as b1 \&MirOS\ #\&\\*(A\\n(aP\\*(aa
.			ie \\n(aC>\\n(aP \{\
.				nr aP \\n(aP+1
.				nR
.			\}
.			el .aZ
.		\}
.		el \{\
.			as b1 \&MirOS\\*(aa
.			nR
.		\}
.	\}
..
.\}
.\"-
.Dt PKG_INFO 1
.Os
.Sh NAME
.Nm pkg_info
.Nd display information on software packages
.Sh SYNOPSIS
.Nm pkg_info
.Op Fl cDdfIikLmPpqRrvh
.Op Fl e Ar package
.Op Fl l Ar prefix
.Ar pkg-name Op Ar ...
.Nm pkg_info
.Op Fl a Ar flags
.Sh DESCRIPTION
The
.Nm
command is used to dump out information for packages, which may be either
packed up in files or already installed on the system with the
.Xr pkg_create 1
command.
.Pp
The
.Ar pkg-name
may be the name of an installed package, the pathname to a package
distribution file, or a URL to an ftp-available package.
.Nm
will try to complete
.Ar pkg-name
with a version number while looking through installed packages.
.Pp
The following command-line options are supported:
.Bl -tag -width indent
.It Fl a
Show information for all currently installed packages.
.It Fl c
Show the one-line comment field for each package.
.It Fl D
Show the install-message file (if any) for each package.
.It Fl d
Show the long-description field for each package.
.It Fl e Ar pkg-name
This option
allows you to test for the presence of another (perhaps
prerequisite) package from a script.
If the package identified by
.Ar pkg-name
is currently installed, return 0, otherwise return 1.
In addition, the names of any package(s) found installed are printed to
stdout unless turned off using the
.Fl q
option.
.Pp
If the given
.Ar pkg-name
contains a
shell meta-character, it will be matched against all installed
packages using
.Xr fnmatch 3 .
.Xr csh 1
style
.Dq {,}
alternates have also been implemented in addition to this.
Package version numbers can also be matched in a relational manner
using the
.Dq \*(Gt= ,
.Dq \*(Lt= ,
.Dq \*(Gt ,
and
.Dq \*(Lt
operators.
For example,
.Ic pkg_info \-e \*(aqname\-\*(Gt=1.3\*(aq
will match versions 1.3 and later of the
.Pa name
package.
.It Fl f
Show the packing list instructions for each package.
.It Fl I
Show the index entry for each package.
.It Fl i
Show the install script (if any) for each package.
.It Fl k
Show the de-install script (if any) for each package.
.It Fl L
Show the files within each package.
This is different from just
viewing the packing list, since full pathnames for everything
are generated.
.It Fl l Ar str
Prefix each information category header (see
.Fl q )
shown with
.Ar str .
This is primarily of use to front-end programs that want to request a
lot of different information fields at once for a package, but don't
necessary want the output intermingled in such a way that they can't
organize it.
This lets you add a special token to the start of each field.
.It Fl m
Show the mtree file (if any) for each package.
.It Fl P
Show a list of packages that the package depends on.
.It Fl p
Show the installation prefix for each package.
.It Fl q
Be
.Dq quiet
in emitting report headers and such, just dump the
raw info (basically, assume a non-human reading).
.It Fl R
Show which packages require a given package.
.It Fl r
Show the requirements script (if any) for each package.
.It Fl s
Show installation of configuration files (samples) for each package.
.It Fl v
Turn on verbose output.
.El
.Sh ENVIRONMENT
.Bl -tag -width PKG_DBDIR
.It Ev PKG_DBDIR
The standard package database directory,
.Pa /var/db/pkg ,
can be overridden by specifying an alternative directory in the
.Ev PKG_DBDIR
environment variable.
.It Ev PKG_PATH
This can be used to specify a colon-separated list of paths to search for
package files.
The current directory is always searched first, even if
.Ev PKG_PATH
is set.
If
.Ev PKG_PATH
is used, the suffix
.Dq .tgz
is automatically appended to the
.Ar pkg-name ,
whereas searching in the current directory uses
.Ar pkg-name
literally.
.It Ev PKG_TMPDIR , Ev TMPDIR
These are tried in turn (if set) as candidate directories in which
to create a
.Dq staging area
for any files extracted by
.Nm
from package files.
If neither
.Ev PKG_TMPDIR
nor
.Ev TMPDIR
yields a suitable scratch directory,
.Pa /var/tmp
and
.Pa /tmp
are tried in turn.
.Pp
Since
.Nm
requires very little information to be extracted from any package
files examined, it is unlikely that these environment variables would
ever need to be used to work around limited available space in the
default locations.
.El
.Sh TECHNICAL DETAILS
Package info is either extracted from package files named on the
command line, or from already installed package information
in
.Pa /var/db/pkg/<pkg-name> .
.Sh SEE ALSO
.Xr pkg_add 1 ,
.Xr pkg_create 1 ,
.Xr pkg_delete 1 ,
.Xr mkstemp 3 ,
.Xr mtree 8
.Sh AUTHORS
.Bl -tag -width indent -compact
.It "Jordan Hubbard"
most of the work
.It "John Kohl"
refined it for
.Nx
.El
.Sh BUGS
Sure to be some.

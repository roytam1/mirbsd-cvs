$MirOS$
--- configure.in.orig	2005-01-10 20:21:36.000000000 +0100
+++ configure.in	2005-01-10 20:21:24.000000000 +0100
@@ -257,40 +257,10 @@ AM_LANGINFO_CODESET
 
 dnl check for id3lib library
 dnl LOCAL__PATH_ID3LIB is defined by us, and will be until such time as id3lib supplies one
-LOCAL__PATH_ID3LIB(have_id3lib=yes, AC_MSG_WARN([*** id3lib not found - id3v2 support will not be built]))
-AM_CONDITIONAL(FLaC__HAS_ID3LIB, [test x$have_id3lib = xyes])
-if test x$have_id3lib = xyes ; then
-AC_DEFINE(FLAC__HAS_ID3LIB)
-
-dnl expected id3lib version for cross compiling
-ID3LIB_MAJOR=3
-ID3LIB_MINOR=8
-ID3LIB_PATCH=0
-
-CFLAGS_save_blah_blah_blah=$CFLAGS
-CFLAGS="$ID3LIB_CFLAGS $CFLAGS"
-LIBS_save_blah_blah_blah=$LIBS
-LIBS="$ID3LIB_LIBS $LIBS"
-AC_MSG_CHECKING(for id3lib version)
-      AC_TRY_RUN([
-#include <id3.h>
-#include <stdio.h>
-int
-main ()
-{
-	FILE *output;
-	output=fopen("conftest.id3","w");
-	fprintf(output,"ID3LIB_MAJOR=%d\nID3LIB_MINOR=%d\nID3LIB_PATCH=%d\n",ID3LIB_MAJOR_VERSION,ID3LIB_MINOR_VERSION,ID3LIB_PATCH_VERSION);
-	fclose(output);
-	exit(0);
-}
-], . ./conftest.id3; echo "${ID3LIB_MAJOR}.${ID3LIB_MINOR}.${ID3LIB_PATCH}", AC_MSG_WARN(could not determine id3lib version),[echo $ac_n "cross compiling; assuming ${ID3LIB_MAJOR}.${ID3LIB_MINOR}.${ID3LIB_PATCH} $ac_c"])
-AC_DEFINE_UNQUOTED(ID3LIB_MAJOR, $ID3LIB_MAJOR)
-AC_DEFINE_UNQUOTED(ID3LIB_MINOR, $ID3LIB_MINOR)
-AC_DEFINE_UNQUOTED(ID3LIB_PATCH, $ID3LIB_PATCH)
-CFLAGS=$CFLAGS_save_blah_blah_blah
-LIBS=$LIBS_save_blah_blah_blah
-fi
+ID3LIB_CFLAGS=""
+ID3LIB_LIBS=""
+AC_SUBST(ID3LIB_CFLAGS)
+AC_SUBST(ID3LIB_LIBS)
 
 AC_CHECK_PROGS(DOXYGEN, doxygen)
 AM_CONDITIONAL(FLaC__HAS_DOXYGEN, test -n "$DOXYGEN")

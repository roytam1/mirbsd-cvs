$MirOS$
$OpenBSD: patch-instrum_c,v 1.1 2001/07/05 10:48:22 espie Exp $
--- instrum.c.orig	Mon May 20 13:14:50 1996
+++ instrum.c	Tue Mar 29 19:59:31 2016
@@ -31,7 +31,7 @@
 #include <strings.h>
 #endif
 
-#if defined(__FreeBSD__) || defined (__WIN32__)
+#if defined(__FreeBSD__) || defined (__WIN32__) || defined(__OpenBSD__)
 #include <stdlib.h>
 #else
 #include <malloc.h>
@@ -207,8 +207,8 @@ static Instrument *load_instrument(char 
 	{
 	  if (strlen(name)+strlen(patch_ext[i])<1024)
 	    {
-	      strcpy(tmp, name);
-	      strcat(tmp, patch_ext[i]);
+	      strlcpy(tmp, name, sizeof(tmp));
+	      strlcat(tmp, patch_ext[i], sizeof(tmp));
 	      if ((fp=open_file(tmp, 1, OF_NORMAL)))
 		{
 		  noluck=0;
@@ -421,7 +421,7 @@ static Instrument *load_instrument(char 
 	}
 
       /* Then read the sample data */
-      sp->data = safe_malloc(sp->data_length);
+      sp->data = safe_malloc(sp->data_length /*XXX*/ + 16);
       if (1 != fread(sp->data, sp->data_length, 1, fp))
 	goto fail;
       
@@ -430,7 +430,7 @@ static Instrument *load_instrument(char 
 	  int32 i=sp->data_length;
 	  uint8 *cp=(uint8 *)(sp->data);
 	  uint16 *tmp,*new;
-	  tmp=new=safe_malloc(sp->data_length*2);
+	  tmp=new=safe_malloc(sp->data_length*2 /*XXX*/ + 16);
 	  while (i--)
 	    *tmp++ = (uint16)(*cp++) << 8;
 	  cp=(uint8 *)(sp->data);

$MirOS$
--- morse2ascii.c.orig	Tue Oct  2 21:08:49 2012
+++ morse2ascii.c	Thu Oct 17 19:26:56 2013
@@ -66,8 +66,8 @@ int do_mono(i16 *smp, int samples, int c
 void do_dcbias(i16 *smp, int samples);
 void do_normalize(i16 *smp, int samples);
 int do_reduce(i16 *smp, int samples, int *freq);
-void my_err(u8 *err);
-void std_err(void);
+void my_err(const u8 *err) __dead;
+void std_err(void) __dead;
 
 
 
@@ -229,6 +229,7 @@ int main(int argc, char *argv[]) {
     }
 
     beep = do_beeps(smp, samples, &beeps);
+    free(smp);
 
 goto_beep2morse:
     if(beeps < 0) {
@@ -264,10 +265,10 @@ int morse_output(u8 *beep) {
             qa = 0;
     u8      old,
             *p,
-            *l,
-            *s,
-            *z,
-            *x;
+            *l;
+    const u8  *s;
+    const u8  *z;
+    const u8  *x;
 
     p = beep;
     while(*p) {
@@ -642,13 +643,13 @@ u8 *do_beeps(i16 *smp, int samples, int 
     while(i < beeps) {
         if(beep[i]) {
             for(tmp = 0; (i < beeps) && beep[i]; tmp++, i++);
-            if(tmp <= med_on)       beep[j++] = DOT;
-            else if(tmp > med_on)   beep[j++] = DASH;
+            if(tmp <= (u32)med_on)       beep[j++] = DOT;
+            else if(tmp > (u32)med_on)   beep[j++] = DASH;
         } else {
             for(tmp = 0; (i < beeps) && !beep[i]; tmp++, i++);
-            if(tmp <= med_off)      beep[j++] = GAP;
-            else if(tmp >= max_off) beep[j++] = MEDIUMGAP;
-            else if(tmp > med_off)  beep[j++] = SHORTGAP;
+            if(tmp <= (u32)med_off)      beep[j++] = GAP;
+            else if(tmp >= (u32)max_off) beep[j++] = MEDIUMGAP;
+            else if(tmp > (u32)med_off)  beep[j++] = SHORTGAP;
         }
     }
     beeps = j;
@@ -830,7 +831,7 @@ int do_reduce(i16 *smp, int samples, int
 
 
 
-void my_err(u8 *err) {
+void my_err(const u8 *err) {
     fprintf(stderr, "\nError: %s\n", err);
     exit(1);
 }

$MirOS$
$OpenBSD: patch-mpg123.c,v 1.2 2001/04/24 00:48:12 naddy Exp $
--- mpg123.c.orig	1999-06-15 20:21:14.000000000 +0000
+++ mpg123.c	2004-05-12 19:31:47.000000000 +0000
@@ -32,6 +32,7 @@
 #include "buffer.h"
 #include "term.h"
 
+#define	INCLUDE_RCSID
 #include "version.h"
 
 static void usage(char *dummy);
@@ -177,6 +178,9 @@ void init_output(void)
         _exit(0);
       default: /* parent */
         xfermem_init_writer (buffermem);
+	if (xfermem_block(XF_WRITER, buffermem) == XF_CMD_TERMINATE) {
+	    intflag = TRUE;
+	}
         param.outmode = DECODE_BUFFER;
     }
   }
@@ -306,9 +310,9 @@ char *find_next_file (int argc, char *ar
                 if (line[0]=='\0' || line[0]=='#')
                     continue;
 		if ((listnamedir) && (line[0]!='/') && (line[0]!='\\')){
-                    strcpy (linetmp, listnamedir);
-                    strcat (linetmp, line);
-		    strcpy (line, linetmp);
+                    strlcpy (linetmp, listnamedir, 1024);
+                    strlcat (linetmp, line, 1024);
+		    strlcpy (line, linetmp, 1024);
                 }
                 return (line);
             }
@@ -329,6 +333,7 @@ void init_input (int argc, char *argv[])
 {
     int mallocsize = 0;
     char *tempstr;
+    size_t s;
 
     shuffle_listsize = 0;
 
@@ -344,11 +349,11 @@ void init_input (int argc, char *argv[])
 		exit(1);
 	    }
 	}
-	if (!(shufflist[shuffle_listsize] = (char *) malloc(strlen(tempstr) + 1))) {
+	if (!(shufflist[shuffle_listsize] = (char *) malloc(s = (strlen(tempstr) + 1)))) {
 	    perror("malloc");
 	    exit(1);
 	}
-	strcpy(shufflist[shuffle_listsize], tempstr);
+	strlcpy(shufflist[shuffle_listsize], tempstr, s);
 	shuffle_listsize++;
     }
     if (shuffle_listsize) {
@@ -477,7 +482,7 @@ topt opts[] = {
     {'t', "test",        0,                  0, &param.outmode, DECODE_TEST},
     {'s', "stdout",      0,       SetOutStdout, &param.outmode, DECODE_FILE},
     {'S', "STDOUT",      0,       SetOutStdout1, &param.outmode, DECODE_AUDIOFILE},
-    {'O', "outfile",     GLO_ARG | GLO_CHAR, SetOutFile, NULL, NULL},
+    {'O', "outfile",     GLO_ARG | GLO_CHAR, SetOutFile, NULL, 0},
     {'c', "check",       0,                  0, &param.checkrange, TRUE},
     {'v', "verbose",     0,        set_verbose, 0,           0},
     {'q', "quiet",       0,                  0, &param.quiet,      TRUE},
@@ -913,18 +918,6 @@ int main(int argc, char *argv[])
 				&dirname, &filename))
 				fprintf(stderr, "\nDirectory: %s", dirname);
 			fprintf(stderr, "\nPlaying MPEG stream from %s ...\n", filename);
-
-#if !defined(GENERIC)
-{
-     const char *term_type;
-         term_type = getenv("TERM");
-         if (!strcmp(term_type,"xterm"))
-         {
-           fprintf(stderr, "\033]0;%s\007", filename);
-         }
-}
-#endif
-
 		}
 
 #if !defined(WIN32) && !defined(GENERIC)
@@ -1101,6 +1094,7 @@ static void print_title(void)
 {
     fprintf(stderr,"High Performance MPEG 1.0/2.0/2.5 Audio Player for Layer 1, 2 and 3.\n");
     fprintf(stderr,"Version %s (%s). Written and copyrights by Michael Hipp.\n", prgVersion, prgDate);
+    fprintf(stderr,"Patchlevel %s\n", RCSid);
     fprintf(stderr,"Uses code from various people. See 'README' for more!\n");
     fprintf(stderr,"THIS SOFTWARE COMES WITH ABSOLUTELY NO WARRANTY! USE AT YOUR OWN RISK!\n");
 }
@@ -1198,5 +1192,3 @@ static void long_usage(char *d)
   fprintf(o,"\nSee the manpage %s(1) for more information.\n", prgName);
   exit(0);
 }
-
-

$MirOS: ports/audio/mpg123/patches/patch-mpg123_h,v 1.3 2008/05/16 22:14:19 tg Exp $
$OpenBSD: patch-mpg123_h,v 1.1 2003/07/22 03:24:42 jason Exp $
--- mpg123.h.orig	Fri May 28 14:51:36 1999
+++ mpg123.h	Sat May 17 23:26:37 2008
@@ -3,6 +3,7 @@
  * used source: musicout.h from mpegaudio package
  */
 
+#include	<stddef.h>
 #include        <stdio.h>
 #include        <string.h>
 #include        <signal.h>
@@ -21,10 +22,6 @@ typedef unsigned char byte;
 #endif
 
 #define MPG123_REMOTE
-#ifdef HPUX
-#define random rand
-#define srandom srand
-#endif
 
 #define FRONTEND_SAJBER 1
 #define FRONTEND_TK3PLAY 2
@@ -40,9 +37,6 @@ typedef unsigned char byte;
 # define REAL_IS_FLOAT
 # define NEW_DCT9
 
-# define random rand
-# define srandom srand
-
 # undef MPG123_REMOTE           /* Get rid of this stuff for Win32 */
 #endif
 
@@ -125,26 +119,26 @@ struct frame {
 };
 
 struct parameter {
-  int aggressive; /* renice to max. priority */
-  int shuffle;	/* shuffle/random play */
-  int remote;	/* remote operation */
-  int outmode;	/* where to out the decoded sampels */
-  int quiet;	/* shut up! */
+  long aggressive; /* renice to max. priority */
+  long shuffle;	/* shuffle/random play */
+  long remote;	/* remote operation */
+  long outmode;	/* where to out the decoded sampels */
+  long quiet;	/* shut up! */
   long usebuffer;	/* second level buffer size */
-  int tryresync;  /* resync stream after error */
+  long tryresync;  /* resync stream after error */
   int verbose;    /* verbose level */
 #ifdef TERM_CONTROL
-  int term_ctrl;
+  long term_ctrl;
 #endif
-  int force_mono;
-  int force_stereo;
-  int force_8bit;
+  long force_mono;
+  long force_stereo;
+  long force_8bit;
   long force_rate;
-  int down_sample;
-  int checkrange;
+  long down_sample;
+  long checkrange;
   long doublespeed;
   long halfspeed;
-  int force_reopen;
+  long force_reopen;
   long realtime;
   char filename[256];
 };
@@ -175,7 +169,8 @@ extern char *equalfile;
 extern int halfspeed;
 extern int buffer_fd[2];
 extern txfermem *buffermem;
-extern char *prgName, *prgVersion;
+extern char *prgName;
+extern const char prgVersion[];
 
 #ifndef NOXFERMEM
 extern void buffer_loop(struct audio_info_struct *ai,sigset_t *oldsigset);
@@ -355,5 +350,16 @@ extern struct parameter param;
 extern void dct64_486(int *a,int *b,real *c);
 extern int synth_1to1_486(real *bandPtr,int channel,unsigned char *out,int nb_blocks);
 
+#ifdef INCLUDE_RCSID
+__RCSID("$MirOS: ports/audio/mpg123/patches/patch-mpg123_h,v 1.3 2008/05/16 22:14:19 tg Exp $");
+#endif
 
+/* from icy.c */
 
+extern void icy_close(int);
+extern int icy_init(int);
+extern ssize_t icy_read(int d, void *buf, size_t nbytes);
+
+/* from uniprint.c */
+
+extern wchar_t *uniprint(const char *);

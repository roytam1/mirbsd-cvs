$MirOS$
$OpenBSD: patch-layer3_c,v 1.2 2004/03/07 19:54:10 pvalchev Exp $
--- layer3.c.orig	2004-06-03 13:02:19.000000000 +0000
+++ layer3.c	2004-06-03 13:02:19.000000000 +0000
@@ -353,7 +353,18 @@ static void III_get_side_info(struct III
            gr_info->full_gain[i] = gr_info->pow2gain + (getbits_fast(3)<<3);
 
          if(gr_info->block_type == 0) {
-           fprintf(stderr,"Blocktype == 0 and window-switching == 1 not allowed.\n");
+           fprintf(stderr,
+	    "Blocktype == 0 and window-switching == 1 not allowed.\n\n"
+	    "Suggestion: use a hex-editor like jstar(1) or emacs to edit the\n"
+	    "supposed MPEG Layer-III file and look for the first occurence of\n"
+	    "a 0xFF byte; if the byte after the 0xFF byte is in the range of\n"
+	    "0xF0-0xFF, it's an MPEG header. Now strip everything before the\n"
+	    "_second_ MPEG header found (ie, until the second occurence of\n"
+	    "these 0xFF 0xF? bytes), and repeat that procedure until the file\n"
+	    "plays fine.\n"
+	    "Hint: Normally, there is a fair amount of NUL ('\\0') bytes after\n"
+	    "the (about five to ten) header bytes; often it's precedented by a\n"
+	    "lot of NUL bytes as well.\n\n");
            exit(1);
          }
       
@@ -608,7 +619,7 @@ static int pretab2[22] = {0,0,0,0,0,0,0,
  * Dequantize samples (includes huffman decoding)
  */
 /* 24 is enough because tab13 has max. a 19 bit huffvector */
-#ifdef __alpha
+#if defined(__LP64__)
 #define BITSHIFT ((sizeof(int)-1)*8)
 #define REFRESH_MASK \
   while(num < BITSHIFT) { \
@@ -634,7 +645,7 @@ static int III_dequantize_sample(real xr
   int *me;
 
   int num=getbitoffset();
-#ifdef __alpha
+#if defined(__LP64__)
   int mask = (int) getbits(num)<<(BITSHIFT+8-num);
 #else
   long mask = (long) getbits(num)<<(BITSHIFT+8-num);
@@ -722,7 +733,7 @@ static int III_dequantize_sample(real xr
         if(x == 15 && h->linbits) {
           max[lwin] = cb;
           REFRESH_MASK;
-#ifdef __alpha
+#if defined(__LP64__)
           x += ((unsigned int) mask) >> (BITSHIFT+8-h->linbits);
 #else
           x += ((unsigned long) mask) >> (BITSHIFT+8-h->linbits);
@@ -750,7 +761,7 @@ static int III_dequantize_sample(real xr
         if(y == 15 && h->linbits) {
           max[lwin] = cb;
           REFRESH_MASK;
-#ifdef __alpha
+#if defined(__LP64__)
           y += ((unsigned int) mask) >> (BITSHIFT+8-h->linbits);
 #else
           y += ((unsigned long) mask) >> (BITSHIFT+8-h->linbits);
@@ -904,7 +915,7 @@ static int III_dequantize_sample(real xr
         if (x == 15 && h->linbits) {
           max = cb;
 	  REFRESH_MASK;
-#ifdef __alpha
+#if defined(__LP64__)
           x += ((unsigned int) mask) >> (BITSHIFT+8-h->linbits);
 #else
           x += ((unsigned long) mask) >> (BITSHIFT+8-h->linbits);
@@ -932,7 +943,7 @@ static int III_dequantize_sample(real xr
         if (y == 15 && h->linbits) {
           max = cb;
 	  REFRESH_MASK;
-#ifdef __alpha
+#if defined(__LP64__)
           y += ((unsigned int) mask) >> (BITSHIFT+8-h->linbits);
 #else
           y += ((unsigned long) mask) >> (BITSHIFT+8-h->linbits);

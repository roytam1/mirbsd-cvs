$MirOS$
--- portaudio/pa_unix_oss/pa_unix.c.orig	Sat Jun 18 00:04:06 2005
+++ portaudio/pa_unix_oss/pa_unix.c	Sat Jun 18 00:07:29 2005
@@ -422,7 +422,11 @@ static PaError PaHost_WatchDogProc( PaHo
     maxPri = sched_get_priority_max(SCHEDULER_POLICY);
     if( schp.sched_priority > maxPri ) schp.sched_priority = maxPri;
 
+#ifdef __OpenBSD__
+    if (pthread_setschedparam(pthread_self(), SCHEDULER_POLICY, &schp) != 0)
+#else
     if (sched_setscheduler(0, SCHEDULER_POLICY, &schp) != 0)
+#endif
     {
         ERR_RPT(("PaHost_WatchDogProc: cannot set watch dog priority!\n"));
         goto killAudio;
@@ -465,7 +469,11 @@ static PaError PaHost_WatchDogProc( PaHo
 lowerAudio:
     {
         struct sched_param    schat = { 0 };
+#ifdef __OpenBSD__
+        if( pthread_setschedparam((pthread_t)pahsc->pahsc_AudioThreadPID, SCHED_OTHER, &schat) != 0)
+#else
         if( sched_setscheduler(pahsc->pahsc_AudioThreadPID, SCHED_OTHER, &schat) != 0)
+#endif
         {
             ERR_RPT(("PaHost_WatchDogProc: failed to lower audio priority. errno = %d\n", errno ));
             /* Fall through into killing audio thread. */
@@ -577,7 +585,11 @@ static PaError PaHost_BoostPriority( int
     pahsc = (PaHostSoundControl *) past->past_DeviceData;
     if( pahsc == NULL ) return paInternalError;
 
+#ifdef __OpenBSD__
+    pahsc->pahsc_AudioThreadPID = (pid_t)pthread_self();
+#else
     pahsc->pahsc_AudioThreadPID = getpid();
+#endif
     DBUG(("PaHost_BoostPriority: audio PID = %d\n", pahsc->pahsc_AudioThreadPID ));
 
     /* Choose a priority in the middle of the range. */
@@ -585,7 +597,11 @@ static PaError PaHost_BoostPriority( int
                                   sched_get_priority_min(SCHEDULER_POLICY)) / 2;
     schp.sched_priority = pahsc->pahsc_AudioPriority;
 
+#ifdef __OpenBSD__
+    if (pthread_setschedparam(pthread_self(), SCHEDULER_POLICY, &schp) != 0)
+#else
     if (sched_setscheduler(0, SCHEDULER_POLICY, &schp) != 0)
+#endif
     {
         DBUG(("PortAudio: only superuser can use real-time priority.\n"));
     }

$OpenBSD$
--- hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp.orig	Fri Aug 20 20:39:45 2004
+++ hotspot/src/share/vm/utilities/globalDefinitions_gcc.hpp	Fri Aug 20 22:57:26 2004
@@ -16,7 +16,9 @@
 #include <stddef.h>
 #include <stdio.h>
 #include <stdlib.h>
+#ifndef __OpenBSD__
 #include <wchar.h>
+#endif
 #ifdef SOLARIS
   #include <ieeefp.h>
 #endif // SOLARIS
@@ -40,7 +42,7 @@
 # include <sys/procfs.h>
 # endif
 
-#if defined(LINUX) || defined(_BSD_SOURCE)
+#if (defined(LINUX) || defined(_BSD_SOURCE)) && !defined(__OpenBSD__)
   #include <inttypes.h>
   #include <signal.h>
   #include <ucontext.h>
@@ -69,7 +71,17 @@ typedef unsigned int		uintptr_t;
 
 #endif // !LINUX && !_BSD_SOURCE
 
+#if defined(__OpenBSD__) && !defined(_INTTYPES_H_)
+#define _INTTYPES_H_
 
+/* Machine type dependent parameters. */
+#include <machine/types.h>
+
+typedef int                    intptr_t;
+typedef unsigned int           uintptr_t;
+
+#endif // OpenBSD && !_INTTYPES_H_
+
 // <sys/trap.h> promises that the system will not use traps 16-31
 #define ST_RESERVED_FOR_USER_0 0x10
 
@@ -169,7 +181,18 @@ inline int g_isfinite(jdouble f)        
 
 // Wide characters
 
+#ifdef __OpenBSD__
+inline int wcslen(const jchar* x) { 
+  short l = 0;
+  while (*x) {
+    l++;
+    x++;
+  }
+  return l;
+}
+#else
 inline int wcslen(const jchar* x) { return wcslen((const wchar_t*)x); }
+#endif
 
 
 // [RGV] Need to check for accurate sizes 

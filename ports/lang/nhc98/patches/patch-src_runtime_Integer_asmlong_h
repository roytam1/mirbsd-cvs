$MirOS$

	This hasn't worked for a couple of gcc versions already,
	as it's invalid input - strings can't span multiple lines
	like this...

--- src/runtime/Integer/asmlong.h.orig	Thu Feb 27 10:19:08 2003
+++ src/runtime/Integer/asmlong.h	Sat Apr 18 20:20:55 2009
@@ -1,13 +1,13 @@
 #if defined (__a29k__) || defined (___AM29K__)
 #define add_ssaaaa(sh, sl, ah, al, bh, bl) \
-  __asm__ ("add %1,%4,%5
-	addc %0,%2,%3"							\
+  __asm__ ("add %1,%4,%5" \
+	"\n\taddc %0,%2,%3"							\
 	 : "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl)) \
 	 : "%r" ((unsigned long int)(ah)), "rI" ((unsigned long int)(bh)), \
 	   "%r" ((unsigned long int)(al)), "rI" ((unsigned long int)(bl)))
 #define sub_ddmmss(sh, sl, ah, al, bh, bl) \
-  __asm__ ("sub %1,%4,%5
-	subc %0,%2,%3"							\
+  __asm__ ("sub %1,%4,%5" \
+	"\n\tsubc %0,%2,%3"							\
 	 : "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl)) \
 	 : "r" ((unsigned long int)(ah)), "rI" ((unsigned long int)(bh)), \
 	   "r" ((unsigned long int)(al)), "rI" ((unsigned long int)(bl)))
@@ -31,14 +31,14 @@
 
 #if defined (__arm__)
 #define add_ssaaaa(sh, sl, ah, al, bh, bl) \
-  __asm__ ("adds %1,%4,%5
-	adc %0,%2,%3"							\
+  __asm__ ("adds %1,%4,%5" \
+	"\n\tadc %0,%2,%3"							\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl)) \
 	: "%r" ((unsigned long int)(ah)), "rI" ((unsigned long int)(bh)), \
 	  "%r" ((unsigned long int)(al)), "rI" ((unsigned long int)(bl)))
 #define sub_ddmmss(sh, sl, ah, al, bh, bl) \
-  __asm__ ("subs %1,%4,%5
-	sbc %0,%2,%3"							\
+  __asm__ ("subs %1,%4,%5" \
+	"\n\tsbc %0,%2,%3"							\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl)) \
 	: "r" ((unsigned long int)(ah)), "rI" ((unsigned long int)(bh)), \
 	  "r" ((unsigned long int)(al)), "rI" ((unsigned long int)(bl)))
@@ -46,14 +46,14 @@
 
 #if defined (__gmicro__)
 #define add_ssaaaa(sh, sl, ah, al, bh, bl) \
-  __asm__ ("add.w %5,%1
-	addx %3,%0"							\
+  __asm__ ("add.w %5,%1" \
+	"\n\taddx %3,%0"							\
        : "=g" ((unsigned long int)(sh)), "=&g" ((unsigned long int)(sl))\
        : "%0" ((unsigned long int)(ah)), "g" ((unsigned long int)(bh)),	\
 	 "%1" ((unsigned long int)(al)), "g" ((unsigned long int)(bl)))
 #define sub_ddmmss(sh, sl, ah, al, bh, bl) \
-  __asm__ ("sub.w %5,%1
-	subx %3,%0"							\
+  __asm__ ("sub.w %5,%1" \
+	"\n\tsubx %3,%0"							\
        : "=g" ((unsigned long int)(sh)), "=&g" ((unsigned long int)(sl))\
        : "0" ((unsigned long int)(ah)), "g" ((unsigned long int)(bh)),	\
 	 "1" ((unsigned long int)(al)), "g" ((unsigned long int)(bl)))
@@ -74,14 +74,14 @@
 
 #if defined (__hppa)
 #define add_ssaaaa(sh, sl, ah, al, bh, bl) \
-  __asm__ ("add %4,%5,%1
-        addc %2,%3,%0"				\
+  __asm__ ("add %4,%5,%1" \
+        "\n\taddc %2,%3,%0"				\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
 	: "%r" ((unsigned long int)(ah)), "r" ((unsigned long int)(bh)),\
 	  "%r" ((unsigned long int)(al)), "r" ((unsigned long int)(bl)))
 #define sub_ddmmss(sh, sl, ah, al, bh, bl) \
-  __asm__ ("sub %5,%4,%1
-        subb %3,%2,%0"				\
+  __asm__ ("sub %5,%4,%1" \
+        "\n\tsubb %3,%2,%0"				\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
 	: "r" ((unsigned long int)(ah)), "r" ((unsigned long int)(bh)),	\
 	  "r" ((unsigned long int)(al)), "r" ((unsigned long int)(bl)))
@@ -89,14 +89,14 @@
 
 #if defined (__i386__) || defined (__i486__)
 #define add_ssaaaa(sh, sl, ah, al, bh, bl) \
-  __asm__ ("addl %5,%1
-	adcl %3,%0"							\
+  __asm__ ("addl %5,%1" \
+	"\n\tadcl %3,%0"							\
        : "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
        : "%0" ((unsigned long int)(ah)), "g" ((unsigned long int)(bh)),	\
 	 "%1" ((unsigned long int)(al)), "g" ((unsigned long int)(bl)))
 #define sub_ddmmss(sh, sl, ah, al, bh, bl) \
-  __asm__ ("subl %5,%1
-	sbbl %3,%0"							\
+  __asm__ ("subl %5,%1" \
+	"\n\tsbbl %3,%0"							\
        : "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
        : "0" ((unsigned long int)(ah)), "g" ((unsigned long int)(bh)),	\
 	 "1" ((unsigned long int)(al)), "g" ((unsigned long int)(bl)))
@@ -157,14 +157,14 @@
 
 #if defined (___IBMR2__) /* IBM RS6000 */
 #define add_ssaaaa(sh, sl, ah, al, bh, bl) \
-  __asm__ ("a %1,%4,%5
-	ae %0,%2,%3"							\
+  __asm__ ("a %1,%4,%5" \
+	"\n\tae %0,%2,%3"							\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
 	: "%r" ((unsigned long int)(ah)), "r" ((unsigned long int)(bh)),\
 	  "%r" ((unsigned long int)(al)), "r" ((unsigned long int)(bl)))
 #define sub_ddmmss(sh, sl, ah, al, bh, bl) \
-  __asm__ ("sf %1,%5,%4
-	sfe %0,%3,%2"							\
+  __asm__ ("sf %1,%5,%4" \
+	"\n\tsfe %0,%3,%2"							\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
 	: "r" ((unsigned long int)(ah)), "r" ((unsigned long int)(bh)),	\
 	  "r" ((unsigned long int)(al)), "r" ((unsigned long int)(bl)))
@@ -288,8 +288,8 @@
 	movew	d2,d0
 	movew	d4,d2
 	movel	d2,%1
-	addl	d1,d0
-	movel	d0,%0"							\
+	addl	d1,d0" \
+	"\n\tmovel	d0,%0"							\
        : "=g" ((unsigned long int)(xh)), "=g" ((unsigned long int)(xl))	\
        :"g" ((unsigned long int)(a)), "g" ((unsigned long int)(b))	\
        : "d0", "d1", "d2", "d3", "d4")
@@ -298,14 +298,14 @@
 
 #if defined (__m88000__)
 #define add_ssaaaa(sh, sl, ah, al, bh, bl) \
-  __asm__ ("addu.co %1,%r4,%r5
-	addu.ci %0,%r2,%r3"						\
+  __asm__ ("addu.co %1,%r4,%r5" \
+	"\n\taddu.ci %0,%r2,%r3"						\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
 	: "%rJ" ((unsigned long int)(ah)), "rJ" ((unsigned long int)(bh)),\
 	  "%rJ" ((unsigned long int)(al)), "rJ" ((unsigned long int)(bl)))
 #define sub_ddmmss(sh, sl, ah, al, bh, bl) \
-  __asm__ ("subu.co %1,%r4,%r5
-	subu.ci %0,%r2,%r3"						\
+  __asm__ ("subu.co %1,%r4,%r5" \
+	"\n\tsubu.ci %0,%r2,%r3"						\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
 	: "rJ" ((unsigned long int)(ah)), "rJ" ((unsigned long int)(bh)),\
 	  "rJ" ((unsigned long int)(al)), "rJ" ((unsigned long int)(bl)))
@@ -323,8 +323,8 @@
 #if defined (__mips__)
 #define umul_ppmm(w1, w0, u, v) \
   __asm__ ("multu %2,%3
-	mflo %0
-	mfhi %1"							\
+	mflo %0" \
+	"\n\tmfhi %1"							\
 	: "=r" ((unsigned long int)(w0)), "=r" ((unsigned long int)(w1))\
 	: "r" ((unsigned long int)(u)), "r" ((unsigned long int)(v)))
 #define UMUL_TIME 5
@@ -341,8 +341,8 @@
   __asm__ ("movd %2,r0
 	movd %3,r1
 	deid %4,r0
-	movd r1,%0
-	movd r0,%1"							\
+	movd r1,%0" \
+	"\n\tmovd r0,%1"							\
 	: "=g" ((unsigned long int)(q)), "=g" ((unsigned long int)(r))	\
 	: "g" ((unsigned long int)(n0)), "g" ((unsigned long int)(n1)),	\
 	  "g" ((unsigned long int)(d)) : "r0", "r1")
@@ -350,14 +350,14 @@
 
 #if defined (__pyr__)
 #define add_ssaaaa(sh, sl, ah, al, bh, bl) \
-  __asm__ ("addw	%5,%1
-	addwc	%3,%0"							\
+  __asm__ ("addw	%5,%1" \
+	"\n\taddwc	%3,%0"							\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
 	: "%0" ((unsigned long int)(ah)), "g" ((unsigned long int)(bh)),\
 	  "%1" ((unsigned long int)(al)), "g" ((unsigned long int)(bl)))
 #define sub_ddmmss(sh, sl, ah, al, bh, bl) \
-  __asm__ ("subw	%5,%1
-	subwb	%3,%0"							\
+  __asm__ ("subw	%5,%1" \
+	"\n\tsubwb	%3,%0"							\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
 	: "0" ((unsigned long int)(ah)), "g" ((unsigned long int)(bh)),	\
 	  "1" ((unsigned long int)(al)), "g" ((unsigned long int)(bl)))
@@ -365,8 +365,8 @@
 #define umul_ppmm(w1, w0, u, v) \
   __asm__ ("movw %2,tr11
 	uemul %3,tr10
-	movw tr10,%0
-	movw tr11,%1"							\
+	movw tr10,%0" \
+	"\n\tmovw tr11,%1"							\
 	: "=r" ((unsigned long int)(w1)), "=r" ((unsigned long int)(w0))\
 	: "r" ((unsigned long int)(u)), "r" ((unsigned long int)(v))	\
 	: "tr10", "tr11")
@@ -374,14 +374,14 @@
 
 #if defined (__ibm032__) /* RT/ROMP */
 #define add_ssaaaa(sh, sl, ah, al, bh, bl) \
-  __asm__ ("a %1,%5
-	ae %0,%3"							\
+  __asm__ ("a %1,%5" \
+	"\n\tae %0,%3"							\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
 	: "%0" ((unsigned long int)(ah)), "r" ((unsigned long int)(bh)),\
 	  "%1" ((unsigned long int)(al)), "r" ((unsigned long int)(bl)))
 #define sub_ddmmss(sh, sl, ah, al, bh, bl) \
-  __asm__ ("s %1,%5
-	se %0,%3"							\
+  __asm__ ("s %1,%5" \
+	"\n\tse %0,%3"							\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
 	: "0" ((unsigned long int)(ah)), "r" ((unsigned long int)(bh)),	\
 	  "1" ((unsigned long int)(al)), "r" ((unsigned long int)(bl)))
@@ -407,8 +407,8 @@
 	m	r2,%3
 	m	r2,%3
 	m	r2,%3
-	cas	%0,r2,r0
-	mfs	r10,%1"							\
+	cas	%0,r2,r0" \
+	"\n\tmfs	r10,%1"							\
        : "=r" ((unsigned long int)(ph)), "=r" ((unsigned long int)(pl))	\
        : "%r" (__m0), "r" (__m1)					\
        : "r2");								\
@@ -433,14 +433,14 @@
 
 #if defined (__sparc__)
 #define add_ssaaaa(sh, sl, ah, al, bh, bl) \
-  __asm__ ("addcc %4,%5,%1
-	addx %2,%3,%0"							\
+  __asm__ ("addcc %4,%5,%1" \
+	"\n\taddx %2,%3,%0"							\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
 	: "%r" ((unsigned long int)(ah)), "rI" ((unsigned long int)(bh)),\
 	  "%r" ((unsigned long int)(al)), "rI" ((unsigned long int)(bl)))
 #define sub_ddmmss(sh, sl, ah, al, bh, bl) \
-  __asm__ ("subcc %4,%5,%1
-	subx %2,%3,%0"							\
+  __asm__ ("subcc %4,%5,%1" \
+	"\n\tsubx %2,%3,%0"							\
 	: "=r" ((unsigned long int)(sh)), "=&r" ((unsigned long int)(sl))\
 	: "r" ((unsigned long int)(ah)), "rI" ((unsigned long int)(bh)),\
 	  "r" ((unsigned long int)(al)), "rI" ((unsigned long int)(bl)))
@@ -496,8 +496,8 @@
 	mulscc	%%g1,%3,%%g1
 	mulscc	%%g1,%3,%%g1
 	mulscc	%%g1,0,%%g1
-	add	%%g1,%%g2,%0
-	rd	%%y,%1"							\
+	add	%%g1,%%g2,%0" \
+	"\n\trd	%%y,%1"							\
 	: "=r" ((unsigned long int)(w1)), "=r" ((unsigned long int)(w0))\
 	: "%rI" ((unsigned long int)(u)), "r" ((unsigned long int)(v))	\
        : "%g1", "%g2")
@@ -527,8 +527,8 @@
 	bne	4b
 	 addcc	%0,%0,%0	! shift n1n0 and a 0-bit in lsb
 	sub	%1,%2,%1
-3:	xnor	%0,0,%0
-	! End of inline udiv_qrnnd"					\
+3:	xnor	%0,0,%0" \
+	"\n\t! End of inline udiv_qrnnd"					\
 	: "=r&" ((unsigned long int)(q)), "=r&" ((unsigned long int)(r))\
 	: "r" ((unsigned long int)(d)), "1" ((unsigned long int)(n1)),	\
 	  "0" ((unsigned long int)(n0)) : "%g1")
@@ -538,14 +538,14 @@
 
 #if defined (__vax__)
 #define add_ssaaaa(sh, sl, ah, al, bh, bl) \
-  __asm__ ("addl2 %5,%1
-	adwc %3,%0"							\
+  __asm__ ("addl2 %5,%1" \
+	"\n\tadwc %3,%0"							\
 	: "=g" ((unsigned long int)(sh)), "=&g" ((unsigned long int)(sl))\
 	: "%0" ((unsigned long int)(ah)), "g" ((unsigned long int)(bh)),\
 	  "%1" ((unsigned long int)(al)), "g" ((unsigned long int)(bl)))
 #define sub_ddmmss(sh, sl, ah, al, bh, bl) \
-  __asm__ ("subl2 %5,%1
-	sbwc %3,%0"							\
+  __asm__ ("subl2 %5,%1" \
+	"\n\tsbwc %3,%0"							\
 	: "=g" ((unsigned long int)(sh)), "=&g" ((unsigned long int)(sl))\
 	: "0" ((unsigned long int)(ah)), "g" ((unsigned long int)(bh)),	\
 	  "1" ((unsigned long int)(al)), "g" ((unsigned long int)(bl)))

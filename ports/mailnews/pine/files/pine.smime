#!@SHELL@
# $MirOS: ports/mailnews/pine/files/pine.smime,v 1.5 2005/12/15 14:24:19 tg Exp $
#-
# Copyright (c) 2003, 2004
#	Thorsten "mirabile" Glaser <tg@mirbsd.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a defect.
#-
# S/MIME support for pine, main module
#
# Documentation:
# Set pine up so it uses this script as its mail submission agent
# (use sendmail-path=@PREFIX@/bin/pine.smime option in .pinerc)
# You can pass additional args to sendmail by setenv SMIMEARGS.
# Start pine via the pine.smime.init script, it will ask you
# for your password you protected your S/MIME key with.
# The key and cert have to reside in ~/.etc/ssh/mime.{key,cer}
# If you want to add e.g. your CA Certificate(s) to the signed
# messages, as other mailers usually do, use ~/.etc/ssh/mime.ca
# Add "X-SMIME: NO" to your pine user-defined headers to ease later use.
#
# To send a signed mail, press ^R (Rich Headers) in Composer and change
# "X-SMIME: No" to a value not containing "NO" or "OPAQ" (case-insensitive).
# If you choose OPAQ, the clear-signing will be deactivated, i.e.
# the message will only be visible to S/MIME capable clients.
#
# If you receive a S/MIME mail, do the following manually, because
# there is no way to automate it in pine:
# press | (PIPE), set to RAW if not yet set (press ^W), set
# the command to the following and execute:
#  openssl smime -verify
# To decrypt an incoming message, you may use
#  openssl smime -decrypt -certfile ~/.etc/ssh/mime.cer -inkey ~/.etc/ssh/mime.key
# Note: "Verification Successful\n" can be anywhere in the viewer body
#  because it is put to stderr and pine is, err, slightly buggy.
#  So you should use the unverified part of the message, or, for opaquely
#  signed messages, s/Verification Successful\n// after saving.
#
# Support for encrypting outgoing messages is not planned until there is
# some way to retrieve information from within this script.
# Probably it could be done by a header.
#
# If something goes wrong, you'll find a file called ~/smime.log


R=$(mktemp /tmp/pine.smime.XXXXXXXXXX) || exit 1
S=$(mktemp /tmp/pine.smime.XXXXXXXXXX) || { rm -f $R; exit 1; }
T=$(mktemp /tmp/pine.smime.XXXXXXXXXX) || { rm -f $R $S; exit 1; }
trap 'rm -f $R $S $T ; exit 0' 0
trap 'rm -f $R $S $T ; exit 1' 1 2 3 5 13 15

MACH="$(uname -mslrM)" || MACH="$(uname -mslr)" || MACH="$(uname -msr)"

echo "Received: by S/MIME Plugin for ${MACH}; $(date)" >$R
cat >$S
ed -s $S <<-EOF
	1,/^$/-1W $R
	1,/^$/d
	wq
EOF

grep -Ei '(^Content-)|(^MIME)' $R >$T || \
	echo 'Content-Type: text/plain; charset=iso-8859-1' >$T

echo "" >>$T
cat $S >>$T
Q=NO
QP=""
grep -i '^X-SMIME:' $R >$S && Q=OK
grep -i OPAQ $S >/dev/null && QP="-nodetach"
grep -i NO $S >/dev/null && Q=NO
grep -Eiv '(^Content-)|(^MIME)|(^X-SMIME:)' $R >$S

cat $T >$R
[[ -n $SMIMEPWD ]] && QP="$QP -passin file:$SMIMEPWD"
if [[ $Q = OK && -e ~/.etc/ssh/mime.key ]]; then
	openssl smime -sign -rc2-128 -signer ~/.etc/ssh/mime.cer -in $T \
	  -certfile ~/.etc/ssh/mime.ca -inkey ~/.etc/ssh/mime.key $QP -out $R \
	  2>~/smime.log || Q=FAILED
	[[ $Q = FAILED ]] || rm -f ~/smime.log
	echo "X-Autoconverted: to S/MIME-signed  status $Q" >>$S
fi
unset QP
cat $S $R >$T

tr -d '' <$T | sed -e 's,$,,' | sendmail ${SMIMEARGS} -oem -oi -t

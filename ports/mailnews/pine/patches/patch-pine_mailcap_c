$MirOS: ports/mailnews/pine/patches/patch-pine_mailcap_c,v 1.2 2005/05/04 23:37:40 tg Exp $
$OpenBSD: patch-pine_mailcap_c,v 1.3 2003/10/05 21:42:29 jakob Exp $

ATTN: First two hunks must read @ETC@/m*

--- pine/mailcap.c.orig	Wed Nov  3 20:10:38 2004
+++ pine/mailcap.c	Thu Dec 15 14:16:36 2005
@@ -96,11 +96,11 @@ static char rcsid[] = "$Id: mailcap.c 13
 #define MC_PATH_SEPARATOR ':'
 #define	MC_USER_FILE	  NULL
 #define MC_STDPATH         \
-		".mailcap:/etc/mailcap:/usr/etc/mailcap:/usr/local/etc/mailcap"
+		".mailcap:/etc/mailcap:@ETC@/mailcap"
 #define MT_PATH_SEPARATOR ':'
 #define	MT_USER_FILE	  NULL
 #define MT_STDPATH         \
-		".mime.types:/etc/mime.types:/usr/local/lib/mime.types"
+		".mime.types:/etc/mime.types:@ETC@/mime.types"
 #endif /* !DOS */
 
 #ifdef	_WINDOWS
@@ -993,14 +993,18 @@ mc_cmd_bldr(controlstring, type, subtype
 		     * have to put those outside of the single quotes.
 		     * (The parm+1000 nonsense is to protect against
 		     * malicious mail trying to overlow our buffer.)
+		     *
+		     * TCH - Change 2/8/1999
+		     * Also quote the ` slash to prevent execution of arbitrary code
 		     */
 		    for(p = parm; *p && p < parm+1000; p++){
-			if(*p == '\''){
+			if((*p == '\'') || (*p=='`')) {
 			    *to++ = '\'';  /* closing quote */
 			    *to++ = '\\';
-			    *to++ = '\'';  /* below will be opening quote */
-			}
-			*to++ = *p;
+			    *to++ = *p;		/* quoted character */
+			    *to++ = '\'';	/* opening quote */
+			} else
+			    *to++ = *p;
 		    }
 
 		    fs_give((void **) &parm);

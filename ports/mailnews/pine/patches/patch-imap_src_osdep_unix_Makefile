$MirOS: ports/mailnews/pine/patches/patch-imap_src_osdep_unix_Makefile,v 1.2 2005/05/04 23:37:40 tg Exp $
$OpenBSD: patch-src_osdep_unix_Makefile,v 1.5 2003/10/05 22:00:00 jakob Exp $
$OpenBSD: patch-imap_src_osdep_unix_Makefile,v 1.2 2003/10/05 21:42:29 jakob Exp $
--- imap/src/osdep/unix/Makefile.orig	Thu Apr 21 00:48:46 2005
+++ imap/src/osdep/unix/Makefile	Wed May  4 23:28:08 2005
@@ -24,7 +24,8 @@ EXTRAAUTHENTICATORS=
 EXTRADRIVERS=mbox
 PASSWDTYPE=std
 SSLTYPE=nopwd
-IP=4
+#IP=4
+IP=6
 
 
 # The optimization level here for GCC ports is set here for a reason.  It's
@@ -41,8 +42,8 @@ GCCOPTLEVEL= -O2
 
 # Extended flags needed for SSL.  You may need to modify.
 
-SSLDIR=/usr/local/ssl
-SSLCERTS=$(SSLDIR)/certs
+SSLDIR=/usr
+SSLCERTS=/etc/ssl
 SSLKEYS=$(SSLCERTS)
 SSLINCLUDE=$(SSLDIR)/include
 SSLLIB=$(SSLDIR)/lib
@@ -88,7 +89,7 @@ SPOOLDIR=/usr/spool
 MAILSPOOL=$(SPOOLDIR)/mail
 NEWSSPOOL=$(SPOOLDIR)/news
 RSHPATH=/usr/ucb/rsh
-LOCKPGM=/etc/mlock
+LOCKPGM=/usr/local/libexec/mlock
 
 
 # Default formats for creating new mailboxes and for empty mailboxes in the
@@ -107,11 +108,12 @@ LOCKPGM=/etc/mlock
 CREATEPROTO=unixproto
 EMPTYPROTO=unixproto
 
+.SUFFIXES: .o .so
 
 # Commands possibly overriden by the individual port
 
 ARRC=ar rc
-CC=cc
+CC?=cc
 LN=ln -s
 RANLIB=ranlib
 
@@ -129,7 +131,14 @@ BINARIES=osdep.o mail.o misc.o newsrc.o 
  dummy.o pseudo.o netmsg.o flstring.o fdstring.o \
  rfc822.o nntp.o smtp.o imap4r1.o pop3.o \
  unix.o mbx.o mmdf.o tenex.o mtx.o news.o phile.o mh.o mx.o
+SOBINARIES=$(BINARIES:.o=.so)
 CFLAGS=-g
+.if !defined(NO_SHARED_LIBS) || ${NO_SHARED_LIBS:L} != "yes"
+#SHLIB=libc-client.so.6.0
+.endif
+.if !defined(PICFLAG) || empty(PICFLAG)
+PICFLAG=-fPIC
+.endif
 
 CAT=cat
 MAKE=make
@@ -242,13 +251,13 @@ bsi:	# BSD/i386
 	 RSHPATH=/usr/bin/rsh \
 	 BASECFLAGS="-g $(GCCOPTLEVEL) -pipe"
 
-bso:	# OpenBSD
+bso:	# OpenBSD / MirOS BSD
 	$(BUILD) `$(CAT) SPECIALS` OS=bsi \
-	 SIGTYPE=psx CRXTYPE=nfs \
+	 SIGTYPE=psx CRXTYPE=nfs CHECKPW=bso \
 	 SPOOLDIR=/var \
 	 ACTIVEFILE=/usr/local/news/lib/active \
 	 RSHPATH=/usr/bin/rsh \
-	 BASECFLAGS="$(GCCOPTLEVEL) -pipe"
+	 BASECFLAGS="$(GCCOPTLEVEL) -pipe -DBSO_AUTH"
 
 cvx:	# Convex
 	$(BUILD) `$(CAT) SPECIALS` OS=$@ \
@@ -801,7 +810,7 @@ vu2:	# VAX Ultrix 2.3, etc.
 
 # Build it!
 
-build:	clean once $(ARCHIVE)
+build:	clean once $(ARCHIVE) $(SHLIB)
 
 all:	$(ARCHIVE)
 
@@ -809,15 +818,26 @@ $(ARCHIVE): $(BINARIES)
 	sh -c '$(RM) $(ARCHIVE) || true'
 	@$(CAT) ARCHIVE
 	@$(SH) ARCHIVE
+	ln -s $(ARCHIVE) lib$(ARCHIVE)
 
+.if defined(SHLIB) && !empty(SHLIB)
+$(SHLIB): $(SOBINARIES)
+	$$($(CAT) CCTYPE) -shared $(PICFLAG) -DPIC -o $(SHLIB) \
+	    $$(lorder $(SOBINARIES)|tsort -q)
+.endif
+
 .c.o:
 	`$(CAT) CCTYPE` -c `$(CAT) CFLAGS` $*.c
 
+.c.so:
+	$$($(CAT) CCTYPE) -c $$($(CAT) CFLAGS) \
+	    $(PICFLAG) -DPIC $(@:.so=.c) -o $@
 
+
 # Cleanup
 
 clean:
-	sh -c '$(RM) auths.c crexcl.c nfstest.c linkage.[ch] siglocal.c osdep*.[ch] *.o ARCHIVE *FLAGS *TYPE $(ARCHIVE) || true'
+	sh -c '$(RM) auths.c crexcl.c nfstest.c linkage.[ch] siglocal.c osdep*.[ch] *.o *.so ARCHIVE *FLAGS *TYPE $(ARCHIVE) || true'
 
 
 # Dependencies
@@ -850,7 +870,7 @@ utf8.o: mail.h misc.h osdep.h utf8.h
 
 # OS-dependent
 
-osdep.o:mail.h misc.h env.h fs.h ftl.h nl.h tcp.h \
+OSDEPS=	mail.h misc.h env.h fs.h ftl.h nl.h tcp.h \
 	osdep.h env_unix.h tcp_unix.h \
 	osdep.c env_unix.c fs_unix.c ftl_unix.c nl_unix.c tcp_unix.c ip_unix.c\
 	auths.c crexcl.c flockcyg.c flocklnx.c flocksim.c nfstest.c fsync.c \
@@ -864,12 +884,18 @@ osdep.o:mail.h misc.h env.h fs.h ftl.h n
 	write.c sslstdio.c \
 	strerror.c strpbrk.c strstr.c strtok.c strtoul.c \
 	OSCFLAGS
+
+osdep.o: $(OSDEPS)
 	@echo Building OS-dependent module
 	@echo If you get No such file error messages for files x509.h, ssl.h,
 	@echo pem.h, buffer.h, bio.h, and crypto.h, that means that OpenSSL
 	@echo is not installed on your system.  Either install OpenSSL first
 	@echo or build with command: make `$(CAT) OSTYPE` SSLTYPE=none
 	`$(CAT) CCTYPE` -c `$(CAT) CFLAGS` `$(CAT) OSCFLAGS` -c osdep.c
+
+osdep.so: $(OSDEPS)
+	$$($(CAT) CCTYPE) -c $$($(CAT) CFLAGS) $$($(CAT) OSCFLAGS) \
+	    $(PICFLAG) -DPIC -c osdep.c -o osdep.so
 
 osdep.c: osdepbas.c osdepckp.c osdeplog.c osdepssl.c
 	$(CAT) osdepbas.c osdepckp.c osdeplog.c osdepssl.c > osdep.c

$MirOS$

	Copyright © 2010
		Thorsten Glaser <tg@mirbsd.org>
	Licenced under the same terms as IPython itself.

	Address an encoding bug, which is a direct result of a
	shortcoming in Python’s reflection apparently, with an
	evil quirk (may or may not fix it in all places needed).

	‣ http://bugs.python.org/issue5911
	‣ http://ipython.scipy.org/ipython/ipython/ticket/148
	‣ http://ipython.scipy.org/ipython/ipython/ticket/239
	‣ http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=409710
	‣ http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=495439
	‣ http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=503300
	‣ https://bugs.launchpad.net/ipython/+bug/290677
	‣ https://bugs.launchpad.net/ipython/+bug/339642
	‣ https://bugs.launchpad.net/bugs/352493
	‣ http://code.google.com/p/django-command-extensions/issues/detail?id=12

--- IPython/iplib.py.orig	Tue Aug  4 23:25:56 2009
+++ IPython/iplib.py	Wed Sep 29 20:08:05 2010
@@ -395,6 +395,9 @@ class InteractiveShell(object,Magic):
                  user_ns=None,user_global_ns=None,banner2='',
                  custom_exceptions=((),None),embedded=False):
 
+        # cache the value of sys.stdin.encoding
+        self.sysstdinencoding = sys.stdin.encoding
+
         # log system
         self.logger = Logger(self,logfname='ipython_log.py',logmode='rotate')
             
@@ -1888,7 +1891,7 @@ class InteractiveShell(object,Magic):
                 self.input_hist_raw.append('%s\n' % line)                
 
         
-        self.more = self.push(lineout)
+        self.more = self.push(lineout, self.sysstdinencoding)
         if (self.SyntaxTB.last_syntax_error and
             self.rc.autoedit_syntax):
             self.edit_syntax_error()
@@ -1995,7 +1998,7 @@ class InteractiveShell(object,Magic):
                 # asynchronously by signal handlers, for example.
                 self.showtraceback()
             else:
-                more = self.push(line)
+                more = self.push(line, self.sysstdinencoding)
                 if (self.SyntaxTB.last_syntax_error and
                     self.rc.autoedit_syntax):
                     self.edit_syntax_error()
@@ -2276,7 +2279,7 @@ class InteractiveShell(object,Magic):
         self.code_to_run = None
         return outflag
         
-    def push(self, line):
+    def push(self, line, use_encoding=None):
         """Push a line to the interpreter.
 
         The line should not have a trailing newline; it may have
@@ -2299,7 +2302,11 @@ class InteractiveShell(object,Magic):
         for subline in line.splitlines():
             self.autoindent_update(subline)
         self.buffer.append(line)
-        more = self.runsource('\n'.join(self.buffer), self.filename)
+        if use_encoding:
+            more = self.runsource('# coding: %s\n%s' % (use_encoding,
+              '\n'.join(self.buffer)), self.filename)
+        else:
+            more = self.runsource('\n'.join(self.buffer), self.filename)
         if not more:
             self.resetbuffer()
         return more

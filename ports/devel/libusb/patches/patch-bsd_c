$MirOS: ports/devel/libusb/patches/patch-bsd_c,v 1.1.7.1 2005/03/18 15:44:55 tg Exp $
$OpenBSD: patch-bsd_c,v 1.5 2003/11/27 04:34:26 pvalchev Exp $
--- bsd.c.orig	Thu Dec 29 21:01:47 2005
+++ bsd.c	Thu Dec 29 21:03:57 2005
@@ -450,6 +450,8 @@ int usb_control_msg(usb_dev_handle *dev,
     fprintf(stderr, "usb_control_msg: %d %d %d %d %p %d %d\n",
             requesttype, request, value, index, bytes, size, timeout);
 
+  memset(&req,0,sizeof(req));
+
   req.ucr_request.bmRequestType = requesttype;
   req.ucr_request.bRequest = request;
   USETW(req.ucr_request.wValue, value);
@@ -457,8 +459,10 @@ int usb_control_msg(usb_dev_handle *dev,
   USETW(req.ucr_request.wLength, size);
 
   req.ucr_data = bytes;
-  req.ucr_flags = 0;
+  req.ucr_flags = USBD_SHORT_XFER_OK;
 
+  if(timeout<0) timeout=0;
+
   ret = ioctl(dev->fd, USB_SET_TIMEOUT, &timeout);
 #if (__NetBSD__ || __OpenBSD__)
   if (ret < 0 && errno != EINVAL)
@@ -469,11 +473,18 @@ int usb_control_msg(usb_dev_handle *dev,
                   strerror(errno));
 
   ret = ioctl(dev->fd, USB_DO_REQUEST, &req);
-  if (ret < 0)
+  if (ret < 0) {
+    int errno2 = errno;
     USB_ERROR_STR(-errno, "error sending control message: %s",
-                  strerror(errno));
+                  strerror(errno2));
+    return -errno2;
+  }
 
-  return UGETW(req.ucr_request.wLength);
+  /* return UGETW(req.ucr_request.wLength); */
+   if(requesttype && USB_ENDPOINT_IN)
+	   return req.ucr_actlen;
+   else
+	   return UGETW(req.ucr_request.wLength);
 }
 
 int usb_os_find_busses(struct usb_bus **busses)

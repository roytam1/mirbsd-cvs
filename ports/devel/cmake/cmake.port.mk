# $MirOS$
# $OpenBSD: cmake.port.mk,v 1.20 2013/06/25 08:34:10 dcoppa Exp $

BUILD_DEPENDS+=		:cmake->=2.8.11:devel/cmake

USE_NINJA?=		No

.if ${USE_NINJA:L} == "yes"
BUILD_DEPENDS+=		:ninja-*:devel/ninja
_MODCMAKE_GEN=		Ninja
NINJA?=			ninja
NINJA_FLAGS?=		-v -j ${MAKE_JOBS}
MODCMAKE_BUILD_TARGET=	cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} \
			${NINJA} ${NINJA_FLAGS} ${ALL_TARGET}
MODCMAKE_INSTALL_TARGET=cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} \
			${FAKE_SETUP} ${NINJA} ${NINJA_FLAGS} ${FAKE_TARGET}
MODCMAKE_TEST_TARGET=	cd ${WRKBUILD} && exec ${SETENV} ${MAKE_ENV} \
			${NINJA} ${NINJA_FLAGS} ${TEST_FLAGS} ${TEST_TARGET}

.if !target(do-build)
do-build:
	@${MODCMAKE_BUILD_TARGET}
.endif

.if !target(do-install)
do-install:
	@${MODCMAKE_INSTALL_TARGET}
.endif

.if !target(do-regress)
do-regress:
	@${MODCMAKE_TEST_TARGET}
.endif

.else
# !ninja

_MODCMAKE_GEN=		"Unix Makefiles"
# XXX cmake include parser is bogus
DPB_PROPERTIES+=	nojunk

# !ninja
.endif

CONFIGURE_ENV+=		MODJAVA_VER=${MODJAVA_VER} \
			MODLUA_VERSION=${MODLUA_VERSION} \
			MODLUA_BIN=${MODLUA_BIN} \
			MODLUA_INCL_DIR=${MODLUA_INCL_DIR} \
			MODPY_VERSION=${MODPY_VERSION} \
			MODPY_BIN=${MODPY_BIN} \
			MODPY_INCDIR=${MODPY_INCDIR} \
			MODPY_LIBDIR=${MODPY_LIBDIR} \
			MODTCL_VERSION=${MODTCL_VERSION} \
			MODTK_VERSION=${MODTK_VERSION} \
			MODTCL_INCDIR=${MODTCL_INCDIR} \
			MODTK_INCDIR=${MODTK_INCDIR} \
			MODTCL_LIBDIR=${MODTCL_LIBDIR} \
			MODTK_LIBDIR=${MODTK_LIBDIR} \
			MODTCL_LIB=${MODTCL_LIB} \
			MODTK_LIB=${MODTK_LIB}

.if empty(CONFIGURE_STYLE)
CONFIGURE_STYLE=	cmake
.endif
MODCMAKE_configure=	cd ${WRKBUILD} && ${_SYSTRACE_CMD} ${SETENV} \
			CC=${CC:Q} CFLAGS=${CFLAGS:Q} \
			CXX=${CXX:Q} CXXFLAGS=${CXXFLAGS:Q} \
			${CONFIGURE_ENV} ${LOCALBASE}/bin/cmake \
			-DCMAKE_SKIP_INSTALL_ALL_DEPENDENCY:Bool=True \
			-DCMAKE_INSTALL_PREFIX=${LOCALBASE:Q} \
			-G ${_MODCMAKE_GEN} ${CONFIGURE_ARGS} ${WRKSRC}

SEPARATE_BUILD?=	Yes

REGRESS_TARGET?=	test

.if ${BULK:L} == "yes"
MODCMAKE_WANTCOLOR?=	No
.endif
MODCMAKE_WANTCOLOR?=	Yes
MODCMAKE_VERBOSE?=	Yes

.if ${MODCMAKE_WANTCOLOR:L} == "yes" && defined(TERM)
MAKE_ENV+=		TERM=${TERM}
.endif

.if ${MODCMAKE_VERBOSE:L} == "yes"
MAKE_ENV+=		VERBOSE=1
.endif

.if !defined(_SYSTRACE_CMD) || empty(_SYSTRACE_CMD)
.  error You will want systrace to be enabled.
.endif

CONFIGURE_ENV+=		LOCALBASE=${LOCALBASE:Q}

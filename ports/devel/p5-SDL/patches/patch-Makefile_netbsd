$MirOS: ports/devel/p5-SDL/patches/patch-Makefile_netbsd,v 1.3 2006/11/03 23:14:15 tg Exp $
--- Makefile.netbsd.orig	Wed Aug 28 01:27:48 2002
+++ Makefile.netbsd	Sat Nov  4 01:20:59 2006
@@ -13,24 +13,23 @@ use vars qw/ $sdl_cflags $sdl_libs @dirs
 # Configuration detection of NetBSD Unix
 #
 
-chomp ($sdl_cflags = "-I/usr/X11R6/include " . `sdl-config --cflags`);
+chomp ($sdl_cflags = `sdl-config --cflags`);
 chomp ($sdl_libs = `sdl-config --libs`);
-$sdl_libs =~ s/-Wl,-rpath,(\/usr\/pkg)*\/lib//g;	# -rpath is obsolete, 
-							# use -R instead
 
 #
 # Search paths
 #
 
 @dirs=(
-	'/usr/pkg/include',
-	'/usr/pkg/include/SDL', 
-	'/usr/pkg/include/smpeg',
+	'/usr/include',
+	$ENV{'PREFIX'} . '/include',
+	$ENV{'PREFIX'} . '/include/SDL', 
+	$ENV{'PREFIX'} . '/include/smpeg',
 	'/usr/X11R6/include',
 	'/usr/X11R6/include/GL', 
 );
 
-$inc_flags = $ENV{'DEBUG'} . ' ' . $ENV{'CFLAGS'};
+$inc_flags = $ENV{'DEBUG'} . ' ' . $ENV{'CPPFLAGS'};
 
 #
 # Registed extensions
@@ -65,8 +64,12 @@ sub found_mod {
 	printf "%-24s%s\n", "Found $_[0]",  ( $_[1] ? "yes" : "no" );
 }
 
+my $ext_libs = '';
 for $e ( sort keys %ext ) {
 	found_mod ($e,$ext{$e}{exists});
+	if ($ext{$e}{exists}) {
+		$ext_libs .= " " . `x=/usr/lib/lib${e}.la; [ -e \$x ] || x=$ENV{'PREFIX'}/lib/lib${e}.la; [ -e \$x ] && ( . \$x; echo " \$dependency_libs " | sed 's! \\([^ ]*.la \\)\\{1,\\}! !g'; )`
+	}
 }
 
 #
@@ -75,7 +78,7 @@ for $e ( sort keys %ext ) {
 
 if  ( $ext{GLU}{exists} ) {
 	print "Detecting GLU Version\n";
-	system ("gcc -o detect detect.c $sdl_cflags -lGLU -lGL $sdl_libs");
+	system ($ENV{'CC'} . " " . $ENV{'CFLAGS'} . " $inc_flags -o detect detect.c $sdl_cflags -lGLU -lGL $sdl_libs");
 	my $version = `./detect` * 10;
 	push @defs, "-DHAVE_GLU_VERSION=$version";
 	system ("rm detect");
@@ -89,7 +92,7 @@ if  ( $ext{GLU}{exists} ) {
 my %options = (
     'NAME'	=> 'SDL_perl',
     'VERSION_FROM' => 'SDL.pm', 
-    'LIBS'	=> [ join( " ",	"$sdl_libs", 
+    'LIBS'	=> [ join( " ",	"$sdl_libs", "$ext_libs",
 			map { $ext{$_}{exists} ? "-l$_" : '' } (sort keys %ext),
 			)
 		],  

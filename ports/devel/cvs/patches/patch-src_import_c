$MirOS: ports/devel/cvs/patches/patch-src_import_c,v 1.2 2007/02/01 23:29:35 tg Exp $
--- src/import.c.orig	Sat Mar 10 23:14:20 2007
+++ src/import.c	Sat Mar 10 23:14:14 2007
@@ -6,13 +6,13 @@
  *
  * Portions Copyright (C) 1992, Brian Berliner and Jeff Polk
  * Portions Copyright (C) 1989-1992, Brian Berliner
- * 
+ *
  * You may distribute under the terms of the GNU General Public License as
  * specified in the README file that comes with the CVS source distribution.
- * 
+ *
  * "import" checks in the vendor release located in the current directory into
  * the CVS source repository.  The CVS vendor branch support is utilized.
- * 
+ *
  * At least three arguments are expected to follow the options:
  *	repository	Where the source belongs relative to the CVSROOT
  *	VendorTag	Vendor's major tag
@@ -25,6 +25,8 @@
 #include "lstat.h"
 #include "save-cwd.h"
 
+__RCSID("$MirOS: src/gnu/usr.bin/cvs/src/import.c,v 1.7 2007/02/01 23:24:27 tg Exp $");
+
 static char *get_comment (const char *user);
 static int add_rev (char *message, RCSNode *rcs, char *vfile,
 			  char *vers);
@@ -238,6 +240,23 @@ import (int argc, char **argv)
 	regfree (&pat);
     }
 
+    /*
+     * If you use even vendor branches, something evil[TM] can happen.
+     */
+    {
+	regex_t pat;
+	assert (!regcomp (&pat, "^[1-9][0-9]*\\.[1-9][0-9]*\\.[0-9]*[13579]$",
+			  REG_EXTENDED));
+	if (regexec (&pat, vbranch, 0, NULL, 0))
+	{
+	    error (0, 0,
+"warning: you are using an even vendor branch, which can\n"
+"lead to problems: '%s'.  Use for example: '1.1.3' or '1.1.5'.",
+		   vbranch);
+	}
+	regfree (&pat);
+    }
+
     /* Set vhead to the branch's parent.  */
     vhead = xstrdup (vbranch);
     cp = strrchr (vhead, '.');
@@ -311,6 +330,7 @@ import (int argc, char **argv)
 	free (vhead);
 	send_to_server ("import\012", 0);
 	err += get_responses_and_close ();
+	logmsg_cleanup(err);
 	return err;
     }
 #endif
@@ -436,6 +456,7 @@ import (int argc, char **argv)
     free (vbranch);
     free (vhead);
 
+    logmsg_cleanup(err);
     return err;
 }
 
@@ -587,7 +608,7 @@ process_import_file (char *message, char
 	       created in the attic!  */
 	    if (!killnew)
 	        free (attic_name);
-	    else 
+	    else
 	    {
 		free (rcs);
 		rcs = attic_name;
@@ -693,7 +714,7 @@ update_rcs_file (char *message, char *vf
 	 * this revision with the import file; if they match exactly, there
 	 * is no need to install the new import file as a new revision to the
 	 * branch.  Just tag the revision with the new import tags.
-	 * 
+	 *
 	 * This is to try to cut down the number of "C" conflict messages for
 	 * locally modified import source files.
 	 */
@@ -1253,7 +1274,7 @@ add_rcs_file (const char *message, const
 	(void) time (&now);
     ftm = gmtime (&now);
     (void) sprintf (altdate1, DATEFORM,
-		    ftm->tm_year + (ftm->tm_year < 100 ? 0 : 1900),
+		    (long)ftm->tm_year + (ftm->tm_year < 100 ? 0L : 1900L),
 		    ftm->tm_mon + 1, ftm->tm_mday, ftm->tm_hour,
 		    ftm->tm_min, ftm->tm_sec);
     author = getcaller ();
@@ -1693,7 +1714,7 @@ add_log (int ch, char *fname)
  * This is the recursive function that walks the argument directory looking
  * for sub-directories that have CVS administration files in them and updates
  * them recursively.
- * 
+ *
  * Note that we do not follow symbolic links here, which is a feature!
  */
 static int

$MirOS: ports/net/rsync/patches/patch-configure_ac,v 1.1 2012/01/04 23:16:40 tg Exp $
$OpenBSD: patch-configure_sh,v 1.4 2016/01/10 21:36:22 naddy Exp $
--- configure.ac.orig	Mon Dec 21 20:00:23 2015
+++ configure.ac	Tue Apr  4 18:55:59 2017
@@ -5,7 +5,7 @@ AC_INIT([rsync],[3.1.2],[http://rsync.sa
 AC_CONFIG_MACRO_DIR([m4])
 AC_CONFIG_SRCDIR([byteorder.h])
 AC_CONFIG_HEADER(config.h)
-AC_PREREQ([2.69])
+AC_PREREQ([2.61])
 
 AC_SUBST(RSYNC_VERSION, $PACKAGE_VERSION)
 AC_MSG_NOTICE([Configuring rsync $PACKAGE_VERSION])
@@ -161,7 +161,7 @@ if test x"$with_nobody_group" = x; then
     AC_MSG_RESULT($NOBODY_GROUP)
 fi
 
-AC_DEFINE_UNQUOTED(NOBODY_USER, "nobody", [unprivileged user--e.g. nobody])
+AC_DEFINE_UNQUOTED(NOBODY_USER, "_rsync", [unprivileged user--e.g. nobody])
 AC_DEFINE_UNQUOTED(NOBODY_GROUP, "$NOBODY_GROUP", [unprivileged group for unprivileged user])
 
 # arrgh. libc in some old debian version screwed up the largefile
@@ -457,34 +457,8 @@ fi
 
 AC_SEARCH_LIBS(inet_ntop, resolv)
 
-# For OS X, Solaris, HP-UX, etc.: figure out if -liconv is needed.  We'll
-# accept either iconv_open or libiconv_open, since some include files map
-# the former to the latter.
-AC_SEARCH_LIBS(iconv_open, iconv)
-AC_SEARCH_LIBS(libiconv_open, iconv)
+AM_ICONV
 
-AC_MSG_CHECKING([for iconv declaration])
-AC_CACHE_VAL(am_cv_proto_iconv, [
-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#include <stdlib.h>
-#include <iconv.h>
-extern
-#ifdef __cplusplus
-"C"
-#endif
-#if defined(__STDC__) || defined(__cplusplus)
-size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
-#else
-size_t iconv();
-#endif
-]], [[]])],[am_cv_proto_iconv_arg1=""],[am_cv_proto_iconv_arg1="const"])
-      am_cv_proto_iconv="extern size_t iconv (iconv_t cd, $am_cv_proto_iconv_arg1 char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);"])
-    am_cv_proto_iconv=`echo "[$]am_cv_proto_iconv" | tr -s ' ' | sed -e 's/( /(/'`
-AC_MSG_RESULT([$]{ac_t:-
-         }[$]am_cv_proto_iconv)
-AC_DEFINE_UNQUOTED(ICONV_CONST, $am_cv_proto_iconv_arg1,
-		   [Define as const if the declaration of iconv() needs const.])
-
 dnl AC_MSG_NOTICE([Looking in libraries: $LIBS])
 
 AC_REPLACE_FUNCS([inet_ntop inet_pton])
@@ -596,15 +570,10 @@ AC_CHECK_FUNCS(waitpid wait4 getcwd strd
     memmove lchown vsnprintf snprintf vasprintf asprintf setsid strpbrk \
     strlcat strlcpy strtol mallinfo getgroups setgroups geteuid getegid \
     setlocale setmode open64 lseek64 mkstemp64 mtrace va_copy __va_copy \
-    seteuid strerror putenv iconv_open locale_charset nl_langinfo getxattr \
+    seteuid strerror putenv locale_charset nl_langinfo getxattr \
     extattr_get_link sigaction sigprocmask setattrlist getgrouplist \
     initgroups utimensat posix_fallocate attropen setvbuf usleep)
 
-dnl cygwin iconv.h defines iconv_open as libiconv_open
-if test x"$ac_cv_func_iconv_open" != x"yes"; then
-    AC_CHECK_FUNC(libiconv_open, [ac_cv_func_iconv_open=yes; AC_DEFINE(HAVE_ICONV_OPEN, 1)])
-fi
-
 dnl Preallocation stuff (also fallocate, posix_fallocate function tests above):
 
 AC_CACHE_CHECK([for useable fallocate],rsync_cv_have_fallocate,[
@@ -642,6 +611,11 @@ if test $ac_cv_func_getpgrp = yes; then
     AC_FUNC_GETPGRP
 fi
 
+save_LIBS=$LIBS
+LIBS="$LIBICONV $LIBS"
+AC_CHECK_FUNCS([iconv_open])
+LIBS=$save_LIBS
+
 AC_ARG_ENABLE(iconv-open,
     AS_HELP_STRING([--disable-iconv-open],[disable all use of iconv_open() function]),
     [], [enable_iconv_open=$ac_cv_func_iconv_open])
@@ -665,6 +639,21 @@ if test x"$enable_iconv" != x"no"; then
 	AC_DEFINE(UTF8_CHARSET, "UTF-8", [String to pass to iconv() for the UTF-8 charset.])
 fi
 
+if test x"$enable_iconv" != x"no"; then
+	LIBS="$LIBICONV $LIBS"
+
+	# For OS X, Solaris, HP-UX, etc.: figure out if -liconv is needed.  We'll
+	# accept either iconv_open or libiconv_open, since some include files map
+	# the former to the latter.
+	AC_SEARCH_LIBS(iconv_open, iconv)
+	AC_SEARCH_LIBS(libiconv_open, iconv)
+
+	dnl cygwin iconv.h defines iconv_open as libiconv_open
+	if test x"$ac_cv_func_iconv_open" != x"yes"; then
+	    AC_CHECK_FUNC(libiconv_open, [ac_cv_func_iconv_open=yes; AC_DEFINE(HAVE_ICONV_OPEN, 1)])
+	fi
+fi
+
 AC_CACHE_CHECK([whether chown() modifies symlinks],rsync_cv_chown_modifies_symlink,[
   AC_RUN_IFELSE([AC_LANG_SOURCE([[
 #if HAVE_UNISTD_H
@@ -903,7 +892,7 @@ rm -rf conftest*
 cat > conftest.$ac_ext <<EOF
 int main() { return 0; }
 EOF
-${CC-cc} -c -o conftest..o conftest.$ac_ext
+${CC-cc} $CFLAGS $CPPFLAGS -c -o conftest..o conftest.$ac_ext
 if test -f conftest..o; then
     rsync_cv_DASHC_WORKS_WITH_DASHO=yes
 else
@@ -1036,8 +1025,8 @@ else
 	AC_DEFINE(NO_DEVICE_XATTRS, 1, [True if device files do not support xattrs])
 	AC_DEFINE(NO_SPECIAL_XATTRS, 1, [True if special files do not support xattrs])
 	;;
-    freebsd*)
-	AC_MSG_RESULT(Using FreeBSD extattrs)
+    freebsd* | midnightbsd*)
+	AC_MSG_RESULT(Using MidnightBSD extattrs)
 	AC_DEFINE(HAVE_FREEBSD_XATTRS, 1, [True if you have FreeBSD xattrs])
 	AC_DEFINE(SUPPORT_XATTRS, 1)
 	;;

$MirOS: ports/net/djbdns/patches/patch-src_okclient_c,v 1.2 2005/12/14 23:28:35 tg Exp $
--- src/okclient.c.orig	Sun Feb 11 21:11:23 2001
+++ src/okclient.c	Tue Jan 17 21:02:03 2006
@@ -2,24 +2,66 @@
 #include <sys/stat.h>
 #include "str.h"
 #include "ip4.h"
+#ifdef DJB_V6ONLY
+#include "ip6.h"
+#include "byte.h"
+#endif /* DJB_V6ONLY */
 #include "okclient.h"
 
+#ifndef DJB_V6ONLY
 static char fn[3 + IP4_FMT];
+#else
+static char fn[3 + IP6_FMT];
+#endif /* DJB_V6ONLY */
 
+#ifndef DJB_V6ONLY
 int okclient(char ip[4])
+#else
+int okclient(char ip[16])
+#endif /* DJB_V6ONLY */
 {
+  static int init_done = 0;
   struct stat st;
   int i;
+#ifdef DJB_V6ONLY
+  char sep;
+#endif /* DJB_V6ONLY */
 
+  if (!init_done) {
+    if (env_get("OKCLIENT"))
+      init_done = 1;
+    else
+      init_done = 2;
+  }
+  if (init_done == 1)
+    return 1;
+
   fn[0] = 'i';
   fn[1] = 'p';
   fn[2] = '/';
+#ifndef DJB_V6ONLY
   fn[3 + ip4_fmt(fn + 3,ip)] = 0;
+#else
+  if (byte_equal(ip,12,V4mappedprefix)) {
+    fn[3 + ip4_fmt(fn + 3,ip+12)] = 0;
+    sep='.';
+  } else {
+    fn[3 + ip6_fmt(fn + 3,ip)] = 0;
+    sep=':';
+  }
+#endif /* DJB_V6ONLY */
 
   for (;;) {
+#ifdef DJB_V6ONLY
+    if (!fn[3]) return 0;
+#endif /* DJB_V6ONLY */
     if (stat(fn,&st) == 0) return 1;
     /* treat temporary error as rejection */
+#ifndef DJB_V6ONLY
     i = str_rchr(fn,'.');
+#else
+    i = str_rchr(fn,sep);
+#endif /* DJB_V6ONLY */
     if (!fn[i]) return 0;
     fn[i] = 0;
   }

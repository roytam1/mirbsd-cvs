$MirOS$
$OpenBSD: patch-snmplib_scapi_c,v 1.1 2002/06/16 20:02:19 pvalchev Exp $
--- snmplib/scapi.c.orig	Mon Oct  1 09:52:27 2001
+++ snmplib/scapi.c	Fri May  2 13:00:52 2008
@@ -56,6 +56,7 @@
 #include <openssl/hmac.h>
 #include <openssl/evp.h>
 #include <openssl/rand.h>
+#include <des.h>
 #endif
 
 #ifdef QUITFUN
@@ -324,6 +325,7 @@ sc_hash(oid *hashtype, size_t hashtypele
 #ifdef USE_OPENSSL 
   EVP_MD *hash(void);
   HMAC_CTX *c = NULL; 
+  unsigned int rMAC_len;
 #endif
 
   DEBUGTRACE;
@@ -351,7 +353,8 @@ sc_hash(oid *hashtype, size_t hashtypele
     return(SNMPERR_GENERR);
   }
   EVP_DigestUpdate(&c->md_ctx, buf, buf_len);
-  EVP_DigestFinal(&(c->md_ctx), MAC, MAC_len);
+  EVP_DigestFinal(&(c->md_ctx), MAC, &rMAC_len);
+  *MAC_len = rMAC_len;
   free(c);
   return (rval);
 #else /* USE_INTERNAL_MD5 */
@@ -593,11 +596,11 @@ sc_encrypt(	oid    *privtype,	size_t pri
 
 		memcpy(my_iv, iv, ivlen);
 		/* encrypt the data */
-		des_ncbc_encrypt(plaintext, ciphertext, plast, key_sch, 
+		des_ncbc_encrypt((des_cblock *)plaintext, (des_cblock *)ciphertext, plast, key_sch, 
 				 (des_cblock *) my_iv, DES_ENCRYPT);
                 if (pad > 0) {
                     /* then encrypt the pad block */
-                    des_ncbc_encrypt(pad_block, ciphertext+plast, pad_size, 
+                    des_ncbc_encrypt((des_cblock *)pad_block, (des_cblock *)(ciphertext+plast), pad_size, 
                                      key_sch, (des_cblock *)my_iv, DES_ENCRYPT);
                     *ctlen = plast + pad_size;
                 } else {
@@ -715,7 +718,7 @@ sc_decrypt(	oid    *privtype,	size_t pri
 		(void) des_key_sched(&key_struct, key_sch);
 	
 		memcpy(my_iv, iv, ivlen);
-		des_cbc_encrypt(ciphertext, plaintext, ctlen, key_sch, 
+		des_cbc_encrypt((des_cblock *)ciphertext, (des_cblock *)plaintext, ctlen, key_sch, 
 				(des_cblock *) my_iv, DES_DECRYPT);
                 *ptlen = ctlen;
 	}

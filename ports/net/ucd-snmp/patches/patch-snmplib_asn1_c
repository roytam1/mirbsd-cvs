$MirOS$
--- snmplib/asn1.c.orig	Mon Jul  1 14:53:26 2002
+++ snmplib/asn1.c	Fri May  2 12:54:24 2008
@@ -83,7 +83,7 @@ void _asn_size_err(const char *str, size
 {
     char ebuf[128];
 
-    sprintf(ebuf,"%s size %d: s/b %d",str, wrongsize, rightsize);
+    sprintf(ebuf,"%s size %zd: s/b %zd",str, wrongsize, rightsize);
     ERROR_MSG(ebuf);
 }
 
@@ -92,7 +92,7 @@ void _asn_length_err(const char *str, si
 {
     char ebuf[128];
 
-    sprintf(ebuf,"%s length %d too large: exceeds %d",str, wrongsize, rightsize);
+    sprintf(ebuf,"%s length %zd too large: exceeds %zd",str, wrongsize, rightsize);
     ERROR_MSG(ebuf);
 }
 
@@ -136,7 +136,7 @@ int _asn_build_header_check(const char *
 	return 1;
     }
     if (datalen < typedlen){
-	sprintf(ebuf, "%s: bad header, length too short: %d < %d", str, datalen, typedlen);
+	sprintf(ebuf, "%s: bad header, length too short: %zd < %zd", str, datalen, typedlen);
 	ERROR_MSG(ebuf);
 	return 1;
     }
@@ -715,7 +715,7 @@ asn_build_header (u_char *data,
     char ebuf[128];
     
     if (*datalength < 1){
-	sprintf(ebuf, "bad header length < 1 :%d, %d", *datalength, length);
+	sprintf(ebuf, "bad header length < 1 :%zd, %zd", *datalength, length);
 	ERROR_MSG(ebuf);
 	return NULL;
     }	    
@@ -799,7 +799,7 @@ asn_parse_length(u_char  *data,
 	    return NULL;
 	}
 	if (lengthbyte > sizeof(long)){
-	    sprintf(ebuf, "%s: data length %d > %d not supported", errpre,
+	    sprintf(ebuf, "%s: data length %d > %zd not supported", errpre,
                  lengthbyte, sizeof(long));
 	    ERROR_MSG(ebuf);
 	    return NULL;
@@ -843,14 +843,14 @@ asn_build_length(u_char *data,
     /* no indefinite lengths sent */
     if (length < 0x80){
 	if (*datalength < 1){
-	    sprintf(ebuf, "%s: bad length < 1 :%d, %d",errpre,*datalength,length);
+	    sprintf(ebuf, "%s: bad length < 1 :%zd, %zd",errpre,*datalength,length);
 	    ERROR_MSG(ebuf);
 	    return NULL;
 	}	    
 	*data++ = (u_char)length;
     } else if (length <= 0xFF){
 	if (*datalength < 2){
-	    sprintf(ebuf, "%s: bad length < 2 :%d, %d",errpre,*datalength,length);
+	    sprintf(ebuf, "%s: bad length < 2 :%zd, %zd",errpre,*datalength,length);
 	    ERROR_MSG(ebuf);
 	    return NULL;
 	}	    
@@ -858,7 +858,7 @@ asn_build_length(u_char *data,
 	*data++ = (u_char)length;
     } else { /* 0xFF < length <= 0xFFFF */
 	if (*datalength < 3){
-	    sprintf(ebuf, "%s: bad length < 3 :%d, %d",errpre,*datalength,length);
+	    sprintf(ebuf, "%s: bad length < 3 :%zd, %zd",errpre,*datalength,length);
 	    ERROR_MSG(ebuf);
 	    return NULL;
 	}	    
@@ -2225,7 +2225,7 @@ asn_rbuild_header (u_char *data,
     
     data = asn_rbuild_length(data, datalength, length);
     if (*datalength < 1 || data == NULL){
-	sprintf(ebuf, "bad header length < 1 :%d, %d", *datalength, length);
+	sprintf(ebuf, "bad header length < 1 :%zd, %zd", *datalength, length);
 	ERROR_MSG(ebuf);
 	return NULL;
     }
@@ -2256,7 +2256,7 @@ asn_rbuild_length (u_char *data,
 
     if (length <= 0x7f) {
         if ((*datalength)-- == 0) {
-	    sprintf(ebuf, "%s: bad length < 1 :%d, %d",errpre,*datalength,length);
+	    sprintf(ebuf, "%s: bad length < 1 :%zd, %zd",errpre,*datalength,length);
 	    ERROR_MSG(ebuf);
             return NULL;
         }
@@ -2264,7 +2264,7 @@ asn_rbuild_length (u_char *data,
     } else {
         while(length > 0xff) {
             if ((*datalength)-- == 0) {
-                sprintf(ebuf, "%s: bad length < 1 :%d, %d",errpre,*datalength,length);
+                sprintf(ebuf, "%s: bad length < 1 :%zd, %zd",errpre,*datalength,length);
                 ERROR_MSG(ebuf);
                 return NULL;
             }
@@ -2272,7 +2272,7 @@ asn_rbuild_length (u_char *data,
             length >>= 8;
         }
         if (*datalength <= 1) {
-            sprintf(ebuf, "%s: bad length < 1 :%d, %d",errpre,*datalength,length);
+            sprintf(ebuf, "%s: bad length < 1 :%zd, %zd",errpre,*datalength,length);
             ERROR_MSG(ebuf);
             return NULL;
         }

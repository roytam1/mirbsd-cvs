$MirOS$

	format_rfc1123_time() uses libc functions, while
	parse_rfc1123_time() uses a private function taken
	from Python and not supporting leap seconds, so this
	test written by <censored /> would otherwise fail

--- src/or/test.c.orig	Fri Nov 30 07:49:26 2007
+++ src/or/test.c	Tue Mar  4 02:20:28 2008
@@ -27,6 +27,10 @@ const char test_c_id[] =
 #include "../common/test.h"
 #include "../common/torgzip.h"
 
+#ifdef HAVE_SYS_TAITIME_H
+#include <sys/taitime.h>
+#endif
+
 int have_failed = 0;
 
 /* These functions are file-local, but are exposed so we can test. */
@@ -583,6 +587,14 @@ _compare_without_first_ch(const void *a,
   return strcasecmp(s1+1, s2);
 }
 
+#ifdef __TAI64_BIAS
+#define OS2UTC(x)	((time_t)tai2utc(timet2tai(x)))
+#define UTC2OS(x)	((time_t)tai2timet(utc2tai(x)))
+#else
+#define OS2UTC(x)	(x)
+#define UTC2OS(x)	(x)
+#endif
+
 static void
 test_util(void)
 {
@@ -622,6 +634,7 @@ test_util(void)
 
   /* The test values here are confirmed to be correct on a platform
    * with a working timegm. */
+  /* Note from MirBSD developers: yeah, sure... *pats head* */
   a_time.tm_year = 2003-1900;
   a_time.tm_mon = 7;
   a_time.tm_mday = 30;
@@ -637,7 +650,7 @@ test_util(void)
 
   format_rfc1123_time(timestr, 0);
   test_streq("Thu, 01 Jan 1970 00:00:00 GMT", timestr);
-  format_rfc1123_time(timestr, (time_t)1091580502UL);
+  format_rfc1123_time(timestr, UTC2OS((time_t)1091580502UL));
   test_streq("Wed, 04 Aug 2004 00:48:22 GMT", timestr);
 
   t_res = 0;

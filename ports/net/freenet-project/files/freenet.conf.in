[Freenet node]
# $MirOS: ports/net/freenet-project/files/freenet.conf.in,v 1.1.7.1 2005/03/18 15:49:24 tg Exp $
#-
# Copyright (c) 2003
#	Thorsten Glaser <tg@mirbsd.de>, for the MirOS Project
#
# Subject to these terms, everybody who obtained a copy of this work
# is hereby permitted to deal in the work without restriction inclu-
# ding without limitation the rights to use, distribute, sell, modi-
# fy, publically perform, give away, merge or sublicense it provided
# this notice is kept and the authors and contributors are given due
# credit in derivates or accompanying documents.
#
# This work is provided "as is" with no explicit or implicit warran-
# ties whatsoever to the maximum extend permitted by applicable law;
# in no event may an author or contributor be held liable for damage
# that is, directly or indirectly, caused by the work, even if advi-
# sed of the possibility of such damage.
#-
# Freenet configuration file (version: 550)


# sed(1) variables (@name@) to replace:
#  NAME      our public IP address or DynDNS name
#  TRANS     am I transient?
#  RANDOM    a random number (FNP port)
#  IP        our local IP address


# The IP address of this node as seen by the public internet.
# This is needed in order for the node to determine its own node
# reference. If you have a dynamic IP address, you may enter a
# host name in this field (assuming you have a dynamic DNS
# service). If this is a transient node, you can leave this
# blank.
ipAddress=@NAME@

# The port to listen for incoming FNP (Freenet Node Protocol)
# connections on.
listenPort=@RANDOM@

# The port to listen for local FCP (Freenet Client Protocol)
# connections on.
#clientPort=8481

# A comma-separated list of hosts that may connect to the FCP
# port (clientPort). If left blank, only the localhost will be
# allowed. If you set this, make sure localhost is included in
# the list or access won't be allowed from the local machine. May
# be given as IP addresses or host names.
fcpHosts=127.0.0.1,localhost,192.168.*

# If this is set then users that can provide the password can can
# have administrative access. It is recommended that you do not
# use this without also using adminPeer below in which case both
# are required.
#adminPassword=null

# If this is set, then users that are authenticated owners of the
# given PK identity can have administrative access. If
# adminPassword is also set both are required.
#adminPeer=null

# Transient nodes do not give out references to themselves, and
# should therefore not receive any requests. Set this to yes if
# you cannot receive incoming connections, or cannot keep the
# computer continuously online.
transient=@TRANS@

# If this is true, the node will automatically announce to all
# nodes in the <seedFile> file, as specified by
# <announcementDelay>, etc.
#doAnnounce=true

# A file containing one or more node references which will be
# incorporated into the node's routing table on startup. A
# reference is only added if there is no previously existing
# reference to that node. When this node announces, it will
# announce to the nodes listed in this file.
seedFile=seednodes.ref

# The directory in which to save diagnostics data. Defaults to
# <storePath>/stats if left blank.
diagnosticsPath=../stats

# Datastore implementation. Put "native" (without the quotes) if
# you want the new native filesystem datastore, which stores the
# files in a directory. Put "convert" to convert from an old
# monolithic store to a native store. Note that convert uses lots
# of disk space while doing the conversion (approximately twice
# the datastore size), and the resulting store may be
# (temporarily) slightly larger than the old one due to block
# size mismatch (this will be fixed as soon as the node tries to
# add a file to the store).
storeType=native

# The path to the file containing the node's private key, DSA
# group, cipher key, etc. Defaults to node_<port> in the current
# directory.
nodeFile=Nkey_@RANDOM@

# The path to the single directory containing the data store. The
# total maximum size of the files in the directory is given by
# <storeSize>. It will create new files in this dir, and DELETE
# OLD ONES.
storeFile=../store

# The byte size of each data store file.  If there is more than
# one file, the total size of the store is the product of the
# number of files and <storeSize>. The maximum sized file that
# will be cached is 1/200th of this value, so we recommend the
# default 256MB, to cache the largest common file size on
# freenet, 1MB plus some headers
storeSize=1073741824

# Size of blocks in the underlying filesystem for purposes of
# calculating space usage when storeType=native.
#storeBlockSize=4096

# The name of a symmetric cipher algorithm to encrypt the
# datastore contents with. Supported algorithms are "Twofish",
# "Rijndael", and "null", "none", or "void" (for no encryption).
storeCipherName=Rijndael

# The width in bits of the cipher key to use for the datastore.
# The allowed values for this will depend on the cipher
# algorithm. Twofish allows 64, 128, 192, or 256, while Rijndael
# allows 128, 192, or 256.
storeCipherWidth=128

# The directory in which to store the routing table files.
# Defaults to parent dir of storeDir
routingDir=../route

# The maximum number of bytes per second to transmit, totaled
# between incoming and outgoing connections. Ignored if either
# inputBandwidthLimit or outputBandwidthLimit is nonzero.
#bandwidthLimit=100000

# If nonzero, specifies an independent limit for incoming data
# only. (overrides bandwidthLimit if nonzero)
#inputBandwidthLimit=0

# If nonzero, specifies an independent limit for outgoing data
# only. (overrides bandwidthLimit if nonzero)
#outputBandwidthLimit=6144

# The maximum number of bytes per second to transmit (averaged
# over a week), totaled between incoming and outgoing
# connections. Error to define it if any of
# (average){input,output}BandwidthLimit is nonzero.
#averageBandwidthLimit=0

# If nonzero, specifies an independent limit for incoming data
# only (averaged over a week). (overrides averageBandwidthLimit
# if nonzero)
#averageInputBandwidthLimit=0

# If nonzero, specifies an independent limit for outgoing data
# only (averaged over a week). (overrides bandwidthLimit if
# nonzero)
#averageOutputBandwidthLimit=0

# The maximum number of incoming and outgoing connections to
# allow at the same time.
#maxNodeConnections=60

# The maximum number of outgoing connections established per
# maxRequestsInterval.
#maxRequestsPerInterval=300

# The length of the period over which there must be at most
# maxRequestsPerInterval connections.
#maxRequestsInterval=60000

# The error reporting threshold, one of:
#   Error:   Errors only
#   Normal:  Report significant events
#   Minor:   Report minor events
#   Debug:   Report events only of relevance when debugging
logLevel=normal

# The name of the log file (`NO' to log to standard out)
logFile=NO

# A template string for log messages.  All non-alphabet characters are
# reproduced verbatim.  Alphabet characters are substituted as follows:
# d = date (timestamp), c = class name of the source object,
# h = hashcode of the object, t = thread name, p = priority,
# m = the actual log message
#logFormat=d (c, t): m

# A template for formatting the timestamp in log messages.
# Defaults to the locale specific fully specified date format.
# The template string is an ordinary Java date/time template -
# see:
# http://java.sun.com/products/jdk/1.1/docs/api/java.text.SimpleDateFormat.html
#logDate=

# The number of references allowed per node in the routing table.
# This should not be set too high.
#rtMaxRefs=50

# The number of unique nodes that can be contained in the routing
# table.
#rtMaxNodes=50

# The maximum number or node refs that will be used to route a
# request before RNFing.
#maxRoutingSteps=40

# The number of outstanding message replies the node will wait
# for before it starts to abandon them.
#messageStoreSize=1000

# The number keys that failed to be retrieved the node should key
# track of.
#failureTableSize=1000

# The amount of time to keep keys cache keys that could not be
# found and automatically fail requests for them.
#failureTableTime=1800000

# The time to wait for connections to be established and
# authenticated before passing by a node while routing out.
# Connections that are by passed are still finished and cached
# for the time set by <connectionTimeout> (in milliseconds).
#routeConnectTimeout=10000

# When forwarding a request, the node will reduce the HTL to this
# value if it is found to be in excess.
#maxHopsToLive=25

# The number of nodes that each announcement message should
# be sent to.
#announcementHTL=15

# The number of attempts to make at announcing this node per
# initial peer. Zero means the node will not announce itself.
#announcementAttempts=3

# The time between polling for 1 hours no incoming requests to
# force reannouncement.
#announcementPollInterval=900000

# If we run out of seed nodes, we can use other nodes from
# therouting table to announce to. However, since the trust
# levelof these nodes is unknown, this is not recommended for
# thetruly paranoid.
#announcementThreads=3

# announce to nodes from routing table?
#announcementUseRT=true

# The number of keys to request from the returned close values
# after an Announcement (this is per announcement made).
#initialRequests=10

# The hops that initial requests should make.
#initialRequestHTL=15

# Whether to emply load balancing algorithms against the network.
#doLoadBalance=true

# set yes to allow permanent nodes with non-internet-resolvable
# addresses. Do not use this except in a local testing network.
#localIsOK=false

# set yes to not bandwidth throttle connections to
# LocalInterfaces i.e. FCP and mainport
#dontLimitClients=false

# URI to mainport servlet, e.g. for SSL tunneling
#mainportURIOverride=

# URI to distribution servlet, e.g. for SSL tunneling
#distributionURIOverride=

# A comma delimited list of services that are run when the node
# starts. If you don't know what this means, just accept the
# defaults.
services=mainport,pubfpx

# The Java class of the distribution servlet. You shouldn't need
# to touch this.
distribution.class=freenet.node.http.DistributionServlet

# The port that the distribution servlet listens for HTTP
# requests on.
distribution.port=8891

# A directory containing (some of) the files needed for the
# Distribution Servlet - for example, a CVS tree, or where the
# UNIX tarball was unpacked.
distribution.params.unpacked=.

# These IP addresses will be allowed to access the distribution
# pages generated by the DistributionServlet. Default * means
# everyone.
distribution.allowedHosts=*

# Directory used by the node to store redistributibles for the
# Distribution Servlet - there is rarely any need to override
# this.
distribution.params.distribDir=

# How long to wait for authentication before giving up (in
# milliseconds)
#authTimeout=30000

# How long to listen on an inactive connection before closing (if
# reply address is known)
#connectionTimeout=600000

# The expected time it takes a Freenet node to pass a message.
# Used to calculate timeout values for requests.
#hopTimeExpected=4000

# The expected standard deviation in hopTimeExpected.
#hopTimeDeviation=7000

# Should we use thread management?  If this number is defined and
# non-zero, this specifies the max number of threads in the pool.
# If this is overrun connections will be rejected and events
# won't execute on time.
#maximumThreads=120

# If true, above 3000ms ticker delay requests will be rejected,
# above 1000ms, requests except those in the datastore will be
# rejected, and above 500ms, requests except those in the most
# successful keyspace segment will be rejected.
#doRequestTriageByDelay=true

# The node will start to selectively reject requests above this
# load level.
overloadLow=0.87

# The node will reject all QueryRequests above this load level.
overloadHigh=0.92

# The node will reject nearly all incoming queries when
# routingTime is over this value.
#requestDelayCutoff=1000

# The node will reject ALL incoming queries above this routingTime.
#successfulDelayCutoff=3000

# What size should the blocks have when moving data?
#blockSize=4096

# The default size of stream buffers.
#streamBufferSize=16384

# The maximum number of bytes of padding to allow between
# messages and in Void messages.
#maximumPadding=65536

# Set true to enable inbound contact monitoring.
#logInboundContacts=false

# Set true to enable outbound contact monitoring.
#logOutboundContacts=false

# Set true to enable per host inbound request monitoring.
#logInboundRequests=false

# Set true to enable per host outbound request monitoring.
#logOutboundRequests=false

# Set true to.count TCP bytes sent for diagnostics
#logOutputBytes=false

# Set true to enable logging of inbound InsertRequest key distribution.
#logInboundInsertRequestDist=false

# Debugging only, setting this to true will remove your anonymity!
#watchme=false

# Number of times watchMe will attempt to initialize
#watchmeRetries=3

# Set true to enable logging of successful inbound
# InsertRequests' key distribution.
#logSuccessfulInsertRequestDist=false

# defaultResetProbability: undocumented.
#defaultResetProbability=0.05

# Dir. used for FEC temp files. You don't need to set this.
#FECTempDir=

# Number of FEC instances to cache. Set to 1 unless you expect
# more than one simultaneous FEC operation.
#FECInstanceCacheSize=1

# Default FEC encoder implementation.
#FEC.Encoders.0.class=OnionFECEncoder

# Default FEC decoder implementation.
#FEC.Decoders.0.class=OnionFECDecoder

# The directory used for temporary files. Used currently by
# fproxy and the FCP FEC mechanism, if their individual temp dirs
# are not set. If this is left unset, it will create a tempdir in
# the datastore (if the datastore is native).
#tempDir=

# Disables anonymity threatening servlets and infolets
#publicNode=false

# fproxy II for public access
pubfpx.allowedHosts=*
pubfpx.bindAddress=@IP@
pubfpx.class=freenet.client.http.FproxyServlet
pubfpx.filter=true
pubfpx.method=GET
pubfpx.name=Public Fproxy
pubfpx.passThroughMimeTypes=text/plain,image/jpeg,image/gif,image/png
pubfpx.port=8888
pubfpx.uri=/

$MirOS$
--- configure.ac.orig	2004-07-05 09:36:08.000000000 +0000
+++ configure.ac	2004-07-05 18:48:42.000000000 +0000
@@ -472,6 +472,11 @@ dnl #
 dnl # Thanks go to Evolution for the checks.
 dnl #######################################################################
 
+AC_ARG_ENABLE(openssl,
+	[  --enable-openssl=[yes,no]    Attempt to use OpenSSL for SSL support (preferred) [default=yes]],
+	[enable_openssl="$enableval"],
+	[enable_openssl="yes"])
+
 dnl These two are inverses of each other <-- stolen from evolution!
 
 AC_ARG_ENABLE(gnutls,
@@ -486,6 +491,88 @@ AC_ARG_ENABLE(nss,
 
 msg_ssl="None"
 
+dnl OpenSSL checks
+if test "x$enable_openssl" != "xno"; then
+	enable_openssl="no"
+	prefix=`eval echo $prefix`
+
+	AC_ARG_WITH(openssl-includes,
+		[  --with-openssl-includes=PREFIX   Location of OpenSSL includes.],
+		[ with_openssl_includes="$withval" ],
+		[ with_openssl_includes="$prefix/include" ])
+
+	have_openssl_includes="no"
+
+	if test "x$with_openssl_includes" != "xno"; then
+		CPPFLAGS_save="$CPPFLAGS"
+
+		AC_MSG_CHECKING(for OpenSSL includes)
+		AC_MSG_RESULT("")
+
+		CPPFLAGS="$CPPFLAGS -I$with_openssl_includes"
+		AC_CHECK_HEADERS(openssl/ssl.h, [ openssl_includes="yes" ])
+		CPPFLAGS="$CPPFLAGS_save"
+
+		if test "x$openssl_includes" != "xno" -a \
+		        "x$openssl_includes" != "x"; then
+			have_openssl_includes="yes"
+
+			OPENSSL_CFLAGS="-I$with_openssl_includes"
+		else
+			OPENSSL_CFLAGS=""
+		fi
+	else
+		AC_MSG_CHECKING(for OPENSSL includes)
+		AC_MSG_RESULT(no)
+	fi
+
+	AC_ARG_WITH(openssl-libs,
+		[  --with-openssl-libs=PREFIX       Location of OpenSSL libraries.],
+		[ with_openssl_libs="$withval" ])
+
+	if test "x$with_openssl_libs"     != "xno" -a \
+	        "x$have_openssl_includes" != "xno"; then
+
+		LDFLAGS_save="$LDFLAGS"
+
+		case $with_openssl_libs in
+			""|-L*) ;;
+			*) with_openssl_libs="-L$with_openssl_libs" ;;
+		esac
+
+		AC_CACHE_CHECK([for OpenSSL libraries], openssl_libs,
+		[
+			LDFLAGS="$LDFLAGS $with_openssl_libs -lssl -lcrypto"
+			AC_TRY_LINK_FUNC(SSL_library_init, openssl_libs="yes", openssl_libs="no")
+			LDFLAGS="$LDFLAGS_save"
+		])
+
+		if test "x$openssl_libs" != "xno"; then
+			AC_DEFINE(HAVE_OPENSSL, 1, [Define if you have OpenSSL])
+			AC_DEFINE(HAVE_SSL)
+			msg_openssl="OpenSSL"
+			OPENSSL_LIBS="$with_openssl_libs -lssl -lcrypto"
+
+			enable_openssl="yes"
+		else
+			OPENSSL_CFLAGS=""
+			OPENSSL_LIBS=""
+		fi
+	else
+		AC_MSG_CHECKING(for OpenSSL libraries)
+		AC_MSG_RESULT(no)
+	fi
+else
+	OPENSSL_CFLAGS=""
+	OPENSSL_LIBS=""
+fi
+
+AC_SUBST(OPENSSL_CFLAGS)
+AC_SUBST(OPENSSL_LIBS)
+
+AM_CONDITIONAL(USE_OPENSSL, test "x$enable_openssl" = "xyes")
+
+
 dnl #
 dnl # Check for GNUTLS if it's specified.
 dnl #
@@ -821,12 +908,20 @@ fi
 
 AM_CONDITIONAL(USE_NSS, test "x$enable_nss" = "xyes")
 
-if test "x$msg_nss" != "x" -a "x$msg_gnutls" != "x"; then
+if test "x$msg_nss" != "x" -a "x$msg_gnutls" != "x" -a "x$msg_openssl" != "x"; then
+	msg_ssl="$msg_nss, $msg_gnutls, and $msg_openssl"
+elif test "x$msg_nss" != "x" -a "x$msg_gnutls" != "x"; then
 	msg_ssl="$msg_nss and $msg_gnutls"
+elif test "x$msg_nss" != "x" -a "x$msg_openssl" != "x"; then
+	msg_ssl="$msg_nss and $msg_openssl"
+elif test "x$msg_gnutls" != "x" -a "x$msg_openssl" != "x"; then
+	msg_ssl="$msg_gnutls and $msg_openssl"
 elif test "x$msg_nss" != "x"; then
 	msg_ssl=$msg_nss
 elif test "x$msg_gnutls" != "x"; then
 	msg_ssl=$msg_gnutls
+elif test "x$msg_openssl" != "x"; then
+	msg_ssl=$msg_openssl
 fi
 
 dnl Check for Tcl

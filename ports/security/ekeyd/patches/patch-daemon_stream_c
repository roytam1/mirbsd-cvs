$MirOS$
--- daemon/stream.c.orig	Mon Sep 21 11:21:06 2009
+++ daemon/stream.c	Sat Nov 14 21:48:09 2009
@@ -39,10 +39,18 @@ estream_state_t *estream_open(const char
     if (S_ISSOCK(sbuf.st_mode)) { 
         /* Open the file as a socket */
         size_t namelen;
+        if ((namelen = strlen(uri) + 1) > sizeof(saddr.sun_path)) {
+            fprintf(stderr, "Device name (%s) too long (%u, max. %u)\n", uri,
+              (unsigned int)namelen, (unsigned int)sizeof(saddr.sun_path));
+            goto connecterror;
+        }
         fd = socket(PF_UNIX, SOCK_STREAM, 0);
         if (fd != -1) {
             saddr.sun_family = AF_UNIX;
-            strcpy(saddr.sun_path, uri);
+            /* this is effectively a strcpy, but strcpy produces warnings
+             * on BSD; the check above validates this operation
+             */
+            memcpy(saddr.sun_path, uri, namelen);
 #ifdef SUN_LEN
             namelen = SUN_LEN(&saddr);
 #else
@@ -51,7 +59,7 @@ estream_state_t *estream_open(const char
             
 #ifdef BSD44SOCKETS
             saddr.sun_len = strlen(uri)
-#ifdef EKEY_OS_OPENBSD
+#if defined(EKEY_OS_OPENBSD) || defined(EKEY_OS_MIRBSD)
               + 1
 #endif
               ;
@@ -59,6 +67,7 @@ estream_state_t *estream_open(const char
             if (connect(fd, (struct sockaddr *)&saddr, namelen) == -1) {
                 perror("connect");
                 close(fd);
+ connecterror:
                 fd = -1;
             }
         }

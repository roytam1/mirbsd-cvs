$MirOS$
--- debugfs/debugfs.c.orig	Sun Feb 13 16:39:51 2005
+++ debugfs/debugfs.c	Sun Feb 13 16:40:15 2005
@@ -193,16 +193,16 @@ static void close_filesystem(NOARGS)
 	if (current_fs->flags & EXT2_FLAG_IB_DIRTY) {
 		retval = ext2fs_write_inode_bitmap(current_fs);
 		if (retval)
-			com_err("ext2fs_write_inode_bitmap", retval, "");
+			com_err("ext2fs_write_inode_bitmap", retval, NULL);
 	}
 	if (current_fs->flags & EXT2_FLAG_BB_DIRTY) {
 		retval = ext2fs_write_block_bitmap(current_fs);
 		if (retval)
-			com_err("ext2fs_write_block_bitmap", retval, "");
+			com_err("ext2fs_write_block_bitmap", retval, NULL);
 	}
 	retval = ext2fs_close(current_fs);
 	if (retval)
-		com_err("ext2fs_close", retval, "");
+		com_err("ext2fs_close", retval, NULL);
 	current_fs = NULL;
 	return;
 }
@@ -546,7 +546,7 @@ void do_chroot(int argc, char *argv[])
 
 	retval = ext2fs_check_directory(current_fs, inode);
 	if (retval)  {
-		com_err(argv[1], retval, "");
+		com_err(argv[1], retval, NULL);
 		return;
 	}
 	root = inode;
@@ -817,7 +817,7 @@ void do_change_working_dir(int argc, cha
 
 	retval = ext2fs_check_directory(current_fs, inode);
 	if (retval) {
-		com_err(argv[1], retval, "");
+		com_err(argv[1], retval, NULL);
 		return;
 	}
 	cwd = inode;
@@ -928,7 +928,7 @@ static void make_link(char *sourcename, 
 	retval = ext2fs_link(current_fs, dir, dest, ino, 
 			     ext2_file_type(inode.i_mode));
 	if (retval)
-		com_err("make_link", retval, "");
+		com_err("make_link", retval, NULL);
 	return;
 }
 
@@ -1011,7 +1011,7 @@ static void unlink_file_by_name(char *fi
 	}
 	retval = ext2fs_unlink(current_fs, dir, basename, 0, 0);
 	if (retval)
-		com_err("unlink_file_by_name", retval, "");
+		com_err("unlink_file_by_name", retval, NULL);
 	return;
 }
 
@@ -1063,7 +1063,7 @@ void do_find_free_block(int argc, char *
 		retval = ext2fs_new_block(current_fs, free_blk + 1, 0,
 					  &free_blk);
 		if (retval) {
-			com_err("ext2fs_new_block", retval, "");
+			com_err("ext2fs_new_block", retval, NULL);
 			return;
 		} else
 			printf("%d ", free_blk);
@@ -1105,7 +1105,7 @@ void do_find_free_inode(int argc, char *
 
 	retval = ext2fs_new_inode(current_fs, dir, mode, 0, &free_inode);
 	if (retval)
-		com_err("ext2fs_new_inode", retval, "");
+		com_err("ext2fs_new_inode", retval, NULL);
 	else
 		printf("Free inode found: %u\n", free_inode);
 }
@@ -1166,11 +1166,11 @@ void do_write(int argc, char *argv[])
 
 	fd = open(argv[1], O_RDONLY);
 	if (fd < 0) {
-		com_err(argv[1], errno, "");
+		com_err(argv[1], errno, NULL);
 		return;
 	}
 	if (fstat(fd, &statbuf) < 0) {
-		com_err(argv[1], errno, "");
+		com_err(argv[1], errno, NULL);
 		close(fd);
 		return;
 	}
@@ -1184,7 +1184,7 @@ void do_write(int argc, char *argv[])
 
 	retval = ext2fs_new_inode(current_fs, cwd, 010755, 0, &newfile);
 	if (retval) {
-		com_err(argv[0], retval, "");
+		com_err(argv[0], retval, NULL);
 		close(fd);
 		return;
 	}
@@ -1201,7 +1201,7 @@ void do_write(int argc, char *argv[])
 				     EXT2_FT_REG_FILE);
 	}
 	if (retval) {
-		com_err(argv[2], retval, "");
+		com_err(argv[2], retval, NULL);
 		close(fd);
 		return;
 	}
@@ -1220,7 +1220,7 @@ void do_write(int argc, char *argv[])
 	if (LINUX_S_ISREG(inode.i_mode)) {
 		retval = copy_file(fd, newfile);
 		if (retval)
-			com_err("copy_file", retval, "");
+			com_err("copy_file", retval, NULL);
 	}
 	close(fd);
 }
@@ -1273,7 +1273,7 @@ void do_mknod(int argc, char *argv[])
 		return;
 	retval = ext2fs_new_inode(current_fs, cwd, 010755, 0, &newfile);
 	if (retval) {
-		com_err(argv[0], retval, "");
+		com_err(argv[0], retval, NULL);
 		return;
 	}
 	printf("Allocated inode: %u\n", newfile);
@@ -1288,7 +1288,7 @@ void do_mknod(int argc, char *argv[])
 				     filetype);
 	}
 	if (retval) {
-		com_err(argv[1], retval, "");
+		com_err(argv[1], retval, NULL);
 		return;
 	}
         if (ext2fs_test_inode_bitmap(current_fs->inode_map,newfile))
@@ -1326,7 +1326,7 @@ void do_mkdir(int argc, char *argv[])
 		*cp = 0;
 		parent = string_to_inode(argv[1]);
 		if (!parent) {
-			com_err(argv[1], ENOENT, "");
+			com_err(argv[1], ENOENT, NULL);
 			return;
 		}
 		name = cp+1;
@@ -1346,7 +1346,7 @@ try_again:
 		goto try_again;
 	}
 	if (retval) {
-		com_err("ext2fs_mkdir", retval, "");
+		com_err("ext2fs_mkdir", retval, NULL);
 		return;
 	}
 
@@ -1532,7 +1532,7 @@ void do_expand_dir(int argc, char *argv[
 
 	retval = ext2fs_expand_dir(current_fs, inode);
 	if (retval)
-		com_err("ext2fs_expand_dir", retval, "");
+		com_err("ext2fs_expand_dir", retval, NULL);
 	return;
 }
 

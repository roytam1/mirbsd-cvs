$MirOS$
--- stage2/boot.c.orig	Tue Mar 30 11:43:46 2004
+++ stage2/boot.c	Mon Feb 14 21:14:14 2005
@@ -95,10 +95,13 @@ load_image (char *kernel, char *arg, ker
      or bzImage.  */
   lh = (struct linux_kernel_header *) buffer;
   
-  /* ELF loading supported if multiboot, FreeBSD and NetBSD.  */
+  /* ELF loading supported if multiboot, FreeBSD, OpenBSD and NetBSD.  */
   if ((type == KERNEL_TYPE_MULTIBOOT
        || pu.elf->e_ident[EI_OSABI] == ELFOSABI_FREEBSD
+       || pu.elf->e_ident[EI_OSABI] == ELFOSABI_OPENBSD
        || grub_strcmp (pu.elf->e_ident + EI_BRAND, "FreeBSD") == 0
+       || suggested_type == 0
+       || suggested_type == KERNEL_TYPE_OPENBSD
        || suggested_type == KERNEL_TYPE_NETBSD)
       && len > sizeof (Elf32_Ehdr)
       && BOOTABLE_I386_ELF ((*((Elf32_Ehdr *) buffer))))
@@ -128,13 +131,19 @@ load_image (char *kernel, char *arg, ker
 	      str2 = "NetBSD";
 	      type = suggested_type;
 	    }
-	  else
+	  else if (suggested_type == KERNEL_TYPE_FREEBSD ||
+              pu.elf->e_ident[EI_OSABI] == ELFOSABI_FREEBSD)
 	    {
 	      str2 = "FreeBSD";
 	      type = KERNEL_TYPE_FREEBSD;
 	    }
+	  else
+	    {
+	      str2 = "OpenBSD/ekkoBSD/MirBSD";
+	      type = KERNEL_TYPE_OPENBSD;
 	}
     }
+    }
   else if (flags & MULTIBOOT_AOUT_KLUDGE)
     {
       pu.mb = (struct multiboot_header *) (buffer + i);
@@ -196,11 +205,11 @@ load_image (char *kernel, char *arg, ker
 	    }
 	  else
 	    {
-	      type = KERNEL_TYPE_NETBSD;
+	      type = KERNEL_TYPE_OPENBSD;
 	      cur_addr = (int) entry_addr & 0xF00000;
 	      if (N_GETMAGIC ((*(pu.aout))) != NMAGIC)
 		align_4k = 0;
-	      str2 = "NetBSD";
+	      str2 = "OpenBSD/ekkoBSD/MirBSD";
 	    }
 	}
 
@@ -607,7 +616,8 @@ load_image (char *kernel, char *arg, ker
 	      grub_seek (phdr->p_offset);
 	      filesiz = phdr->p_filesz;
 	      
-	      if (type == KERNEL_TYPE_FREEBSD || type == KERNEL_TYPE_NETBSD)
+	      if (type == KERNEL_TYPE_FREEBSD || type == KERNEL_TYPE_NETBSD
+              || type == KERNEL_TYPE_OPENBSD)
 		memaddr = RAW_ADDR (phdr->p_paddr & 0xFFFFFF);
 	      else
 		memaddr = RAW_ADDR (phdr->p_paddr);
@@ -1018,3 +1028,10 @@ bsd_boot (kernel_t type, int bootdev, ch
 		     extended_memory, mbi.mem_lower);
     }
 }
+
+#ifdef GRUB_UTIL
+void openbsd_boot (kernel_t type, int bootdev, char *arg)
+ { bsd_boot(type, bootdev, arg);}
+#else
+#include "openbsd.c"
+#endif

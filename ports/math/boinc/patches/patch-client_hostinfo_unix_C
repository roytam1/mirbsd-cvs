$MirOS$
$FreeBSD: ports/net/boinc-client/files/patch-CPUID,v 1.2 2007/12/29 18:08:17 pav Exp $
--- client/hostinfo_unix.C.orig	Thu Jan  1 00:00:00 1970
+++ client/hostinfo_unix.C	Sat Apr  5 23:34:39 2008
@@ -453,6 +453,96 @@ static void parse_cpuinfo_linux(HOST_INF
 }
 #endif  // linux
 
+#if defined(__i386__) || defined(__amd64__)
+#ifdef __FreeBSD__
+#include <sys/types.h>
+#include <sys/cdefs.h>
+#include <machine/cpufunc.h>
+
+void use_cpuid(HOST_INFO& host) {
+	u_int p[4];
+	int hasMMX, hasSSE, hasSSE2, hasSSE3, has3DNow, has3DNowExt = 0;
+	char capabilities[256];
+
+	do_cpuid(0x0, p);
+
+	if (p[0] >= 0x1) {
+
+		do_cpuid(0x1, p);
+
+		hasMMX  = (p[3] & (1 << 23 )) >> 23; // 0x0800000
+		hasSSE  = (p[3] & (1 << 25 )) >> 25; // 0x2000000
+		hasSSE2 = (p[3] & (1 << 26 )) >> 26; // 0x4000000
+		hasSSE3 = (p[2] & (1 << 0 )) >> 0;
+	}
+
+	do_cpuid(0x80000000, p);
+	if (p[0]>=0x80000001) {
+		do_cpuid(0x80000001, p);
+		hasMMX  |= (p[3] & (1 << 23 )) >> 23; // 0x0800000
+		has3DNow    = (p[3] & (1 << 31 )) >> 31; //0x80000000
+		has3DNowExt = (p[3] & (1 << 30 )) >> 30;
+	}
+
+	capabilities[0] = '\0';
+	if (hasSSE) strncat(capabilities, "sse ", 4);
+	if (hasSSE2) strncat(capabilities, "sse2 ", 5);
+	if (hasSSE3) strncat(capabilities, "sse3 ", 5);
+	if (has3DNow) strncat(capabilities, "3dnow ", 6);
+	if (has3DNowExt) strncat(capabilities, "3dnowext ", 9);
+	if (hasMMX) strncat(capabilities, "mmx ", 4);
+	strip_whitespace(capabilities);
+	snprintf(host.p_model, sizeof(host.p_model), "%s [] [%s]", host.p_model, capabilities);
+}
+#endif
+#ifdef __OpenBSD__
+#include <sys/param.h>
+#include <machine/cpu.h>
+#include <machine/specialreg.h>
+
+void
+use_cpuid(HOST_INFO& host)
+{
+#ifndef CPU_CPUFEATURE
+	return;
+#else
+	int mib[2], features;
+	size_t len;
+	char capabilities[32];
+
+	mib[0] = CTL_MACHDEP;
+	mib[1] = CPU_CPUFEATURE;
+	len = sizeof (features);
+	if (sysctl(mib, 2, &features, &len, NULL, 0) == -1)
+		return;
+	capabilities[0] = '\0';
+	if (features & CPUID_SSE)
+		strlcat(capabilities, "sse ", sizeof (capabilities));
+	if (features & CPUID_SSE2)
+		strlcat(capabilities, "sse2 ", sizeof (capabilities));
+	if (features & CPUID_3DNOW)
+		strlcat(capabilities, "3dnow ", sizeof (capabilities));
+	if (features & CPUID_MMX)
+		strlcat(capabilities, "mmx ", sizeof (capabilities));
+	strip_whitespace(capabilities);
+	mib[0] = CTL_MACHDEP;
+	mib[1] = CPU_CPUID;
+	len = sizeof (features);
+	if (sysctl(mib, 2, &features, &len, NULL, 0) == -1)
+		features = 0;
+	if (((features >> 8) & 15) < 4)
+		snprintf(host.p_model, sizeof (host.p_model),
+		    "%s [] [%s]", host.p_model, capabilities);
+	else
+		snprintf(host.p_model, sizeof (host.p_model), 
+		    "%s [Family %d Model %d Stepping %d] [%s]",
+		    host.p_model, (features >> 8) & 15,
+		    (features >> 4) & 15, features & 15, capabilities);
+#endif
+}
+#endif
+#endif
+
 #ifdef __APPLE__
 static void get_cpu_info_maxosx(HOST_INFO& host) {
     int p_model_size = sizeof(host.p_model);
@@ -575,6 +665,12 @@ int HOST_INFO::get_host_info() {
 #error Need to specify a method to get p_vendor, p_model
 #endif
 
+#if defined(__i386__) || defined(__amd64__)
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
+    use_cpuid(*this);
+#endif
+#endif
+
 ///////////// p_ncpus /////////////////
 
 // sysconf not working on OS2
@@ -606,6 +702,13 @@ int HOST_INFO::get_host_info() {
         DosQuerySysInfo( QSV_TOTAVAILMEM, QSV_TOTAVAILMEM, &ulMem, sizeof(ulMem));
         m_swap = ulMem;
     }
+#elif defined(__FreeBSD__) || defined(__OpenBSD__)
+    unsigned int mem_size;
+    mib[0] = CTL_HW;
+    mib[1] = HW_PHYSMEM;
+    len = sizeof(mem_size);
+    sysctl(mib, 2, &mem_size, &len, NULL, 0);
+    m_nbytes = mem_size;
 #elif defined(linux)
     parse_meminfo_linux(*this);
 #elif defined(_SC_USEABLE_MEMORY)
@@ -663,6 +766,7 @@ int HOST_INFO::get_host_info() {
     }
 #elif defined(HAVE_SYS_SWAP_H) && defined(SWAP_NSWAP)
     // NetBSD (the above line should probably be more comprehensive
+    // OpenBSD, MirBSD
     struct swapent * s;
     int i, n;
     n = swapctl(SWAP_NSWAP, NULL, 0);

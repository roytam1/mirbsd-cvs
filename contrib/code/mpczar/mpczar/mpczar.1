.\" $MirOS: contrib/code/mpczar/mpczar/mpczar.1,v 1.12 2008/12/10 18:40:14 tg Exp $
.\"-
.\" Copyright (c) 2005, 2006, 2008
.\"	Thorsten Glaser <tg@mirbsd.de>
.\"
.\" Provided that these terms and disclaimer and all copyright notices
.\" are retained or reproduced in an accompanying document, permission
.\" is granted to deal in this work without restriction, including un-
.\" limited rights to use, publicly perform, distribute, sell, modify,
.\" merge, give away, or sublicence.
.\"
.\" This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
.\" the utmost extent permitted by applicable law, neither express nor
.\" implied; without malicious intent or gross negligence. In no event
.\" may a licensor, author or contributor be held liable for indirect,
.\" direct, other damage, loss, or other issues arising in any way out
.\" of dealing in the work, even if advised of the possibility of such
.\" damage or existence of a defect, except proven that it results out
.\" of said person's immediate fault when using the work as intended.
.\"-
.\" Try to make GNU groff and AT&T nroff more compatible
.\" * ` generates ‘ in gnroff, so use \`
.\" * ' generates ’ in gnroff, \' generates ´, so use \*(aq
.\" * - generates ‐ in gnroff, \- generates −, so .tr it to -
.\"   thus use - for hyphens and \- for minus signs and option dashes
.\" * ~ is size-reduced and placed atop in groff, so use \*(TI
.\" * ^ is size-reduced and placed atop in groff, so use \*(ha
.\" * \(en does not work in nroff, so use \*(en
.\" The section after the "doc" macropackage has been loaded contains
.\" additional code to convene between the UCB mdoc macropackage (and
.\" its variant as BSD mdoc in groff) and the GNU mdoc macropackage.
.\"
.ie \n(.g \{\
.	if \*[.T]ascii .tr \-\N'45'
.	if \*[.T]latin1 .tr \-\N'45'
.	if \*[.T]utf8 .tr \-\N'45'
.	ds <= \[<=]
.	ds >= \[>=]
.	ds Rq \[rq]
.	ds Lq \[lq]
.	ds sL \(aq
.	ds sR \(aq
.	if \*[.T]utf8 .ds sL `
.	if \*[.T]ps .ds sL `
.	if \*[.T]utf8 .ds sR '
.	if \*[.T]ps .ds sR '
.	ds aq \(aq
.	ds TI \(ti
.	ds ha \(ha
.	ds en \(en
.\}
.el \{\
.	ds aq '
.	ds TI ~
.	ds ha ^
.	ds en \(em
.\}
.\"
.\" Implement .Dd with the Mdocdate RCS keyword
.\"
.rn Dd xD
.de Dd
.ie \\$1$Mdocdate: \{\
.	xD \\$2 \\$3, \\$4
.\}
.el .xD \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8
..
.\"
.\" .Dd must come before definition of .Mx, because when called
.\" with -mandoc, it might implement .Mx itself, but we want to
.\" use our own definition. And .Dd must come *first*, always.
.\"
.Dd $Mdocdate: November 17 2009 $
.\"
.\" Check which macro package we use
.\"
.ie \n(.g \{\
.	ie d volume-ds-1 .ds tT gnu
.	el .ds tT bsd
.\}
.el .ds tT ucb
.\"
.\" Implement .Mx (MirBSD)
.\"
.ie "\*(tT"gnu" \{\
.	eo
.	de Mx
.	nr curr-font \n[.f]
.	nr curr-size \n[.ps]
.	ds str-Mx \f[\n[curr-font]]\s[\n[curr-size]u]
.	ds str-Mx1 \*[Tn-font-size]\%MirOS\*[str-Mx]
.	if !\n[arg-limit] \
.	if \n[.$] \{\
.	ds macro-name Mx
.	parse-args \$@
.	\}
.	if (\n[arg-limit] > \n[arg-ptr]) \{\
.	nr arg-ptr +1
.	ie (\n[type\n[arg-ptr]] == 2) \
.	as str-Mx1 \~\*[arg\n[arg-ptr]]
.	el \
.	nr arg-ptr -1
.	\}
.	ds arg\n[arg-ptr] "\*[str-Mx1]
.	nr type\n[arg-ptr] 2
.	ds space\n[arg-ptr] "\*[space]
.	nr num-args (\n[arg-limit] - \n[arg-ptr])
.	nr arg-limit \n[arg-ptr]
.	if \n[num-args] \
.	parse-space-vector
.	print-recursive
..
.	ec
.	ds sP \s0
.	ds tN \*[Tn-font-size]
.\}
.el \{\
.	de Mx
.	nr cF \\n(.f
.	nr cZ \\n(.s
.	ds aa \&\f\\n(cF\s\\n(cZ
.	if \\n(aC==0 \{\
.		ie \\n(.$==0 \&MirOS\\*(aa
.		el .aV \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9
.	\}
.	if \\n(aC>\\n(aP \{\
.		nr aP \\n(aP+1
.		ie \\n(C\\n(aP==2 \{\
.			as b1 \&MirOS\ #\&\\*(A\\n(aP\\*(aa
.			ie \\n(aC>\\n(aP \{\
.				nr aP \\n(aP+1
.				nR
.			\}
.			el .aZ
.		\}
.		el \{\
.			as b1 \&MirOS\\*(aa
.			nR
.		\}
.	\}
..
.\}
.\"-
.Dt MPCZAR 1
.Os MirPorts\ Framework
.Sh NAME
.Nm mpczar
.Nd generate compressed normalised file archive
.Sh SYNOPSIS
.Nm
.Op Fl Cv
.Op Fl o Ar outfile
.Op Fl I Ar ignore ...
.Op Fl r Ar directory ...
.Op Ar
.Sh DESCRIPTION
The
.Nm
.Xr mksh 1
script takes a list of files from the command line,
adds all files found in any
.Ar directory
specified, removes all
.Ar ignore
entries found, sorts the list, creates a
.Xr cpio 1
archive in a normalised
format, compresses them using a helper programme
and writes the file to
.Ar outfile Ns .mcz
(or to standard output).
.Pp
The idea is that the archive generated is the same on
every system if the set of input files is the same, like
a mathematical function.
The input files are sorted, and any file information
about ownership, inodes and modification times is discarded.
.Pp
The options are as follows:
.Bl -tag -width "-r directory"
.It Fl C
Create an old-style portable
.Em cpio
archive instead of an
.Em sv4crc
.Pq default
archive.
Use this option only for distfiles which also must be usable
on systems that do not have MirOS cpio.
.It Fl I Ar ignore
Add
.Ar ignore
to the list of expressions to exclude using
.Xr fgrep 1 .
.It Fl o Ar outfile
Write archive to
.Ar outfile .
.It Fl r Ar directory
Add
.Ar directory
to the list of entries to recursively scan for
files which are candidates for the archive.
.It Fl v
Display a list of files saved to stderr.
.It Ar file
Add
.Ar file
to the archive.
.El
.Sh FILES
.Bl -tag -compact -width /usr/libexec/mpczar.z
.It /usr/libexec/mpczar.z
Compression helper mimicking a small
.Xr compress 1
using
.Xr zopen 3 .
.El
.Sh EXAMPLES
Compress all files of a newly checked-out
.Xr jupp 1
distribution:
.Bd -literal
$ cvs \-qz9 \-d _anoncvs@anoncvs.mirbsd.org:/cvs co \-Prjoe\-3_1jupp10 \-djupp contrib/code/jupp
$ mpczar \-o mksh27 \-I /CVS \-r mksh
.Ed
.Sh DIAGNOSTICS
.Nm
returns 1 if
.Xr cpio 1
failed, 2 if compression failed, and 0 on success.
.Sh SEE ALSO
.Xr compress 1 ,
.Xr cpio 1 ,
.Xr fgrep 1 ,
.Xr uncompress 1 ,
.Xr zcat 1 ,
.Xr zopen 3
.Sh AUTHORS
.Nm
was written by
.An Thorsten Glaser Aq tg@mirbsd.de .
.Sh CAVEATS
File permissions are stored as-is in the archive and not normalised.

#!/bin/mksh
# $MirOS: contrib/code/Snippets/shuffle,v 1.1 2006/11/23 19:46:38 tg Exp $
#-
# Copyright (c) 2006
#	Thorsten "mirabilos" Glaser <tg@mirbsd.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and below disclaimer are retai-
# ned in all redistributions, or reproduced in accompanying documen-
# tation or other materials provided with binary redistributions.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# a licensor, author or contributor be held liable for any indirect,
# direct (unless proven consequence of a direct fault of said person
# and intended use of this work), other damage, loss, or other issu-
# es, arising in any way out of dealing with the work, even if advi-
# sed of the possibility of such damage or existence of a defect.
#-
# Provide shuffled input to mpg123, mplayer, mppdec, and other tools
# that do not properly employ arc4random(3) et al.

function usage
{
	print -u2 "Syntax: $0 program [args ...] -- file ... [ -- args ... ]"
	exit 1
}

[[ -z $1 || $1 = -@(h|H|?) ]] && usage

set -A cmdline
set -A files
set -A postfix

integer state=0
integer nr

# Read in command line arguments
for arg in "$@"; do
	case $state {
	(0)	if [[ $arg = -- ]]; then
			let state++
		elif [[ $arg = --- ]]; then
			cmdline[${#cmdline[*]}]=--
		else
			cmdline[${#cmdline[*]}]=$arg
		fi
		;;
	(1)	if [[ $arg = -- ]]; then
			let state++
		else
			files[${#files[*]}]=$arg
		fi
		;;
	(2)	postfix[${#postfix[*]}]=$arg
		;;
	}
done

(( (${#cmdline[*]} < 1) || (${#files[*]} < 1) )) && usage

# Sort list of files
while (( ${#files[*]} > 0 )); do
	let "nr = (RANDOM << 15 | RANDOM) % ${#files[*]}"
	if [[ -e ${files[nr]} ]]; then
		cmdline[${#cmdline[*]}]=${files[nr]}
	else
		print -u2 "Warning: non-existent '${files[nr]}' skipped"
	fi
	unset files[nr]
	set -A files -- "${files[@]}"
done

# Append post-command arguments, if any
let nr=0
while (( nr < ${#postfix[*]} )); do
	cmdline[${#cmdline[*]}]=${postfix[nr++]}
done

# Run the command
exec "${cmdline[@]}"

#!/bin/mksh
# $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $
#-
# Copyright (c) 2006
#	Thorsten "mirabilos" Glaser <tg@mirbsd.de>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# Provide shuffled input to mpg123, mplayer, mppdec, and other tools
# that do not properly employ arc4random(3) et al.

function usage
{
	print -u2 "Syntax: $0 program [args ...] -- file ... [ -- args ... ]"
	exit 1
}

[[ -z $1 || $1 = -@(h|H|?) ]] && usage

set -A cmdline
set -A files
set -A postfix

integer state=0
integer nr

# Read in command line arguments
for arg in "$@"; do
	case $state {
	(0)	if [[ $arg = -- ]]; then
			let state++
		elif [[ $arg = --- ]]; then
			cmdline[${#cmdline[*]}]=--
		else
			cmdline[${#cmdline[*]}]=$arg
		fi
		;;
	(1)	if [[ $arg = -- ]]; then
			let state++
		else
			files[${#files[*]}]=$arg
		fi
		;;
	(2)	postfix[${#postfix[*]}]=$arg
		;;
	}
done

(( (${#cmdline[*]} < 1) || (${#files[*]} < 1) )) && usage

# Sort list of files
while (( ${#files[*]} > 0 )); do
	let "nr = (RANDOM << 15 | RANDOM) % ${#files[*]}"
	if [[ -e ${files[nr]} ]]; then
		cmdline[${#cmdline[*]}]=${files[nr]}
	else
		print -u2 "Warning: non-existent '${files[nr]}' skipped"
	fi
	unset files[nr]
	set -A files -- "${files[@]}"
done

# Append post-command arguments, if any
let nr=0
while (( nr < ${#postfix[*]} )); do
	cmdline[${#cmdline[*]}]=${postfix[nr++]}
done

# Run the command
exec "${cmdline[@]}"

#!/bin/mksh
# $MirOS: contrib/code/Snippets/eawparse,v 1.5 2017/07/11 13:11:59 tg Exp $
#-
# Copyright © 2013, 2014, 2017
#	mirabilos <m@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un‐
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person’s immediate fault when using the work as intended.
#-
# Parse the Unicode EastAsianWidth.txt and UnicodeData.txt file into
# wcwidth lists. Act more glibc-compatible if -g flag is passed.

[[ $1 != -g ]]; glibc=$?

cwd=$(realpath .)
lpd=$(realpath "$(dirname "$0")")
rpd=$(realpath "$0/..")
function findfile {
	local x

	for x in "$cwd" "$lpd" "$rpd"; do
		REPLY=$(realpath "$x/$1")
		[[ -s $REPLY ]] && return
	done
	print -ru2 Need $1 file.
	exit 1
}

eaw=${|findfile EastAsianWidth.txt;}
ucd=${|findfile UnicodeData.txt;}
cd "$rpd"
rm -f eawparse.*
for x in eawparse.*; do
	[[ -e $x ]] || continue
	print -u2 Cannot delete temporary files.
	exit 1
done

cat >eawparse.hlp.c <<'EOF'
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

uint8_t w[0x110000];

#define Q_N  0	/* Neutral */
#define Q_A  2	/* Ambiguous */
#define Q_H  0	/* Halfwidth */
#define Q_W  1	/* Wide */
#define Q_F  1	/* Fullwidth */
#define Q_Na 0	/* Narrow */
#define QC   3	/* Combining */

int
main(void)
{
	register unsigned int x;
	unsigned int s = 0;

	bzero(w, sizeof(w));
EOF

(( glibc )) || cat >>eawparse.hlp.c <<'EOF'
	/* default CJK/Yi blocks to Wide */
	for (x = 0x2E80; x <= 0xA4CF; ++x)
		w[x] = Q_W;
	for (x = 0xA960; x <= 0xA97F; ++x)
		w[x] = Q_W;
	for (x = 0xFE30; x <= 0xFE6F; ++x)
		w[x] = Q_W;
EOF

sed -n '/^\([0-9A-F]\{4,6\}\)\(\.\.\([0-9A-F]\{4,6\}\)\)\{0,1\};\([NAHWF]a*\).*$/s//\4 \1 \3/p' \
    <"$eaw" | while read type beg end; do
	if [[ -z $end ]]; then
		print "	w[0x$beg] = Q_$type;"
		continue
	fi
	print "	for (x = 0x$beg; x <= 0x$end; ++x)"
	print "		w[x] = Q_$type;"
done >>eawparse.hlp.c

# codepoint name category combining bidi decomp decimal digit numeric mirrored uni1name 10646comment uppermap lowermap titlemap
while IFS=';' read cp name category combining bidi rest; do
	# combining characters are at least one of:
	# - category Mn (Mark, Non-Spacing)
	# - category Me (Mark, Enclosing)
	# - category Cf (Other, Format)
	# - bidi NSM (Nonspacing Mark)
	[[ $category = @(Me|Mn|Cf) || $bidi = NSM ]] || continue
	print "	w[0x$cp] = QC;"
done <"$ucd" >>eawparse.hlp.c

cat >eawparse.out <<'EOF'
struct mb_ucsrange {
	unsigned int beg;
	unsigned int end;
};

EOF

(( glibc )) && cat >>eawparse.out <<'EOF'
/* WARNING: glibc compat mode, do NOT commit to MirBSD! */

EOF

cat >>eawparse.hlp.c <<'EOF'
	/* special rules for combining chars */
	w[0x00AD] = Q_N;
	for (x = 0x1160; x <= 0x11FF; ++x)
		w[x] = QC;
	w[0x200B] = QC;

	/* special rules for wcwidth */
	w[0xFF00] = Q_W;
	/* resolve ambiguous circled numbers */
	for (x = 0x3248; x <= 0x324F; ++x)
		w[x] = Q_W;
	/* resolve neutral hexagrams */
	for (x = 0x4DC0; x <= 0x4DFF; ++x)
		w[x] = Q_W;

#define dorange(label, condenter) do {					\
	enum { out, in } state = out;					\
									\
	printf("static const struct mb_ucsrange %s[] = {\n", label);	\
	for (x = 0; x <= 0x10FFFF; ++x)					\
		if (state == out) {					\
			if (condenter) {				\
				printf("\t{ 0x%04X, ", s = x);		\
				state = in;				\
			}						\
		} else if (condenter) {					\
			s = x;						\
		} else {						\
			printf("0x%04X },\n", s);			\
			state = out;					\
		}							\
	if (state == in)						\
		printf("0x%04X },\n", s);				\
	printf(/*{*/"};\n\n");						\
} while (/* CONSTCOND */ 0)

	dorange("mb_ucs_combining", w[x] == QC);
	dorange("mb_ucs_fullwidth", w[x] == Q_F);
	dorange("mb_ucs_ambiguous", w[x] == Q_A);

	return (0);
}
EOF

if ! make -f /usr/share/mk/bsd.prog.mk PROG=eawparse.hlp eawparse.hlp \
    __CRAZY=Yes; then
	print -u2 Internal error: program failed to compile
	exit 1
fi

./eawparse.hlp >>eawparse.out || exit 1
echo All done!
ls -l eawparse.out

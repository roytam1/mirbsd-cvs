#!/bin/mksh
# $MirOS: contrib/code/Snippets/permute,v 1.1 2006/08/13 01:06:10 tg Exp $
#-
# Copyright (c) 2006
#	Thorsten Glaser <tg@mirbsd.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# Advertising materials mentioning features or use of this work must
# display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a defect.
#-
# Achtung: dieses Skript gibt n! Zeilen (n = $#) aus! (n-Fakultät)

function permute
{
	integer i=0
	integer num

	set -A all $*
	num=${#all[*]}
	if (( num == 2 )); then
		print $1 $2
		print $2 $1
		return 0
	fi
	if (( num == 1 )); then
		print $1
		return 0
	fi
	while (( i < num )); do
		local x= y sp=
		integer j=0
		while (( j < num )); do
			if (( j == i )); then
				y=${all[j]}
			else
				x=$x$sp${all[j]}
				sp=" "
			fi
			let j++
		done
		permute $x | sed "s^$y "
		let i++
	done
}

(( $# > 0 )) || return 0
permute $*

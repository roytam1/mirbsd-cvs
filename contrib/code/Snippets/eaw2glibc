#!/bin/mksh
# $MirOS: src/share/misc/licence.template,v 1.28 2008/11/14 15:33:44 tg Rel $
#-
# Copyright © 2018
#	mirabilos <m@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un‐
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person’s immediate fault when using the work as intended.
#-
# Converts eawparse.out and UnicodeData.txt to UTF-8 in glibc format.

vsn=$(sed -n '1s/^.*Width-\(.*\)\.txt.*$/\1/p' <EastAsianWidth.txt)

exec >UTF-8

# static header
cat <<\EOF
<code_set_name> UTF-8
<comment_char> %
<escape_char> /
<mb_cur_min> 1
<mb_cur_max> 6

% CHARMAP generated using utf8_gen.py
% alias ISO-10646/UTF-8
CHARMAP
EOF

# UCD
typeset -Uui16 -Z7 cdisp
typeset -i16 -Z5 h1 h2 h3 h4
typeset -L11 fa
typeset -L12 fb
function reassemble {
	if (( cdisp < 0x80 )); then
#		(( h = 1 ))
		(( h1 = cdisp ))
		fb=/x${h1#16#}
	elif (( cdisp < 0x800 )); then
#		(( h = 2 ))
		(( h1 = 0xC0 | (cdisp >> 6) ))
		(( h2 = 0x80 | (cdisp & 0x3F) ))
		fb=/x${h1#16#}/x${h2#16#}
	elif (( cdisp < 0x10000 )); then
#		(( h = 3 ))
		(( h1 = 0xE0 | (cdisp >> 12) ))
		(( h2 = 0x80 | ((cdisp >> 6) & 0x3F) ))
		(( h3 = 0x80 | (cdisp & 0x3F) ))
		fb=/x${h1#16#}/x${h2#16#}/x${h3#16#}
	else
#		(( h = 4 ))
		(( h1 = 0xF0 | (cdisp >> 18) ))
		(( h2 = 0x80 | ((cdisp >> 12) & 0x3F) ))
		(( h3 = 0x80 | ((cdisp >> 6) & 0x3F) ))
		(( h4 = 0x80 | (cdisp & 0x3F) ))
		fb=/x${h1#16#}/x${h2#16#}/x${h3#16#}/x${h4#16#}
	fi
	s="<U${cdisp#16#}>"
}
set -A jamo_initial -- G GG N D DD R M B BB S SS '' J JJ C K T P H
set -A jamo_medial -- A AE YA YAE EO E YEO YE O WA WAE OE YO U WEO WE WI YU EU YI I
set -A jamo_final -- '' G GG GS N NI NH D L LG LM LB LS LT LP LH \
    M B BS S SS NG J C K T P H
while IFS=';' read -r code n1 x x x x x x x x n2 x; do
	if [[ $code = 10000 ]]; then
		typeset -Uui16 -Z11 cdisp
		typeset -L16 fb
	fi
	let cdisp=0x$code
	reassemble
	case $n1 {
	('<'*Surrogate*)
		print -nr -- '%'
		;&
	('<control>')
		n1=${n2:-$n1}
		;&
	([!\<]*)
		fa=$s
		print -r -- "$fa $fb $n1"
		continue
		;;
	}
	IFS=';' read -r endcode x
	let endc=0x$endcode
	n1=${n1/, First}
	if [[ $n1 != '<Hangul Syllable>' ]]; then
		while (( cdisp + 0x40 <= endc )); do
			let cdisp+=0x3F
			s+=.."<U${cdisp#16#}>"
			let ++cdisp
			print -r -- "$s $fb $n1"
			reassemble
		done
		let cdisp=endc
		s+=.."<U${cdisp#16#}>"
		print -r -- "$s $fb $n1"
		continue
	fi
	let begc=cdisp
	while :; do
		(( j1 = cdisp - begc ))
		(( j3 = j1 % 28 ))
		(( j1 /= 28 ))
		(( j2 = j1 % 21 ))
		(( j1 /= 21 ))
		n1='HANGUL SYLLABLE '${jamo_initial[j1]}${jamo_medial[j2]}${jamo_final[j3]}
		fa=$s
		print -r -- "$fa $fb $n1"
		(( ++cdisp > endc )) && break
		reassemble
	done
done <UnicodeData.txt

# static intermediate, dynamic version though
cat <<EOF
END CHARMAP

% Character width according to Unicode ${vsn}.
% - Default width is 1.
% - Double-width characters have width 2; generated from
%        "grep '^[^;]*;[WF]' EastAsianWidth.txt"
% - Non-spacing characters have width 0; generated from PropList.txt or
%   "grep '^[^;]*;[^;]*;[^;]*;[^;]*;NSM;' UnicodeData.txt"
% - Format control characters have width 0; generated from
%   "grep '^[^;]*;[^;]*;Cf;' UnicodeData.txt"
WIDTH
EOF

# width data
st=0
while IFS= read -r line; do
	case $st:$line {
	0:*'glibc compat mode, do NOT commit to MirBSD'*)
		st=1 ;;
	1:'static const struct mb_ucsrange mb_ucs_combining'*)
		st=2 ;;
	2:'}'*)
		st=3 ;;
	2:*)
		set -- $line
		typeset -Uui16 -Z11 vb=${2%,} ve=$3
		b="<U${vb#16#}>"
		e="<U${ve#16#}>"
		[[ $b = "$e" ]] || b+="...$e"
		print -r -- "$b	0"
		;;
	3:'static const struct mb_ucsrange mb_ucs_fullwidth'*)
		st=4 ;;
	4:'}'*)
		st=5 ;;
	4:*)
		set -- $line
		typeset -Uui16 -Z11 vb=${2%,} ve=$3
		b="<U${vb#16#}>"
		e="<U${ve#16#}>"
		[[ $b = "$e" ]] || b+="...$e"
		print -r -- "$b	2"
		;;
	}
done <eawparse.out | sort | sed 's/<U0000/<U/g'

print END WIDTH
exec >&2
print -ru2 -- OK

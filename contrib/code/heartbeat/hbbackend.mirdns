#!/bin/ksh
# $MirOS$
#-
# Copyright (c) 2004
#	Thorsten "mirabile" Glaser <tg@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.
#-
# This MirOS hbServer backend operates MirDNS #2 on DJB tinydns.

myuser=
mypass=
mystat=DOWN
mydown=

tinydns=/service/tinymaster/root

function triggerdown
{
	trap 'exit 0' USR1
	sleep 202 & wait %sleep
	s="DISABLE TUNNEL $myuser nothing $(date +%s)"
	sc="$s $mypass"
	sp="$s $(print -nr -- $sc | md5)"
	print -n -- "${sp}\0" | nc -4nuw0 127.0.0.1 3740
	print -r -- timeout, disabling $myuser | logger -t mirdnsd
}

function do_heartbeat
{
	state=$1
	if [[ -n $mydown ]]; then
		kill -USR1 $mydown
		mydown=
	fi
	chstate $state
	triggerdown &
	mydown=$!
	mystat=UP
	do_dnsup &
}

function do_idle
{
	[[ $mystat = UP ]] || exit
	if [[ -n $mydown ]]; then
		kill -USR1 $mydown
		mydown=
	fi
	triggerdown &
	mydown=$!
}

function do_down
{
	if [[ -n $mydown ]]; then
		kill -USR1 $mydown
		mydown=
	fi
	chstate DOWN
	mystat=DOWN
}

function chstate
{
	state=$1
	case $state {
	DOWN)
		dns_write 0.0.0.0
		;;
	IP*)
		dns_write ${state#IP}
		;;
	QUIT)
		# nothing, for now
		;;
	*)
		# invalid state
		;;
	}
}

function dns_write
{
	print $1 >$tinydns/U-$myuser.txt
}

function do_dnsup
{
	ksh $tinydns/make.sh
	ksh $tinydns/distribute.sh &
}

function do_quit
{
	[[ $mystat = UP ]] && do_down
	chstate QUIT
	exit 0
}


while read line; do
	case $line {
	DOWN)
		do_down
		;;
	IDLE)
		do_idle
		;;
	INIT*)
		set -A foo -- $line
		myuser=${foo[1]}
		mypass=${foo[2]}
		;;
	IP*)
		do_heartbeat $line
		;;
	PASS)
		set -A foo -- $line
		mypass=${foo[1]}
		;;
	QUIT)
		do_quit
		;;
	}
done
do_quit

#!/bin/mksh
# $MirOS: contrib/hosted/tg/compfmt,v 1.1 2016/05/05 20:31:41 tg Exp $
#-
# Copyright © 2016
#	mirabilos <m@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un‐
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person’s immediate fault when using the work as intended.
#-
# Pretty-printer for XFree86® Compose files with duplicate check

force=0
while getopts "f" ch; do
	case $ch {
	(f)	force=1 ;;
	(+f)	force=0 ;;
	(*)	print -u2 E: syntax error; exit 1 ;;
	}
done
shift $((OPTIND - 1))

mydir=$(realpath "$0/..")
(( force )) || PATH="$mydir:$PATH" . assockit.ksh

if (( force )); then
	function asso_sets {
		:
	}
	function asso_isset {
		return 1
	}
fi

set -o noglob
set -U

die() {
	print -ru2 -- "E: $*"
	print -ru2 -- "N: line $lno: $line"
	exit 1
}

expand | sed -e 's/   */ /g' -e 's/ $//g' | \
    while IFS= read -r line; do
	let ++lno
	if [[ $line != *' : "'*'" '* ]]; then
		print -r -- "$line"
		continue
	fi
	lhs=${line%% : *}
	rhs=${line#* : ?}
	nwords=0
	outs=
	for word in $lhs; do
		if (( nwords++ )); then
			asso_sets "$lno: $line" b "$outs"
			outs+=' '
		fi
		[[ $word = '<'+([0-9A-Za-z_])'>' ]] || \
		    die word $nwords does not match syntax
		if [[ $word = '<U'+([0-9A-Fa-f])'>' ]]; then
			word=${word%'>'}
			typeset -Uui16 wc=0x${word#'<U'}
			(( wc < 0xFFFE )) && typeset -Uui16 -Z7 wc
			word="<U${wc#16#}>"
		fi
		outs+=$word
		asso_isset w "$outs" && die "words ($outs) already set in" \
		    line "$(asso_getv w "$outs")"
	done
	(( nwords )) || die empty line
	asso_isset b "$outs" && die "words ($outs) already used in" \
	    line "$(asso_getv b "$outs")"
	asso_sets "$lno: $line" w "$outs"
	w=${%outs}
	if (( w == -1 )); then
		die "wcwidth ($outs) is -1"
	elif (( w < 8 )); then
		outs+=$'\t\t\t\t\t'
	elif (( w < 16 )); then
		outs+=$'\t\t\t\t'
	elif (( w < 24 )); then
		outs+=$'\t\t\t'
	elif (( w < 32 )); then
		outs+=$'\t\t'
	else
		outs+=$'\t'
	fi
	outs+=': "'
	inq=0
	while :; do
		[[ -n $rhs ]] || die unexpected end of RHS parsing expansion
		ch=${rhs::1}
		rhs=${rhs:1}
		outs+=$ch
		if (( inq )); then
			inq=0
		elif [[ $ch = \" ]]; then
			break
		elif [[ $ch = \\ ]]; then
			inq=1
		fi
	done
	outs+=$'\t'
	rhs=${rhs# }
	[[ -n $rhs ]] || die unexpected end of RHS parsing name
	if [[ $rhs = *\#* ]]; then
		comm=${rhs#*\#}
		comm=${comm# }
		name=${rhs%%*( )\#*}
	else
		comm=
		name=$rhs
	fi
	[[ $name = *\ * ]] && die "RHS name ($name) contains spaces"
	if [[ $name = U+([0-9A-Fa-f]) ]]; then
		typeset -Uui16 wc=0x${name#U}
		(( wc < 0xFFFE )) && typeset -Uui16 -Z7 wc
		name=U${wc#16#}
	fi
	if [[ -n $name ]]; then
		outs+=$name
		[[ -n $comm ]] && outs+=' # '$comm
	elif [[ -n $comm ]]; then
		outs+='# '$comm
	else
		die neither name nor comment given
	fi
	print -r -- "$outs"
done

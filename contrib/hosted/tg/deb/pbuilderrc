# $MirOS: contrib/hosted/tg/deb/pbuilderrc,v 1.19 2011/10/15 16:20:34 tg Exp $
#-
# Sample ~/.pbuilderrc for multiple architecture, distribution and
# suite support. May work, but may just as well break. Experimental.
#
# Set DIST=lenny-backports-sloppy/i386 CUSTOM=foo for example.
#-
# debian.org: sarge etch lenny squeeze wheezy sid
# debian-ports.org: unstable unreleased
# not supported: experimental
# ubuntu: dapper hardy karmic lucid maverick natty oneiric precise
# *-backports: sarge etch lenny squeeze; all ubuntus
# *-backports-sloppy: lenny
# univention: not supported… yet…
#
# NOTE for sarge: bootstrapping includes sarge-backports for
# the use of cowdancer; you MUST change sources.list in its
# base.cow after creating and before updating!
#
# NOTE for all: run cowbuilder --update after --create once.

# desirable, unless you *want* to run most time-consuming
# testsuites, which usually fail anyway… (yay for optimism)
#export DEB_BUILD_OPTIONS='nobench nocheck'

setuptofail() {
	# this makes cowbuilder succeed and pbuilder fail
	for i in "${BASH_SOURCE[@]}"; do
		case $i in
		*/pbuilder-loadconfig)
			echo >&2 "E: MirDebian pbuilderrc: aborting"
			echo >&2
			exit 1
			;;
		esac
	done
	export BASEPATH=/var/cache/pbuilder/result
}

# known distributions and distribution-specific things (suites, mirrors, …)
DISTROS='debian dpo ubuntu'
DISTS_debian='sarge etch lenny squeeze wheezy sid'
DISTS_dpo='unstable unreleased'
DISTS_ubuntu='dapper hardy karmic lucid maverick natty oneiric precise'
DISTBACKPORTS_debian=sarge:etch:lenny:squeeze
DISTBACKPORTSLOPPY_debian=lenny
DISTBACKPORTUPDATE_ubuntu=dapper:hardy:karmic:lucid:maverick:natty:oneiric:precise
MIRROR_sarge=http://ftp.hosteurope.de/mirror/archive.debian.org/debian/
MIRROR_etch=http://ftp.hosteurope.de/mirror/archive.debian.org/debian/
MIRROR_lenny=http://ftp.hosteurope.de/mirror/ftp.debian.org/debian/
MIRROR_squeeze=http://ftp.hosteurope.de/mirror/ftp.debian.org/debian/
MIRROR_wheezy=http://ftp.hosteurope.de/mirror/ftp.debian.org/debian/
MIRROR_sid=http://ftp.hosteurope.de/mirror/ftp.debian.org/debian/
MIRROR_unstable=http://ftp.debian-ports.org/debian
MIRROR_unreleased=http://ftp.debian-ports.org/debian
MIRROR_dapper=http://old-releases.ubuntu.com/ubuntu/
MIRROR_hardy=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRROR_karmic=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRROR_lucid=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRROR_maverick=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRROR_natty=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRROR_oneiric=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRROR_precise=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRRORSECURITY_sarge=http://ftp.hosteurope.de/mirror/archive.debian.org/debian-security/
MIRRORSECURITY_etch=http://ftp.hosteurope.de/mirror/archive.debian.org/debian-security/
MIRRORSECURITY_lenny=http://ftp.hosteurope.de/mirror/ftp.debian.org/debian-security/
MIRRORSECURITY_squeeze=http://ftp.hosteurope.de/mirror/ftp.debian.org/debian-security/
MIRRORSECURITY_wheezy=http://ftp.hosteurope.de/mirror/ftp.debian.org/debian-security/
MIRRORSECURITY_sid=NO
MIRRORSECURITY_dapper=http://old-releases.ubuntu.com/ubuntu/
MIRRORSECURITY_hardy=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRRORSECURITY_karmic=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRRORSECURITY_lucid=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRRORSECURITY_maverick=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRRORSECURITY_natty=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRRORSECURITY_oneiric=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRRORSECURITY_precise=http://ftp.hosteurope.de/mirror/archive.ubuntu.com/
MIRRORBACKPORTS_sarge=http://ftp.hosteurope.de/mirror/archive.debian.org/debian-backports/
MIRRORBACKPORTS_etch=http://ftp.hosteurope.de/mirror/archive.debian.org/debian-backports/
MIRRORBACKPORTS_lenny=http://ftp.hosteurope.de/mirror/backports.debian.org/
MIRRORBACKPORTS_squeeze=http://ftp.hosteurope.de/mirror/backports.debian.org/
MIRRORBACKPORTSLOPPY_lenny=http://ftp.hosteurope.de/mirror/backports.debian.org/

COMPONENTS_debian=main
COMPONENTS_dpo=main
COMPONENTS_ubuntu='main universe'

# to have a different shell prompt inside the chroot
export debian_chroot="pbuild$$"

# check $DIST for architecture
case $DIST in
*/*)
	build_ARCHITECTURE=$(dpkg --print-architecture)
	host_ARCHITECTURE=$(dpkg-architecture -qDEB_HOST_ARCH \
	    -t$(uname -m)-linux-gnu 2>/dev/null)
	ARCHITECTURE=${DIST##*/}
	DIST=${DIST%/*}
	if test x"$ARCHITECTURE" = x"$(dpkg-architecture -qDEB_HOST_ARCH \
	    -a"$ARCHITECTURE" 2>/dev/null)"; then
		: $ARCHITECTURE is a valid Debian architecture
	else
		echo >&2 "E: Unknown Debian architecture: '$ARCHITECTURE'"
		setuptofail
		return
	fi
	if test x"$ARCHITECTURE" = x"$host_ARCHITECTURE"; then
		: uname values match
	else
		echo >&2 "E: Want $ARCHITECTURE but got $host_ARCHITECTURE"
		echo >&2 "W: Did you forget to prepend linux32 to cowbuilder?"
		setuptofail
		return
	fi
	if test x"$ARCHITECTURE" = x"$build_ARCHITECTURE"; then
		ARCHSUFFIX=
	else
		ARCHSUFFIX=-$ARCHITECTURE
	fi
	;;
*)
	ARCHITECTURE=$(dpkg --print-architecture)
	ARCHSUFFIX=
	;;
esac

# check $DIST for validity and load settings
export DISTRIBUTION=${DIST%%-*}
distfound=0
for distro in $DISTROS; do
	eval dists=\$DISTS_$distro
	for dist in $dists; do
		test x"$DISTRIBUTION" = x"$dist" || continue
		distfound=1
		DISTRO=$distro
		case $DIST in
		($dist)
			isbackports=no
			;;
		($dist-backports)
			case $distro in
			(debian)
				case :$DISTBACKPORTS_debian: in
				(*:$DISTRIBUTION:*)
					isbackports=yes
					;;
				(*)
					distfound=0
					unset DISTRO
					;;
				esac
				;;
			(ubuntu)
				case :$DISTBACKPORTUPDATE_ubuntu: in
				(*:$DISTRIBUTION:*)
					isbackports=ubuntu
					;;
				(*)
					distfound=0
					unset DISTRO
					;;
				esac
				;;
			(*)
				distfound=0
				unset DISTRO
				;;
			esac
			;;
		($dist-backports-sloppy)
			eval x=\$DISTBACKPORTSLOPPY_$distro
			case :$x: in
			(*:$DISTRIBUTION:*)
				isbackports=sloppy
				;;
			(*)
				distfound=0
				unset DISTRO
				;;
			esac
			;;
		(*)
			distfound=0
			unset DISTRO
			;;
		esac
		break
	done
	test $distfound = 0 || break
done
if test $distfound = 0; then
	echo >&2 "E: Unknown distribution/suite \$DIST: '$DIST'"
	setuptofail
	return
fi

case $DISTRO in
(debian|dpo) export APTCACHE=/var/cache/pbuilder/aptcache-debian/ ;;
(*) export APTCACHE=/var/cache/pbuilder/aptcache-$DISTRO/ ;;
esac
export APTCACHEHARDLINK=yes
export ARCHITECTURE ARCH=$ARCHITECTURE
export AUTO_DEBSIGN=no
export BUILDPLACE=/var/cache/pbuilder/build/
export BUILDRESULT=/var/cache/pbuilder/result-$DIST/
export CCACHEDIR=
export BASEPATH=/var/cache/pbuilder/base.cow-$DIST$ARCHSUFFIX${CUSTOM:+-$CUSTOM}/
export BUILDRESULTUID=1006
export BUILDRESULTGID=200
export BUILDSOURCEROOTCMD=fakeroot
export BUILDUSERID=1234
export BUILDUSERNAME=pbuilder
eval COMPONENTS=\$COMPONENTS_$DISTRO; export COMPONENTS
case $DISTRIBUTION in
(sarge|etch)
	export DEBIAN_ETCH_WORKAROUND=1
	;;
esac
export DEBOOTSTRAP=debootstrap
case $DISTRO in
(debian)
	case $DIST:$DISTRIBUTION in
	(squeeze-backports*:*|*:wheezy|*:sid)
		EXTRAPACKAGES='apt debian-archive-keyring eatmydata fakeroot file-rc'
		;;
	(*:sarge)
		EXTRAPACKAGES='apt fakeroot file-rc'
		;;
	(*)
		EXTRAPACKAGES='apt debian-archive-keyring fakeroot file-rc'
		;;
	esac
	x=cowdancer,apt,debian-archive-keyring
	case $DIST in
	(sarge)
		x=apt
		;;
	(sarge-backports)
		x=apt,debian-backports-keyring
		;;
	(etch-backports|lenny-backports|lenny-backports-sloppy)
		EXTRAPACKAGES="$EXTRAPACKAGES debian-backports-keyring"
		x=$x,debian-backports-keyring
		;;
	esac
	case $DISTRIBUTION in
	(sarge|etch)
		keyringfile=debian-archive-removed-keys
		;;
	(*)
		keyringfile=debian-archive-keyring
		;;
	esac
	DEBOOTSTRAPOPTS=(
		--arch=$ARCHITECTURE
		--include=$x,file-rc
		--exclude=sysv-rc,insserv,ubuntu-keyring
		--components=${COMPONENTS// /,}
		--variant=buildd
		--keyring=/usr/share/keyrings/${keyringfile}.gpg
	)
	;;
(dpo)
	EXTRAPACKAGES='apt debian-ports-archive-keyring eatmydata fakeroot file-rc'
	DEBOOTSTRAPOPTS=(
		--arch=$ARCHITECTURE
		--include=cowdancer,apt,debian-ports-archive-keyring,file-rc
		--exclude=sysv-rc,insserv,ubuntu-keyring
		--components=${COMPONENTS// /,}
		--variant=buildd
		--keyring=/usr/share/keyrings/debian-ports-archive-keyring.gpg
	)
	;;
(ubuntu)
	case $DIST:$DISTRIBUTION in
	(maverick-backports:*|*:natty|*:oneiric|*:precise)
		EXTRAPACKAGES='apt ubuntu-keyring eatmydata fakeroot'
		;;
	(*)
		EXTRAPACKAGES='apt ubuntu-keyring fakeroot'
		;;
	esac
	DEBOOTSTRAPOPTS=(
		--arch=$ARCHITECTURE
		--include=cowdancer,pbuilder,apt,ubuntu-keyring
		--exclude=debian-archive-keyring
		--components=${COMPONENTS// /,}
		--variant=buildd
		--keyring=/usr/share/keyrings/ubuntu-archive-keyring.gpg
	)
	;;
(*)
	echo >&2 "E: Internal error, unknown distro \$DISTRO: '$DISTRO'"
	setuptofail
	return
	;;
esac
export DEBOOTSTRAPOPTS EXTRAPACKAGES
export DEBEMAIL='Thorsten Glaser <tg@mirbsd.de>'
export DEBIAN_FRONTEND=noninteractive
eval MIRRORSITE=\$MIRROR_$DISTRIBUTION; export MIRRORSITE
eval x=\$MIRRORSECURITY_$DISTRIBUTION
case x$x:$DISTRO in
(*:dpo)
	: debian-ports has no security support
	;;
(xNO:*)
	: Debian unstable, for example, has no security support
	;;
(x:*)
	: No mirror set, possibly dangerous oversight
	echo >&2 "E: Internal error, distro '$DISTRO' has no security mirror"
	setuptofail
	return
	;;
(*:debian)
	OTHERMIRROR="deb $x $DISTRIBUTION/updates $COMPONENTS"
	;;
(*:ubuntu)
	OTHERMIRROR="deb $x $DISTRIBUTION-security $COMPONENTS"
	;;
esac
case $isbackports:$DIST in
(yes:*|no:sarge)
	eval x=\$MIRRORBACKPORTS_$DISTRIBUTION
	if test x"$x" = x""; then
		echo >&2 "E: Internal error, $DISTRIBUTION-backports mirror not set"
		setuptofail
		return
	fi
	OTHERMIRROR="$OTHERMIRROR|deb $x $DISTRIBUTION-backports $COMPONENTS"
	;;
(no:*)
	;;
(sloppy:*)
	eval x=\$MIRRORBACKPORTS_$DISTRIBUTION
	if test x"$x" = x""; then
		echo >&2 "E: Internal error, $DISTRIBUTION-backports mirror not set"
		setuptofail
		return
	fi
	OTHERMIRROR="$OTHERMIRROR|deb $x $DISTRIBUTION-backports $COMPONENTS"
	eval x=\$MIRRORBACKPORTSLOPPY_$DISTRIBUTION
	if test x"$x" = x""; then
		echo >&2 "E: Internal error, $DISTRIBUTION-backports-sloppy mirror not set"
		setuptofail
		return
	fi
	OTHERMIRROR="$OTHERMIRROR|deb $x $DISTRIBUTION-backports-sloppy $COMPONENTS"
	;;
(ubuntu:*)
	OTHERMIRROR="$OTHERMIRROR|deb $MIRRORSITE $DISTRIBUTION-updates $COMPONENTS"
	OTHERMIRROR="$OTHERMIRROR|deb $MIRRORSITE $DISTRIBUTION-backports $COMPONENTS"
	;;
(*)
	echo >&2 "E: Internal error, \$isbackports '$isbackports' unknown"
	setuptofail
	return
	;;
esac
export OTHERMIRROR
export PDEBUILD_PBUILDER=cowbuilder
export PKGNAME_LOGFILE_EXTENTION=_${ARCHITECTURE}.build
export PKGNAME_LOGFILE=yes
export PBUILDERSATISFYDEPENDSCMD=/usr/lib/pbuilder/pbuilder-satisfydepends
#export PBUILDERSATISFYDEPENDSCMD=/usr/lib/pbuilder/pbuilder-satisfydepends-experimental
#export PBUILDERSATISFYDEPENDSCMD=/usr/lib/pbuilder/pbuilder-satisfydepends-aptitude
#export PBUILDERSATISFYDEPENDSCMD=/usr/lib/pbuilder/pbuilder-satisfydepends-classic
test $DISTRIBUTION = etch && \
    PBUILDERSATISFYDEPENDSCMD=/usr/lib/pbuilder/pbuilder-satisfydepends-classic
PBUILDERSATISFYDEPENDSOPT=(--check-key)
#APTGETOPT=(--force-yes --purge)
APTGETOPT=(--purge)
export REMOVEPACKAGES='grub grub2 grub-pc grub-legacy lilo tasksel'
export USEDEVFS=no
export USEDEVPTS=yes
export USEPROC=yes

case $DISTRIBUTION in
(sarge|etch|lenny|squeeze|dapper|hardy|karmic|lucid|maverick|natty)
	EXTRAPACKAGES="$EXTRAPACKAGES debconf-english"
	;;
(*)
	REMOVEPACKAGES="$REMOVEPACKAGES debconf-i18n"
	;;
esac

unset LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_IDENTIFICATION LC_MONETARY \
    LC_NAME LC_NUMERIC LC_TELEPHONE LC_TIME
unset LANG LC_CTYPE LC_MEASUREMENT LC_MESSAGES LC_PAPER
export LC_ALL=C

#!/bin/ksh
# $MirBSD: src/share/misc/licence.template,v 1.11 2004/05/28 15:34:01 tg Rel $
#-
# Copyright (c) 2004
#	Thorsten "mirabile" Glaser <x86@ePost.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publically perform, modi-
# fy, merge, distribute, sell, give away or sublicence, provided the
# above copyright notices, these terms and the disclaimer are retai-
# ned in all redistributions, or reproduced in accompanying documen-
# tation or other materials provided with binary redistributions.
#
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of covered work, even if advised of the possibility of such damage.
#-
# mass renaming of files


# Setup

usage() {
	print 'Usage: series [-nz] [-u <maxnos>] -s <start> -t <name> <file> ...'
	print '	In filename template, use % character for index.'
	exit 1
}

do_mv=mv
let minimum=1
series=ask
let index=1


# Option Processing

while getopts "hns:t:u:z" option; do
	case $option in
	h)	usage				;;
	n)	do_mv="echo mv"			;;
	s)	if [[ -z $OPTARG ]]; then
			usage
		else
			let index="$OPTARG"
		fi				;;
	t)	series="$OPTARG"		;;
	u)	let maxnos="$OPTARG"		;;
	z)	let minimum=0			;;
	esac
done
shift $((OPTIND - 1))

(( index < minimum )) && usage

while [[ -z $series || $series = ask || $series != *@(%)* ]]; do
	print -n 'Name of series (x to exit)? '
	read series
	[[ $series = x ]] && exit 2
done


# Figure out with how many zeroes to stuff

let number="index + $#"
(( number > maxnos )) || let number=maxnos

let digits=1
(( number > 9 )) && let digits=10
(( number > 99 )) && let digits=100
(( number > 999 )) && let digits=1000


# Do the renaming

for file in "$@"; do
	# Generate stuffed number
	(( index < 1 )) && let i=1 || let i=index
	fnr=$index
	while (( i < digits )); do
		fnr=0$fnr
		let 'i*=10'
	done

	# Generate filename with number in it
	fname="${series%@(%)*}${fnr}${series##*@(%)}"

	# Rename and loop
	$do_mv "$file" "$fname"
	let index+=1
done
exit 0

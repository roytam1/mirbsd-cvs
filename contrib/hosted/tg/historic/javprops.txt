$MirOS$

┌──────────────────────────────────────────┐
│ Documentation of Java™ .properties files │
└──────────────────────────────────────────┘

⇐ java.util.Properties

• whitespace is space, tab, formfeed

• file format based on logical lines
  ‣ ISO-8859-1 encoded
  ‣ any leading unescaped whitespace is stripped
    ⇒ empty lines (just whitespace, CR, LF) are ignored
  ‣ if the first non-whitespace char is an unescaped '#' or '!'
    the entire physical line is a comment and fully ignored
  ‣ if the last char is an unescaped backslash, it as well as
    the line ending (exactly either CR, LF or CR+LF in sequence)
    and any unescaped whitespace (but not CR or LF) are removed
    and the (two or more) physical lines form a logical line

• logical lines consist of key-value pairs

• keys and values are arbitrary Unicode strings separated by any
  unescape whitespace surrounding at most one unescaped separator
  ‣ separator chars are '=' and ':'
  ‣ 'key value' is valid
    ⇒ but if value starts with separator, that must be escaped
  ‣ 'key = value' or ' key:→value' or or or…
    ⇒ the surrounding unescaped whitespace is not part of
      either the key or the value
    ⇒ use '\ key\ =\ value\u0020' to have v[' key ']=' value '
  ‣ escaping rules, mostly implicit from the rest, collected:
    ⇒ whitespace, CR, LF must be escaped at all times in the key;
      CR, LF must be escaped at all times in the value as well
    ⇒ '#', '!' must be escaped as first char of the key
    ⇒ '=', ':' must be escaped anywhere in the key
      and as first char of the value if no separator was used
    ⇒ non-ASCII should be Unicode escaped
    ⇒ trailing spaces should be Unicode escaped, not backslash escaped

• parsing of keys and values follows the same algorithm
  ‣ \u20aC (exactly four nibbles) for Unicode, lowercase 'u'
  ‣ \t \r \n \f (lowercase)
  ‣ everything else just drops the backslash quietly

┌──────────────────────┐
│ Apache Commons rules │
└──────────────────────┘

⇐ org.apache.commons.configuration.PropertiesConfiguration

• values are usually interpreted as a list of tokens, separated
  by a configurable delimiter, defaulting to the comma; the
  delimiter can be backslash-escaped to prevent splitting;
  setting it to 0 in the code disables splitting completely

• list elements are trimmed by C0 control characters and space

• key collisions are handled by appending to the list of tokens
  instead of overwriting previous values
  ⇒ also applies to includes
  ⇒ disabling string splitting has no influence on this

• includes can be allowed, default key for them is “include”
  ⇒ if includes are disallowed, any values for the includes
    key are ignored
  ⇒ includes are processed immediately (for ordering lists)

• \b is parsed

• interpolation of ${othervarname} happens at access time,
  not at parse time; unknown references keep the string
  as-is (do not expand to nothing); “othervarname” may
  be prefixed by a “lookup method” followed by a colon…
  never seen that yet, though

┌─────────────────────────┐
│ What others have to say │
└─────────────────────────┘

• “In Apache Tomcat the exclamation mark denotes a Negation
  operator when used as the first non blank character in a
  line.” (Wikipedia)

┌─────────────────────────────┐
│ .properties files at tarent │
└─────────────────────────────┘

• tbd
  ⇒ resources/lang.properties:label_action_delete_selected = Delete selected
  ⇒ resources/lang_de_DE.properties:label_action_delete_selected = Ausgew&auml;hlte l&ouml;schen
  ⇒ webapp/WEB-INF/jsp/allovertime/view.jsp:<input value="<spring:message code='label_action_delete_selected'/>" … />
  ⇒ resources/applicationContext-web.xml:<value>${activity.ldap.url}</value>

• other than Spring and Liferay, java.util.Properties seems to be used

• Spring appears to mostly use java.util.Properties

┌────────────┐
│ XML format │
└────────────┘

• <!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
	<?xml version="1.0" encoding="UTF-8"?>
	<!-- DTD for properties -->
	<!ELEMENT properties ( comment?, entry* ) >
	<!ATTLIST properties version CDATA #FIXED "1.0">
	<!ELEMENT comment (#PCDATA) >
	<!ELEMENT entry (#PCDATA) >
	<!ATTLIST entry key CDATA #REQUIRED>

• UTF-8 encoding (by default)

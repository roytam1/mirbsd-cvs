rcsid_inc2htm='$MirOS: www/mk/inc2htm,v 1.14 2008/12/04 14:04:43 tg Exp $'
#-
# This file is part of the website of The MirOS Project, which is
# copyrighted material, please read the LICENCE file for details.

integer perpage=12
name=$1

. "$TOP/data/$name.cfg"

#DEPEND mk/parser
. "$TOP"/mk/parser

#DEPEND mk/common
. "$TOP"/mk/common

#DEPEND mk/htsconv
. "$TOP"/mk/htsconv

wd=$(pwd)
cd "$TOP/data"
for x in *.cfg; do
	x=${x%.cfg}
	t=$(grep '^targets=' $x.cfg)
	targets=
	eval $t
	for t in $targets; do
		eval linktarget_$t=$x
	done
done
cd "$wd"

function output {
	integer ent=$1
	eid=$2
	rpath=$3
	efe="${rpath}${ei_srcf[ent]}_${eid}.htm#$eid"
	title="${e_date[ent]}${e_author[ent]+ by }${e_author[ent]}"
	subtitle=
	if [[ ${e_language[ent]} = +([A-Za-z0-9-]) ]]; then
		xmllang=" xml:lang=\"${e_language[ent]}\""
	else
		xmllang=
	fi
	print "<div class=\"wlentry\"$xmllang>"
	if [[ -n ${e_title[ent]} ]]; then
		subtitle='<p class="wlsubtitle">'"${title}</p>$nl"
		title="${e_title[ent]}"
	fi
	if [[ -n ${e_tag[ent]} ]]; then
		subtitle=$subtitle'<p class="wltagtitle">Tags:'
		for x in ${e_tag[ent]}; do
			eval t=\$linktarget_$x
			[[ -z $t ]] || x="<a href=\"@@RELPATH@@$t.htm\">$x</a>"
			subtitle="$subtitle $x"
		done
		subtitle="$subtitle</p>$nl"
	fi
	cat <<-EOF
		<div class="wltitle">
		<h2 class="wlentry" id="${e_id[ent]}"><a href="${efe}">${title}</a></h2>
		${subtitle}</div>
		${ei_body[ent]/'<!-- RSS stop -->'}
		</div>
	EOF
}

function mopen {
	integer number=$1
	if (( number == 1 )); then
		fn=$name.htm
	else
		fn=${name}_${number}.htm
	fi
	print -r -- "$fn"
	mws_setname $whoami "$pname – Page $number"
	mws_subdir 0
	mws_putheader >$fn~
	cat >>$fn~ <<-EOF
		<h1>${ptitle}</h1>
		<p>${plinks}
	EOF
}

function mclose {
	mws_putfooter >>$1~
	mws_moveifchange $1~ $1
}


#rm -f ${name}.{cut,htm} ${name}_*.htm permalinks/${name}_*.htm
(( cutoff )) && cat >${name}.cut~ <<-EOF
	: ${mws__relpath=/}
EOF
print -r -- ${name}_all.htm
mws_setname $whoami "$pname – All in One Page"
mws_setrss "${mws__relpath}${name}.rss"
mws_subdir 0
mws_putheader >${name}_all.htm~
plinks="<a href=\"${name}_all.htm\">All</a> <a href=\"${name}.htm\">1</a>"
plinksr="<a href=\"../${name}_all.htm\">All</a> <a href=\"../${name}.htm\">1</a>"
integer i=2
while (( i <= ((entries - cutoff) / perpage + 1) )); do
	plinks="$plinks <a href=\"${name}_${i}.htm\">${i}</a>"
	plinksr="$plinksr <a href=\"../${name}_${i}.htm\">${i}</a>"
	let ++i
done
plinks="${plinks}</p>"
plinksr="${plinksr}</p>"
cat >>${name}_all.htm~ <<-EOF
	<h1>${ptitle}</h1>
	<p>${plinks}
EOF
mopen 1
mkdir -p permalinks
integer entryc=0
integer entryp='entries - 1'
while (( entryp >= 0 )); do
	eid=$(uri_escape "${e_id[entryp]}")
	if [[ -z $nopermalinks ]]; then
		fe=permalinks/${ei_srcf[entryp]}_${eid}.htm
		print -r -- "$fe"
		mws_push
		mws_setname $whoami "$pname"
		mws_subdir 1
		mws_putheader >$fe~
		cat >>$fe~ <<-EOF
			<h1>${ptitle}</h1>
			<p>${plinksr}
		EOF
		output $entryp $eid | mws_content >>$fe~
		mclose $fe
		mws_pop
	fi
	if (( entryc < cutoff )); then
		print "mws_content <<'EOF_cutoff_$name'" >>${name}.cut~
		output $entryp $eid @@RELPATH@@permalinks/ >>${name}.cut~
		print EOF_cutoff_$name >>${name}.cut~
	else
		output $entryp $eid permalinks/ | mws_content >>$fn~
	fi
	output $entryp $eid permalinks/ | mws_content >>${name}_all.htm~
	let entryp--
	let entryc++
	if (( ((entryc - cutoff) % perpage) == 0 )); then
		print -r -- "<p class=\"linkbot\">$plinks" >>$fn~
		mclose $fn
		mopen $(((entryc - cutoff) / perpage + 1))
	fi
done
print -r -- "<p class=\"linkbot\">$plinks" >>$fn~
print -r -- "<p class=\"linkbot\">$plinks" >>${name}_all.htm~
mclose $fn
mclose ${name}_all.htm
[[ -e ${name}.cut~ ]] && mws_moveifchange ${name}.cut~ ${name}.cut
exit 0

rcsid_inc2rss='$MirOS: www/mk/inc2rss,v 1.48 2018/05/05 17:40:35 tg Exp $'
#-
# This file is part of the MirBSD website; see LICENCE for details.

integer maxentries=25
# do not change this format; it's generated from inline code, too
DATE_RSS="%a, %d %b %Y %H:%M:%S %z"
name=$1

. "$TOP/data/$name.cfg"

#DEPEND mk/common
. "$TOP"/mk/common

#DEPEND mk/parser
. "$TOP"/mk/parser

#DEPEND mk/htsconv
. "$TOP"/mk/htsconv

mws__header="<!-- RSS mode -->"
mws__abspath=$mws__canonsite

function rss_putheader {
	#lastchanged=$(date -r $(stat -f "%m" "$TOP/«data»/$name.inc") +"$DATE_RSS")
	lastchanged=$(date +"$DATE_RSS")
	cat <<-EOF
		<rss
		 xmlns:atom="http://www.w3.org/2005/Atom"
		 xmlns:dc="http://purl.org/dc/elements/1.1/"
		 version="2.0">
		<channel xml:lang="en">
		 <title>$ptitle</title>
		 <description>$pname — MirBSD</description>
		 <atom:link href="$mws__abspath/$1" rel="self" type="application/rss+xml" />
		 <lastBuildDate>$lastchanged</lastBuildDate>
		 <link>http://www.mirbsd.org/</link>
		 <copyright>All content Copyright © MirBSD and its respective writers. ⚠
		  Some content may be outdated, obsolete, old or WIP, no warranties!
		  Permission to reproduce news and wlog entries and other RSS feed
		  content in unmodified form without notice is granted provided they are not
		  used to endorse or promote any products or opinions (other than what was
		  expressed by the author) and without taking them out of context. Written
		  permission from the copyright owner must be obtained for everything else.

		  Impressum: http://www.mirbsd.org/imprint.htm</copyright>
		 <dc:language>en</dc:language>
		 <ttl>${rssttl:-14400}</ttl>
		 <generator>MirBSD Website, written in mksh; RCS IDs:
		    $rcsid_parser
		    $rcsid_common
		    $rcsid_htsconv
		    $rcsid_inc2rss
		  RCS IDs of the content database:
		    $rcsid_cfg
	EOF
	for x in "${rcsid_db[@]}"; do
		[[ -z $x ]] && continue
		print -r -- "    $x"
	done
	print -r " </generator>"
}

function rss_putfooter {
	print -r "</channel></rss>"
}

function rss_output {
	local rcmd i x tm
	typeset -i10 -Z2 FH FM FS Fd
	typeset -i10 -Z4 Fy
	integer ent=$1
	rpath=$2
	eid=$(uri_escape "${e_id[ent]}")
	efe="${mws__abspath}${rpath}${ei_srcf[ent]}_${eid}.htm#${eid}_${ei_srcf[ent]}"
	set -A tm -- ${ei_time[ent]}
	pubdate=${tm[3]}
	set -A tm -- $(mjd_explode ${tm[0]} $((tm[1] + (60 * tm[2]))))
	Fd=${tm[tm_mday]}
	(( Fy = tm[tm_year] + 1900 ))
	FH=${tm[tm_hour]}
	FM=${tm[tm_min]}
	FS=${tm[tm_sec]}
	pubdate="${mirtime_months[tm[tm_mon]]} $Fy $FH:$FM:$FS $pubdate"
	pubdate="${mirtime_wdays[tm[tm_wday]]}, $Fd $pubdate"
	if [[ -n ${e_title[ent]} ]]; then
		title="${e_title[ent]}"
	else
		title="${e_date[ent]%% *}${e_author[ent]+ by }${e_author[ent]}"
	fi
	if [[ ${e_language[ent]} = +([A-Za-z0-9-]) ]]; then
		xmllang=" xml:lang=\"${e_language[ent]}\""
		rss3lang="<language>${e_language[ent]}</language>"
	else
		xmllang=
		rss3lang=
	fi
	if [[ $title = *'<'* || $title = *'>'* ||
	    ${title//'&#'+([0-9]);} = *'&'* ]]; then
		print -ru2 Error: RSS title cannot contain HTML \
		    and only numeric entities!
		exit 1
	fi
	# we use $xmllang: RSS 2.0 doesn’t allow the language tag inside
	# items, just as channel tag (and Benny’s template doesn’t even
	# use it but dc:language instead)
	cat <<-EOF
		<item$xmllang>
		<title>$title</title>
		<pubDate>$pubdate</pubDate>
		<link>$efe</link>
		<guid isPermaLink="true">$mws__canonsite/permalinks/${ei_srcf[ent]}_${eid}.htm</guid>
	EOF
	for x in ${e_tag[ent]}; do
		print -r -- "<category>$x</category>"
	done
	if [[ -n ${e_author[ent]} ]]; then
		eauthor=${e_author[ent]}
		uauthor=
		if [[ $eauthor = *@ ]]; then
			uauthor=" ${eauthor%%@*}"
			eauthor="${eauthor}mirbsd.org"
		fi
		[[ $eauthor = *\(*\)* ]] || eauthor="$eauthor (MirOS contributor$uauthor)"
		print -r -- "<author>${eauthor}</author>"
	fi
	print -r "<description>"
	if [[ -n ${e_pictures[ent]} ]]; then
		set -A rcmd -- sed
		for i in ${e_pictures[ent]}; do
			i=${i%%:*}
			eval x='${e_picture'$i'[ent]}'
			rcmd[${#rcmd[*]}]=-e
			rcmd[${#rcmd[*]}]="s@!PICTURE${i}!@$(xhtml_escape \
			    "$x" | sed_escape)g"
		done
	else
		rcmd=cat
	fi
	x=${ei_body[ent]}
	[[ $x = *'<!-- RSS stop -->'* ]] && \
	    x="${x%%@(<!-- RSS stop -->)*}<p><a href=\"$mws__canonsite/permalinks/${ei_srcf[ent]}_${eid}.htm\">(read more…)</a></p>"
	"${rcmd[@]}" <<<"$x" | mws_content | xhtml_escape
	print -r "</description></item>"
}

print -r -- ${name}.rss
mws_setname $whoami "$pname"
mws_subdir -
rss_putheader "${name}.rss" >${name}.rss~

integer i='entries - 1'
integer last='entries < maxentries ? 0 : entries - maxentries'
while (( i >= last )); do
	integer ent=${ei_indir[i]}

	if [[ ${e_deleted[ent]} = 1 || ${e_hidden[ent]} = 1 ]]; then
		(( last = last > 0 ? last - 1 : 0 ))
		let i--
		continue
	fi
	rss_output $ent "/permalinks/" >>${name}.rss~
	let i--
done

rss_putfooter >>${name}.rss~
mws_moveifchange ${name}.rss~ ${name}.rss
exit 0

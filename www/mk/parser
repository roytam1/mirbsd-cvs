# $MirOS: www/mk/parser,v 1.3 2008/04/13 00:39:09 tg Exp $
#-
# This file is part of the website of The MirOS Project, which is
# copyrighted material, please read the LICENCE file for details.

set -A ei_date
set -A e_author
set -A e_id
set -A e_body

nl='
'
save_IFS=$IFS
integer entry=0
integer guid=10000
ids=:
integer state=1
integer tai
typeset -l parser_lctmp

while IFS= read -r line; do
	if [[ $line = ---- ]]; then
		if [[ -z ${e_id[entry]} ]]; then
			if [[ -n ${ei_date[entry]} ]]; then
				id=e$(date -r ${ei_date[entry]} +'%Y%m%d')
			else
				id=g$guid
				let guid++
			fi
			if [[ -n ${e_author[entry]} ]]; then
				id=${id}-${e_author[entry]%%@(@)*}
			else
				id=${id}-nn
			fi
			e_id[entry]=$id
		fi
		while [[ :$ids = *:${e_id[entry]}:* ]]; do
			e_id[entry]=${e_id[entry]}-g$guid
			let guid++
		done
		ids=$ids${e_id[entry]}:
		let ++entry
		state=2
	elif (( state > 0 )); then
		if [[ $line = @([A-Za-z]*([A-Za-z0-9_]):\ *) ]]; then
			x=${line##+([A-Za-z0-9_]):+([	 ])}	# value
			parser_lctmp=${line/%:+([	 ])$x}	# key
			eval e_$parser_lctmp[entry]=\$x
		elif [[ -z $line ]]; then
			state=0
			continue
		else
			print -u2 "Unknown header in data/$name.inc: $line"
			exit 1
		fi
		state=1
		if [[ $parser_lctmp = date ]]; then
			# split up german format (d.m.yyyy [H:M:S]) date, then
			# pad to dd.mm.yyyy and scan as yyyy-mm-dd [H:M:S] UTC
			IFS=$IFS:.; set -A e_tmp ${e_date[entry]}; IFS=$save_IFS
			typeset -i -Z2 e_tmpd=10#0${e_tmp[0]}
			typeset -i -Z2 e_tmpm=10#0${e_tmp[1]}
			typeset -i -Z4 e_tmpy=10#0${e_tmp[2]}
			typeset -i -Z2 e_tmpH=10#0${e_tmp[3]}
			typeset -i -Z2 e_tmpM=10#0${e_tmp[4]}
			typeset -i -Z2 e_tmpS=10#0${e_tmp[5]}
			e_date[entry]=$e_tmpd.$e_tmpm.$e_tmpy
			tdate="$e_tmpy-$e_tmpm-$e_tmpd $e_tmpH:$e_tmpM:$e_tmpS"
			"$DST"/getdate "$tdate" |&
			while read -p tai rest; do
				integer ei_date[entry]=tai
				break
			done
			while read -p rest; do :; done	# flush co-process
		fi
	else
		e_body[entry]=${e_body[entry]}${e_body[entry]+$nl}$line
	fi
done <"$TOP/data/$name.inc"
if (( state != 2 )); then
	print -u2 "Last line of data/$name.inc not a separator!"
	exit 1
fi
integer entries=entry

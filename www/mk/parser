rcsid_parser='$MirOS: www/mk/parser,v 1.7 2008/09/17 21:52:07 tg Exp $'
#-
# This file is part of the website of The MirOS Project, which is
# copyrighted material, please read the LICENCE file for details.

set -A e_author
set -A e_id
set -A e_body

nl='
'
save_IFS=$IFS
integer entry=0
integer guid=10000
ids=:
integer state=1
integer tai
typeset -l parser_lctmp
rcsid_parsed=

while IFS= read -r line; do
	if [[ $line = RCSID:* && -z $rcsid_parsed ]]; then
		rcsid_parsed=${line##RCSID:*([	 ])}
	elif [[ $line = ---- ]]; then
		if [[ -z ${e_id[entry]} ]]; then
			if [[ -n ${e_date[entry]} ]]; then
				id=${e_date[entry]}
				id=e${id:6}${id:3:2}${id::2}
			else
				id=g$((guid++))
			fi
			if [[ -n ${e_author[entry]} ]]; then
				id=${id}-${e_author[entry]%%@(@)*}
			else
				id=${id}-nn
			fi
			e_id[entry]=$id
		fi
		while [[ :$ids = *:${e_id[entry]}:* ]]; do
			e_id[entry]=${e_id[entry]}-g$guid
			let guid++
		done
		ids=$ids${e_id[entry]}:
		let ++entry
		state=2
	elif (( state > 0 )); then
		if [[ $line = @([A-Za-z]*([A-Za-z0-9_]):\ *) ]]; then
			x=${line##+([A-Za-z0-9_]):+([	 ])}	# value
			parser_lctmp=${line/%:+([	 ])$x}	# key
			eval e_$parser_lctmp[entry]=\$x
		elif [[ -z $line ]]; then
			state=0
			continue
		else
			print -u2 "Unknown header in data/$name.inc: $line"
			exit 1
		fi
		state=1
		if [[ $parser_lctmp = date ]]; then
			# split up german format (d.m.yyyy [H:M:S]) date, then
			# pad to dd.mm.yyyy and store as S,M,H,d,m,y
			IFS=$IFS:.; set -A e_tmp ${e_date[entry]}; IFS=$save_IFS
			typeset -i -Z2 e_tmpd=10#0${e_tmp[0]}
			typeset -i -Z2 e_tmpm=10#0${e_tmp[1]}
			typeset -i -Z4 e_tmpy=10#0${e_tmp[2]}
			e_date[entry]=$e_tmpd.$e_tmpm.$e_tmpy
			# make sure there are no leading zeroes
			e_time[entry]="$((e_tmpy)) $((e_tmpm)) $((e_tmpd)) \
			    $((10#0${e_tmp[3]})) $((10#0${e_tmp[4]})) $((10#0${e_tmp[5]}))"
		fi
	else
		e_body[entry]=${e_body[entry]}${e_body[entry]+$nl}$line
	fi
done <"$TOP/data/$name.inc"
if (( state != 2 )); then
	print -u2 "Last line of data/$name.inc not a separator!"
	exit 1
fi
integer entries=entry

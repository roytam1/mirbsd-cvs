rcsid_WPmk='$MirOS: www/mk/WPmk,v 1.53 2018/07/15 19:47:45 tg Exp $'
#-
# This file is part of the MirBSD website; see LICENCE for details.

noact=0
while getopts "n" ch; do
	case $ch {
	(n)	noact=1 ;;
	(*)
		print -ru2 Syntax error.
		exit 1
		;;
	}
done
shift $((OPTIND - 1))

#DEPEND mk/htsconv
. "$TOP"/mk/htsconv

committer=$1
set -A gcbanners

if [[ $committer != +([0-9a-z]) || ! -s $TOP/data/$committer.gc ]]; then
	print -ru2 "Cannot find WP configuration for '$committer'"
	exit 1
fi
. "$TOP/data/$committer.gc"

integer notimesort=1

#DEPEND mk/parser
. "$TOP"/mk/parser

if [[ $committer != +([0-9a-z]) ]]; then
	print -ru2 "Eh? '$committer' is invalid."
	exit 255
fi
if [[ ! -s $TOP/data/60$committer.png ]]; then
	print -ru2 "Cannot find PNG file for '$committer'"
	exit 1
fi
datadate=
for x in "${rcsid_db[@]}"; do
	eval srcd=\$sourcedir_WP$committer
	: ${srcd:=data}
	[[ $x = '$''MirOS: www/'"$srcd/WP$committer"'.inc,v '+([0-9.])' '+([0-9/])' '+([0-9:])' '*'$' ]] || continue
	set -A xa -- $x
	datadate=${xa[3]}
	break
done
if [[ $datadate != 20[0-9][0-9]/@(0[1-9]|1[012])/@(0[1-9]|[12][0-9]|3[01]) ]]; then
	print -ru2 "No RCSID in WP$committer.inc"
	exit 1
fi
#datadate=${datadate:8:2}.${datadate:5:2}.${datadate::4} # DD.MM.YYYY (old German)
datadate=${datadate::4}-${datadate:5:2}-${datadate:8:2}  # YYYY-MM-DD (ISO 8601)

set -A fwp
integer entryp=0
integer xentries=-1
while (( entryp < entries )); do
	ent=${ei_indir[entryp++]}
	[[ -n ${e_title[ent]} ]] || continue
	if [[ ${e_id[ent]} = p+([0-9]) ]]; then
		(( xentries = xentries == -1 ? entryp - 1 : xentries ))
		continue
	elif (( xentries != -1 )); then
		print -ru2 "Non-prospective ID '${e_id[ent]}' after prospective"
		exit 1
	fi
	if [[ ${e_id[ent]} != [1-9]*([0-9]) ]]; then
		# This also catches duplicates due to parser using '-g$guid'
		print -ru2 "Non-numeric ID '${e_id[ent]}' for '${e_title[ent]}'"
		exit 1
	fi
	if [[ " ${e_tag[ent]} " = *' d t '* ]]; then
		print -ru2 "Fix the tag template in #${e_id[ent]} '${e_title[ent]}'"
		exit 1
	fi
	fwp[${e_id[ent]}]=$ent
done
(( xentries == -1 )) && xentries=$entries
set -A fwpk -- "${!fwp[@]}"
fwpks=${#fwpk[*]}
fwpkl=${fwpk[fwpks - 1]}
if (( xentries != fwpkl )); then
	print -ru2 "$xentries entries, but the highest found# is $fwpkl"
	exit 1
fi

(( noact )) && exit 0

{
	print -r '<p><a href="#wpts" style="border:0;"><img style="border:0;"'
	print -r " alt=\"$statname WP=$fwpkl on $datadate\""
	print -r " src=\"@@RELPATH@@WP$committer.png\" /></a></p>"
	if (( ${#gcbanners[*]} )); then
		print -r '<h2 id="banners">Banners et al.</h2>'
		for x in "${gcbanners[@]}"; do
			[[ $x = *'<'@(div|form|p|table|h[3-6])* ]] || \
			    x="<p>$x</p>"
			print -r -- "$x"
		done
	fi
	print -r "<h2 id=\"wpts\">Waypoints: $fwpkl</h2>"
	ent=${ei_indir[entries - 1]}
	[[ ${e_id[ent]} != p+([0-9]) ]]; didprosp=$?; didul=0
	(( didprosp )) && print -r '<ul' \
	    'style="position:relative; left:-20px; margin-bottom:1em; list-style:circle;">'
	i_sum=0
	numec=0
	numga=0
	numgc=0
	numgd=0
	numge=0
	numgg=0
	numnc=0
	numoc=0
	numox=0
	numsh=0
	numtc=0
	numvx=0
	num_b=0
	num_w=0
	num_x=0
	(( entryp = entries ))
	while (( entryp )); do
		ent=${ei_indir[--entryp]}
		case ${e_ntf[ent]} {
		(0)
			class=gc_ztf
			what="Owner"
			sep=★
			;;
		(A)
			class=gc_alpha
			what="mitgelaufen"
			sep=α
			;;
		(B)
			class=gc_beta
			what="Betatester"
			sep=β
			;;
		(1)
			class=gc_ftf
			what="First To Find"
			sep=☀
			;;
		(2)
			class=gc_stf
			what="Second To Find"
			sep=☂
			;;
		(3)
			class=gc_ttf
			what="Third To Find"
			sep=☃
			;;
		(4)
			class=gc_vtf
			what="Forth To Find"
			sep=♨
			;;
		(L)
			class=gc_ltf
			what="Last To Find"
			sep=☄
			;;
		(O)
			class=gc_orga
			what="Co-Organisator"
			sep=⚯
			;;
		(*)
			class=gc_tftc
			what=
			sep='•'
			;;
		}
		if [[ ${e_id[ent]} = p+([0-9]) ]]; then
			class="${class:+$class }gc_prospective"
			xid=
			xtx='(prosp.)'
		else
			if (( !didul++ )); then
				(( didprosp )) && print -nr '</ul>'
				print -r '<ul style="position:relative; left:-20px;">'
			fi
			xid=${e_id[ent]}
			xtx="#$xid"
		fi
		xdate=${e_date[ent]%% *}
		print -nr "<li${xid:+ id=\"wp$xid\"}${what:+ title=\"$what\"}" \
		    "class=\"$class\">${xdate:-(not yet)} $xtx $sep"
		iskip=0
		for wp in ${e_waypoint[ent]}; do
			case $wp {
			(BC*)
				wp="<a href=\"https://bessercacher.de/forum/viewtopic.php?t=${wp#BC}\">BesserCacher#${wp#BC}</a>"
				[[ -n $xid ]] && let num_b++
				(( iskip |= 2 ))
				;;
			(EC*)
				wp="<a href=\"http://extremcaching.com/index.php/output-2/${wp#EC}\">$wp</a>"
				[[ -n $xid ]] && let numec++
				(( iskip |= 2 ))
				;;
			(GA*)
				wp="<a href=\"https://geocaching.com.au/cache/$wp\">$wp</a>"
				[[ -n $xid ]] && let numga++
				(( iskip |= 4 ))
				;;
			(GC*)
				wp="<a href=\"https://www.geocaching.com/seek/cache_details.aspx?wp=$wp\">$wp</a>"
				[[ -n $xid ]] && let numgc++
				(( iskip |= 4 ))
				;;
			(GD*)
				wp="<a href=\"http://geodashing.gpsgames.org/cgi-bin/dp.pl?dp=$wp\">$wp</a>"
				[[ -n $xid ]] && let numgd++
				(( iskip |= 1 ))
				;;
			(GE*)
				wp="<a href=\"http://geocaching.gpsgames.org/cgi-bin/ge.pl?wp=$wp\">$wp</a>"
				[[ -n $xid ]] && let numge++
				(( iskip |= 4 ))
				;;
			(GG*)
				wp="<a href=\"http://golf.gpsgames.org/cgi-bin/golf.pl?course=$wp&amp;coursedetails=Go\">$wp</a>"
				[[ -n $xid ]] && let numgg++
				(( iskip |= 1 ))
				;;
			(N[0-9]+([0-9A-F]))
				wp="<a href=\"http://www.navicache.com/cgi-bin/db/displaycache2.pl?CacheID=$((16#${wp#N}))\">$wp</a>"
				[[ -n $xid ]] && let numnc++
				(( iskip |= 4 ))
				;;
			(OB*) x=https://www.opencaching.nl ;|
			(OC*) x=https://www.opencaching.de ;|
			(OK*) x=https://opencache.uk ;|
			(OP*) x=https://opencaching.pl ;|
			(OR*) x=https://www.opencaching.ro ;|
			(OU*) x=http://www.opencaching.us ;|
			(OZ*) x=https://opencaching.cz ;|
			(O[BCKPRUZ]*)
				wp="<a href=\"$x/viewcache.php?wp=$wp\">$wp</a>"
				[[ -n $xid ]] && let numoc++
				(( iskip |= 4 ))
				;;
			(OX*)
				[[ -n $xid ]] && let numox++
				(( iskip |= 4 ))
				;;
			(SH*)
				wp="<a href=\"http://shutterspot.gpsgames.org/cgi-bin/sh.pl?wp=$wp\">$wp</a>"
				[[ -n $xid ]] && let numsh++
				(( iskip |= 1 ))
				;;
			(LC*|CC*)
				(( iskip |= 1 ))
				;&
			(TC*)
				wp="<a href=\"https://play.terracaching.com/Cache/$wp\">$wp</a>"
				[[ -n $xid ]] && let numtc++
				(( iskip |= 4 ))
				;;
			(VX*)
				wp="<a href=\"http://geovexilla.gpsgames.org/cgi-bin/vx.pl?listwaypointlogs=yes&amp;wp=$wp\">$wp</a>"
				[[ -n $xid ]] && let numvx++
				(( iskip |= 1 ))
				;;
			(WM*)
				wp="<a href=\"http://www.waymarking.com/waymarks/$wp\">$wp</a>"
				[[ -n $xid ]] && let numgc++
				(( iskip |= 1 ))
				;;
			(2[0-9][0-9][0-9]-@(0[1-9]|1[0-2])-[0-3][0-9]_@(?(-)+([0-9])_?(-)+([0-9])|global))
				wp="<a href=\"http://wiki.xkcd.com/geohashing/$wp\">$wp</a>"
				[[ -n $xid ]] && let num_x++
				(( iskip |= 1 ))
				;;
			(http*://*)
				case $wp {
				(*://labs.geocaching.com/*)
					(( iskip |= 1 ))
					[[ -n $xid ]] && let numgc++
					;;
				(*://www.bessercacher.de/*)
					(( iskip |= 2 ))
					[[ -n $xid ]] && let num_b++
					;;
				(*://www.wherigo.com/*)
					(( iskip |= 1 ))
					[[ -n $xid ]] && let num_w++
					;;
				(*)
					print -ru2 "W: #${e_id[ent]} unknown WP code '$wp'"
					(( iskip |= 2 ))
					;;
				}
				wp="<a href=\"$(xhtml_escape "$wp")\"><i>{link}</i></a>"
				;;
			(*)
				wp=$(xhtml_escape "$wp")
				print -ru2 "W: #${e_id[ent]} unknown WP code '$wp'"
				(( iskip |= 2 ))
				;;
			}
			print -nr " $wp"
		done
		# skip if 1, or if 2 and not 4
		[[ -z $xid ]] || \
		    (( (iskip & 1) || ((iskip & 6) == 2) )) || (( ++i_sum ))
		for x in ${e_tag[ent]}; do
			[[ $x = recommended ]] && \
			    sep='<span style="color:red;" title="Recommended">❧</span>'
		done
		for x in ${e_tag[ent]}; do
			[[ $x = exceptional ]] && sep="<b>$sep</b>"
		done
		print -nr " $sep ${e_title[ent]}"
		if [[ -n ${ei_body[ent]} ]]; then
			print '\n<div class="gc_body">'
			print -r -- "${ei_body[ent]}" | perl -e '
# generic HTML encode (&<>" but not '\'')
sub htmlencode($) {
	local ($_) = @_;

	s/&/&amp;/g;
	s/</&lt;/g;
	s/>/&gt;/g;
	s/\"/&#34;/g;

	return $_;
}

# generic Y-M-D date validity checker
sub chkdate($$$) {
	my ($y, $m, $d) = @_;
	my @mdays = (0,31,28,31,30,31,30,31,31,30,31,30,31);

	$mdays[2] = (($y % 4) == 0 && (($y % 100) != 0 || ($y % 400) == 0)) ?
	    29 : 28 if ($m == 2);

	return !($y < 1 || $y > 9999 || $m < 1 || $m > 12 || $d < 1 ||
	    $d > $mdays[$m]);
}

# see MirCVS revision log for test vectors
# generic waypoint code exploder (classifyer, label, URL)
sub explwp($) {
	my ($wp) = @_;
	return ("BC", "BesserCacher#$1", "https://bessercacher.de/forum/viewtopic.php?t=$1") if
	    ($wp =~ m!^BC(\d+)$!);
	return ("EC", "$wp", "http://extremcaching.com/index.php/output-2/$1") if
	    ($wp =~ m!^EC([0-9A-Z]{1,6})$!);
	return ("GA", "$wp", "https://geocaching.com.au/cache/$wp") if
	    ($wp =~ m!^GA[0-9A-Z]{1,6}$!);
	return ("GC", "$wp", "https://www.geocaching.com/seek/cache_details.aspx?wp=$wp") if
	    ($wp =~ m!^GC[0-9A-Z]{1,6}$!);
	return ("GD", "$wp", "http://geodashing.gpsgames.org/cgi-bin/dp.pl?dp=$wp") if
	    ($wp =~ m!^GD[0-9A-Z]{2}-[A-Z]{4}$!);
	return ("GE", "$wp", "http://geocaching.gpsgames.org/cgi-bin/ge.pl?wp=$wp") if
	    ($wp =~ m!^GE[0-9A-Z]{1,6}$!);
	return ("GG", "$wp", "http://golf.gpsgames.org/cgi-bin/golf.pl?course=$wp&coursedetails=Go") if
	    ($wp =~ m!^GG[0-9A-Z]{1,6}$!);
	return ("GK", "$wp", "https://geokrety.org/konkret.php?id=" . hex($1)) if
	    ($wp =~ m!^GK([0-9A-F]+)$!);
	return ("GL", "$wp", "http://coord.info/$wp") if
	    ($wp =~ m!^GL[0-9A-Z]{1,6}$!);
	return ("NC", "$wp", "http://www.navicache.com/cgi-bin/db/displaycache2.pl?CacheID=" . hex($1)) if
	    ($wp =~ m!^N([0-9][0-9A-F]{4})$!);
	return ("OB", "$wp", "https://www.opencaching.nl/viewcache.php?wp=$wp") if
	    ($wp =~ m!^OB[0-9A-Z]{1,6}$!);
	return ("OC", "$wp", "https://www.opencaching.de/viewcache.php?wp=$wp") if
	    ($wp =~ m!^OC[0-9A-Z]{1,6}$!);
	return ("OK", "$wp", "https://opencache.uk/viewcache.php?wp=$wp") if
	    ($wp =~ m!^OK[0-9A-Z]{1,6}$!);
	return ("OP", "$wp", "https://opencaching.pl/viewcache.php?wp=$wp") if
	    ($wp =~ m!^OP[0-9A-Z]{1,6}$!);
	return ("OR", "$wp", "https://www.opencaching.ro/viewcache.php?wp=$wp") if
	    ($wp =~ m!^OR[0-9A-Z]{1,6}$!);
	return ("OU", "$wp", "http://www.opencaching.us/viewcache.php?wp=$wp") if
	    ($wp =~ m!^OU[0-9A-Z]{1,6}$!);
	return ("OZ", "$wp", "https://opencaching.cz/viewcache.php?wp=$wp") if
	    ($wp =~ m!^OZ[0-9A-Z]{1,6}$!);
	return ("PR", "$wp", "http://coord.info/$wp") if
	    ($wp =~ m!^PR[0-9A-Z]{1,6}$!);
	return ("SH", "$wp", "http://shutterspot.gpsgames.org/cgi-bin/sh.pl?wp=$wp") if
	    ($wp =~ m!^SH[0-9A-Z]{1,6}$!);
	return ("TB", "$wp", "https://www.geocaching.com/track/details.aspx?tracker=$wp") if
	    ($wp =~ m!^TB[0-9A-Z]{1,6}$!);
	return ("TC", "$wp", "https://play.terracaching.com/Cache/$wp") if
	    ($wp =~ m!^[TLC]C[0-9A-Z]{1,6}$!);
	return ("VX", "$wp", "http://geovexilla.gpsgames.org/cgi-bin/vx.pl?listwaypointlogs=yes&wp=$wp") if
	    ($wp =~ m!^VX[0-9A-Z]{2}-[A-Z]{4}$!);
	return ("WM", "$wp", "http://www.waymarking.com/waymarks/$wp") if
	    ($wp =~ m!^WM[0-9A-Z]{1,6}$!);
	return ("m/", "$1", "https://www.munzee.com/$1/") if
	    ($wp =~ m!^(m/[0-9A-Za-z_-]*/[0-9]+)/?$!);
	return ("gh", "$wp", "http://wiki.xkcd.com/geohashing/$wp") if
	    ($wp =~ m!^(2[0-9]{3})-(0[1-9]|1[0-2])-([0-2][1-9]|[1-3][01])_(-?[0-9]{1,2})_(-?[0-9]{1,3})$! &&
	    chkdate($1, $2, $3) && $4 >= -90 && $4 <= 90 && $5 >= -180 && $5 <= 180);
	return ("Gh", "$wp", "http://wiki.xkcd.com/geohashing/$wp") if
	    ($wp =~ m!^(2[0-9]{3})-(0[1-9]|1[0-2])-([0-2][1-9]|[1-3][01])_global$! &&
	    chkdate($1, $2, $3));
	return ("", "$wp", "");
}

# local substitution helper
sub chkwp($) {
	my ($q) = @_;
	my ($code, $label, $url) = explwp($q);
	return $q if $code eq "";
	return sprintf("<a href=\"%s\">%s</a>",
	    htmlencode($url), htmlencode($label));
}

while (<>) {
	s@\b((?:[BETLC]C|G[ACEGKL]|O[BCKPRUXZ]|PR|SH|TB|WM|N[0-9])[0-9A-Z]{1,6}|(?:GD|VX)[0-9A-Z]{2}-[A-Z]{4}|2[0-9]{3}-[0-9]{2}-[0-9]{2}_(?:-?[0-9]{1,2}_-?[0-9]{1,3}|global))\b@chkwp($1)@eg;
	print $_;
}
			    '
			print -nr '</div>'
		fi
		print -r '</li>'
	done
	print -r '</ul>'
	(( numtot = numec + numga + numgc + numgd + numge + numgg + numnc + \
	    numoc + numox + numsh + numtc + numvx + num_b + num_w + num_x ))
	print -nr "<p>Totals: $numtot waypoint links ($i_sum without virtual-ish)"
	(( numga )) && print -nr ", Australia $numga"
	(( num_b )) && print -nr ", BesserCacher $num_b"
	(( numec )) && print -nr ", Extremcaching $numec"
	(( numgc )) && print -nr ", Groundspeak <!-- gc.com, waymarking --> $numgc"
	(( numgd )) && print -nr ", Geodashing <!-- (gpsgames) --> $numgd"
	(( numge )) && print -nr ", GPSgames <!-- geocaching --> $numge"
	(( numgg )) && print -nr ", GeoGolf <!-- (gpsgames) --> $numgg"
	(( num_x )) && print -nr ", Geo Hashing <!-- xkcd.com --> $num_x"
	(( numnc )) && print -nr ", Navicaching $numnc"
	(( numoc )) && print -nr ", Opencaching <!-- network --> $numoc"
	(( numox )) && print -nr ", ex-Garmin $numox"
	(( numsh )) && print -nr ", Shutterstock <!-- (gpsgames) --> $numsh"
	(( numtc )) && print -nr ", TerraCaching <!-- TC/LC/CC --> $numtc"
	(( numvx )) && print -nr ", GeoVexilla <!-- (gpsgames) --> $numvx"
	(( num_w )) && print -nr ", Wherigo Cartridges $num_w"
	print -r ".</p>"
	print -r '<p style="font-size:small;">“virtual-ish”' means Cyber, \
	    GeoDashing, GeoGolf, GeoHashing, GeoVexilla, Lab Caches, \
	    Locationless, Shutterspot, Waymarking, Wherigo'</p>'
} >"WP$committer.png~"

print -r -- "WP$committer.htm"
mws_basepath "WP$committer.htm"
mws_setname "gc/$committer" "$committer’s found Waypoints"
mws_setheadline "Geocaches found by $gclogin"
mws_putheader "$rcsid_WPmk" >"WP$committer.htm~"
mws_content <"WP$committer.png~" >>"WP$committer.htm~"
mws_putfooter >>"WP$committer.htm~"
mws_moveifchange "WP$committer.htm~" "WP$committer.htm"

#DEPEND files/FNT/GenI102.ttf
#DEPEND files/FNT/GenBasBI.ttf
#DEPEND mk/4x6.gdf
#DEPEND mk/6x13.gdf
print -r -- "WP$committer.png"
php >"WP$committer.png~" <<EOF
<?php
\$font1 = "$TOP/files/FNT/GenI102.ttf";
\$font2 = "$TOP/files/FNT/GenBasBI.ttf";
\$fontsize1 = $fontsize1;
\$fontsize2 = $fontsize2;
\$fontadj1 = array($fontadj1);
\$fontadj2 = array($fontadj2);
\$dfont = "$TOP/mk/6x13.gdf";
\$sfont = "$TOP/mk/4x6.gdf";

\$upic = "$TOP/data/60$committer.png";
\$user = "$statname";
\$numc = $fwpkl;
\$date = "$datadate";

// Load user picture
if ((\$upim = imagecreatefrompng(\$upic)) === false ||
    (\$upif = getimagesize(\$upic)) == false ||
    \$upif[0] != 60 || \$upif[1] != 60)
	die("Bad user picture, need 60x60 PNG.");

// Create image
\$im = imagecreatetruecolor(234, 61);
// Allocate colours
\$bgcol = imagecolorallocate(\$im, 0x10, 0x10, 0x10);
\$fgcol = imagecolorallocate(\$im, 0xFF, 0xFF, 0xFF);
\$black = imagecolorallocate(\$im, 0x00, 0x00, 0x00);
\$amber = imagecolorallocate(\$im, 0xFF, 0xBF, 0x00);

// Fill image with background colour
imagefilledrectangle(\$im, 0, 0, 233, 59, \$bgcol);

// Copy user picture
imagecopy(\$im, \$upim, 0, 0, 0, 0, 60, 60);

// Write box text
\$boxt = sprintf('%d WITHOUT VIRTUAL-ISH', $i_sum);
if ((\$sfi = imageloadfont(\$sfont)) === false)
	die("Bitmap font problem");
\$y = 61 - 6;
for (\$x = 0; \$x < strlen(\$boxt); ++\$x)
	imagechar(\$im, \$sfi, 60 + \$x * 4, \$y, \$boxt[\$x], \$amber);

// Write user text
\$txt_ofs = 3;
\$text = \$user;
// Get bounding box
\$bbox = imageftbbox(\$fontsize1, 0, \$font1, \$text);
// Transform coordinates into width+height and position
\$ascender = abs(\$bbox[7]);
\$descender = abs(\$bbox[1]);
\$size_w = abs(\$bbox[0]) + abs(\$bbox[2]);
\$size_h = \$ascender + \$descender;
\$x = -\$bbox[0];
\$y = \$ascender;
// Adjust position
\$x += 60 + \$fontadj1[0];
\$y += 3 + \$fontadj1[1];
// Render text into image
imagefttext(\$im, \$fontsize1, 0, \$x, \$y, \$amber, \$font1,
    str_replace('&', '&#38;', \$text));

// Write caches text
\$txt_ofs = \$size_h + 6;
\$text = sprintf('%d Cache%s found', \$numc, \$numc == 1 ? '' : 's');
// Get bounding box
\$bbox = imageftbbox(\$fontsize2, 0, \$font2, \$text);
// Transform coordinates into width+height and position
\$ascender = abs(\$bbox[7]);
\$descender = abs(\$bbox[1]);
\$size_w = abs(\$bbox[0]) + abs(\$bbox[2]);
\$size_h = \$ascender + \$descender;
\$x = -\$bbox[0];
\$y = \$ascender;
// Adjust position
\$x += 60 + \$fontadj2[0];
\$y += \$txt_ofs + \$fontadj2[1];
// Render text into image
imagefttext(\$im, \$fontsize2, 0, \$x, \$y, \$fgcol, \$font2,
    str_replace('&', '&#38;', \$text));

// Write date text
imagefilledrectangle(\$im, 221, 0, 233, 59, \$black);
if ((\$dfi = imageloadfont(\$dfont)) === false)
	die("Bitmap font problem");
\$x = 234 - 13;
for (\$y = 0; \$y < strlen(\$date); ++\$y)
	imagecharup(\$im, \$dfi, \$x, 59 - \$y * 6, \$date[\$y], \$amber);

// Black bottom border
imagefilledrectangle(\$im, 0, 60, 233, 60, \$black);

// Output created image
imagepng(\$im, NULL, 9);

exit(0);
EOF
rv=$?
if (( rv )); then
	print -ru2 "Error creating statpic: $(<"WP$committer.png~")"
	exit 1
fi
mws_moveifchange -b "WP$committer.png~" "WP$committer.png"

exit 0

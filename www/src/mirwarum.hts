# This file is part of the website of The MirOS Project, which is
# copyrighted material, please read the LICENCE file for details.

mws_setname legacy/mirwarum "MirOS Legacy Content"
mws_setheadline Warum MirBSD?
mws_setold
mws_putheader '$MirOS: www/src/mirwarum.hts,v 1.2 2009/06/21 11:01:25 tg Exp $'
mws_content <<'EOF'
<pre>OpenBSD ist das (inoffiziell) sicherste Betriebssystem, das
gegenw&auml;rtig erh&auml;ltlich ist. OpenBSD ist ein 4.4BSD Derivat,
entstanden aus 4.4BSD Lite/2 Quellkodes der Universit&auml;t von
California, Berkeley.
Der gesamte Quellkode ist von einem Team aus qualifizierten
Entwicklern mit UNIX&reg;-Erfahrung seit mehr als sieben Jahren
st&auml;ndig auf potentielle Sicherheitsprobleme und Fehler bzw.
&quot;Bugs&quot; &uuml;berpr&uuml;ft worden, die proaktiv beseitigt wurden, und
nicht erst dann, wenn sie Probleme bereiten. Wird eine Feh-
lerquelle erkannt, wird der gesamte Quellkodebaum nach &auml;hn-
lichen Fehlerquellen durchsucht - systematisch und von meh-
reren Entwicklern parallel; dadurch werden menschliche Feh-
ler wie auch &quot;Regressionsbugs&quot; (durch die Fehlerbeseitigung
werden neue Fehler verursacht) weitgehend ausgeschlossen.
Auch wird der Code durch strikte Stilrichtlinien (siehe die
style(9) man page) lesbar und portabel gehalten, was sowohl
die zuk&uuml;nftige Erweiterbarkeit (z.B. auf die Opteron-Platt-
form) als auch den oben beschriebenen &quot;Auditing-Proze&szlig;&quot; er-
m&ouml;glicht bzw. vereinfacht. Au&szlig;erdem ist lesbarer Code wart-
barer, was nicht zuletzt den Kunden zugute kommt.

OpenBSD enth&auml;lt nur Code aus frei zug&auml;nglichen Quellen, der
unter einer &quot;guten&quot; Lizenz zur Verf&uuml;gung steht; hierbei ist
die BSD/UCB/MIT/X11-Lizenz, die auch eine kommerzielle Ver-
wertbarkeit erm&ouml;glicht, gegen&uuml;ber den GNU-Lizenzen wie LGPL
und GPL sowie (G)FDL, die vom Nutzer verlangen, seine eige-
nen Modifikationen offenzulegen, bevorzugt.
OpenBSD enth&auml;lt auch starke Kryptographie, die abh&ouml;rsichere
Verschl&uuml;sselung von Daten und Netzwerkverbindungen mit nor-
maler PC-Hardware leicht machen; selbst Regierungen und Ge-
heimdienste haben Schwierigkeiten, diese erschl&uuml;sselten Da-
ten vor Ablauf der errechneten Lebenszeit des Universums zu
entschl&uuml;sseln, ohne die Schl&uuml;ssel zu kennen. Die Verschl&uuml;s-
selungsalgorithmen, die benutzt werden, sind in L&auml;ndern ge-
schrieben worden, die den Export in andere L&auml;nder erlauben;
da OpenBSD von Kanada und Belgien aus vertrieben wird, kann
jeder diese Algorithmen nutzen. Die Quellkodes dieser Algo-
rithmen sind nat&uuml;rlich auch verf&uuml;gbar, soda&szlig; Schwachstellen
sofort beseitigt werden k&ouml;nnen. Man wei&szlig;, da&szlig; ''security by
obscurity'' nicht funktioniert.

&quot;MirBSD&quot;, das System, das bei uns eingesetzt und vertrieben
wird, ist die Bezeichnung f&uuml;r eine Variante des OpenBSD-Sy-
stemes, die von uns durch zus&auml;tzliche Leistungsmerkmale er-
weitert wurde und sich au&szlig;erdem durch schlankeren Code aus-
zeichnet, was weitere potentielle Fehlerquellen ausschlie&szlig;t
und dadurch die Gesamtsicherheit erh&ouml;ht.
Das MirBSD-System folgt der Entwicklung des offiziellen CVS
Quellkodebaumes von OpenBSD, wird aber auch extern gewartet
und bei Bedarf um weitere Leistungsmerkmale erg&auml;nzt. So ist
z.B. die ISDN-Unterst&uuml;tzung integriert worden.

Das System MirBSD wird im Rahmen des MirOS Projekts entwik-
kelt von einem unserer Programmierer und anderen Freiwilli-
gen, die sich alle unseren strengen Kodequalit&auml;tsrichtlini-
en verpflichtet f&uuml;hlen.

MirBSD unterscheidet sich, sowohl aus Sicht des Administra-
tors als auch aus Anwendersicht, kaum von modernen OpenBSD-
Versionen; daher kann jeder mit OpenBSD-Erfahrung fast ohne
Einarbeitungszeit ein MirBSD-System verwenden (bzw. admini-
strieren).
Auch Nutzer der anderen freien BSD-Systeme (FreeBSD, beson-
ders NetBSD; aber auch Mac OSX/Darwin, BSD/OS und in gewis-
sem Ma&szlig; auch picoBSD, emBSD, DragonflyBSD und ekkoBSD) wer-
den sich schnell zurechtfinden; genauso Administratoren mit
Erfahrungen im UNIX&reg;-Bereich (z.B. Solaris) oder GNU/Linux.

Es existieren zwar kaum graphische Administrationstools wie
z.B. YaST der SuSE AG, daf&uuml;r sind die Konfigurationsdateien
nicht nur einfach aufgebaut, sondern auch sehr gut dokumen-
tiert - was eine St&auml;rke aller BSD-basierten Systeme ist, da
durch die Art der Entwicklung (es gibt eine core-Gruppe von
Entwicklern, die den Code kontrollieren und sich daf&uuml;r ver-
antwortlich f&uuml;hlen, und nicht jeder Internetnutzer hat, wie
z.B. bei GNU/Linux, die M&ouml;glichkeit, unkontrolliert Patches
einzuflicken, die eventuell weitere Fehler verursachen) das
Schreiben und Pflegen von Dokumentation - haupts&auml;chlich die
bekannten &quot;man pages&quot;, aber auch Essays und Papers, die man
sich als PostScript ausdrucken lassen kann, traditionell im
Entwicklungsproze&szlig; fest verankert ist und es nicht als eine
nur l&auml;stige Pflicht angesehen wird, die Dokumentation aktu-
ell zu halten und mit jedem Release zu pr&uuml;fen.

Schlie&szlig;lich sind die BSD-basierten Systeme seit mehr als 20
Jahren im Serverbereich im Einsatz; die DARPA hat als erste
offizielle Implementation des Internet-Protokolls TCP/IP v4
die der Berkeley-Universit&auml;t erw&auml;hlt. Auch heute laufen die
meisten Internetserver wie auch viele Router, fast alls Fi-
rewalls und mehr im Verborgenen mit BSD, so z.B. die Infra-
struktur der bekannten Yahoo! Gruppe.

BSD ist unsere erste Wahl. Die bekannte Zuverl&auml;ssigkeit und
Stabilit&auml;t eines &uuml;ber zwanzig Jahre alten Systemes, das von
professionellen Softwareentwicklern entworfen wurde und ge-
pflegt wird, und nicht nur von irgendwelchen Studenten rund
um die Welt, oder unter Zeitdruck stehenden, unterbezahlten
Entwicklern eines gro&szlig;en Softwarehauses in den USA, die mit
Geheimdiensten zusammenarbeiten m&uuml;ssen und Fehler nicht so-
fort beseitigen, ist einfach nicht zu schlagen.
</pre>
EOF
mws_putfooter
exit 0

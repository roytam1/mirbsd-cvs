mws_setname subprojects/kwalletcli "kwalletcli – CLI for the KDE Wallet"
mws_setheadline CLI for the KDE Wallet
mws_putheader '$MirOS: www/src/kwalletcli.hts,v 1.20 2010/12/11 21:21:56 tg Exp $'
mws_content <<'EOF'
<h2 id="toc">Table of Content</h2>
EOF
mws_maketoc
mws_content <<'EOF'
<table width="100%"><tr><td>
<p>Homepage of the Command-Line Interface to the KDE Wallet.</p>
<p>Get the Logo (<a href="@@RELPATH@@pics/kwalletcli.svg">SVG</a>).</p>
</td><td style="width:160px;"><object data="@@RELPATH@@pics/kwalletcli.svg"
 type="image/svg+xml" width="128" height="128"><img alt="kwalletcli Logo"
 src="@@RELPATH@@pics/kwalletcli128.png" /></object></td></tr></table>

<h2 id="main">CLI for the KDE Wallet</h2>
<p>What's it? A command-line interface to the KDE Wallet, for KDE 3 and
 KDE 4 both (so shell scripts, Python, etc. do not need to use DCOP or
 D-Bus directly to access it to store passwords, instead being able to
 call this convenient wrapper). Please read <a
 href="@@RELPATH@@permalinks/wlog-10_e20090708-tg.htm">the wlog entry
 announcing kwalletcli public beta test</a> for some more background
 information. Currently, only the default wallet is supported; while
 the CLI itself could be enhanced by a selection, the utilities also
 provided cannot really expose this functionality.</p>
<p>kwalletcli is OSI Certified <img alt="Open Source Software™"
 src="@@RELPATH@@pics/open_source_button.png" /></p>

<h3 id="download">Download</h3>
<p>Current version: kwalletcli 2.03 (2010-11-16)</p><ul>
 <li>RMD160 (kwalletcli-2.03.tar.gz) = 9fbd5d89992fbfba0de9b3a48e98b8b6824e5702</li>
 <li>TIGER (kwalletcli-2.03.tar.gz) = 749dc34b99dc787f88c9fe14dfd7d4ca6040e729cc1ffed5</li>
 <li>4046039585 56962 /MirOS/dist/hosted/kwalletcli/kwalletcli-2.03.tar.gz</li>
 <li>MD5 (kwalletcli-2.03.tar.gz) = 73adff20ae40c03b5da0a49b5bb21c4d</li>
 <li style="list-style:none;">Mirrors</li>
 <li><a href="https://www.mirbsd.org/MirOS/dist/hosted/kwalletcli/kwalletcli-2.03.tar.gz">Germany</a></li>
 <li><a href="http://pub.allbsd.org/MirOS/dist/hosted/kwalletcli/kwalletcli-2.03.tar.gz">Japan</a></li>
</ul>

<h3 id="contents">Ingredients</h3>
<p>The kwalletcli distfile provides a number of things:</p><ul>
 <li>A <tt>LICENCE</tt> file. kwalletcli is covered by <a
  href="@@ABSPATH@@/MirOS-Licence.htm">The MirOS Licence</a>; the logo is
  <em>additionally</em> LGPL v3+ (both OSI certified, DFSG free, etc.)</li>
 <li>An SVG logo and a few compiled PNG versions.</li>
 <li>The CLI itself (binary). The manual page (HTML): kwalletcli(1)</li>
 <li>An ssh-askpass(1) alike tool called <tt>kwalletaskpass(1)</tt>,
  which provides some kind of SSO by storing the SSH private key
  passphrase in the KDE Wallet (mksh(1) script)</li>
 <li>An pinentry alike tool called <tt>pinentry-kwallet(1)</tt>
  which provides some kind of SSO by storing pinentry replies, once
  given (it calls the original pinentry-{qt,gtk,curses} as coprocess),
  in the KDE Wallet and providing them to e.g. the GnuPG agent (<a
  href="@@RELPATH@@mksh.htm">mksh</a> script)</li>
 <li>A pinentry (Assuan protocol) <strong>client</strong> called
  <tt>kwalletcli_getpin(1)</tt> which is used to request information
  from the user which is not <em>yet</em> stored in the KDE Wallet,
  as well as confirmation whether it should be stored there (script)</li>
</ul>

<h4 id="wishlist">Wishlist</h4>
<p><a href="http://bugs.debian.org/603910">Debian #603910</a>: need
 support for ssh-add(1) <tt>-c</tt> query protocol</p>
<p>Possible extensions include gnome-keyring bindings as well as some
 for the new KDE/GNOME intra-desktop keyring/wallet standard talking
 D-Bus instead of using the libkwalletclient convenience libraries;
 support for selecting a non-default keyring; more utilities on top
 of <tt>kwalletcli(1)</tt> (e.g. a libpurple plugin, and means for
 M*zilla Firef*x, Opera and other desktop software to use it to store
 passwords in the Wallet).</p>

<h2 id="packaging">Packaging</h2>
<p><a href="http://packages.debian.org/kwalletcli">Debian</a> has a
 kwalletcli (KDE 4) package in squeeze/sid, and it will be released
 with Debian 6.0 when it's ready. The backports repository contains
 a kwalletcli (KDE 3) package for lenny.</p>
<p>Suggested packaging: MidnightBSD mports (for they provide KDE
 anyway), OpenSuSE Build Service (RPM for many platforms), etc.<br />
 If KDE (upstream) desires, they may include it (under The MirOS
 Licence) in their distribution, even.</p>
<h3 id="depends">Dependencies</h3>
<p>Either Qt3 and KDE3, or Qt4 and KDE4, development headers and
 libraries, and the matching compiler (gcc/g++ is tested, others are
 not). Either MirMake (MirBSD make(1)) or GNU make. For the scripts, <a
 href="@@RELPATH@@mksh.htm">mksh</a> R38+ is a run-time dependency. The
 manpages require nroff/gnroff and the <tt>-mdoc</tt> macropackage to
 compile. The HTML manpages can only be re-made on MirBSD.</p>

<h2 id="bindings">Language Bindings</h2>

<h3 id="b_c">C binding</h3>
<p>See the source file <tt>kwalletcli.h</tt> for details. This is the
 source-level C binding API (function <tt>kw_io()</tt> and a couple of
 return value definitions) that can be re-used. There is no C++ binding,
 because the high-level KWallet API is already C++, although, for ease
 of use, the C binding can be used from others' C++ code as well.</p>

<h3 id="b_py">Python binding (external)</h3>
<p>There's a sample Python 2 binding (we don't know which exact minimum
 version is required) contributed to the Gajim source code (dual-licenced
 under the same licence as Gajim (GPLv3 only), as well as the same licence
 (MirOS) as kwalletcli). The binding was originally written by the author
 of kwalletcli, sponsored by tarent GmbH, as well.</p><ul>
<li><a href="http://trac.gajim.org/ticket/5153">initial submission</a></li>
<li><a href="http://trac.gajim.org/browser/src/common/kwalletbinding.py">the
 code</a> (maintained inside the Gajim repository, as most prominent user of
 it; bugfixed by Yann “asterix” Leboulanger once already, thanks!</li>
<li><a href="http://trac.gajim.org/changeset/10798%3A6c332dd9e795/src/common/passwords.py?format=diff&amp;new=10798:6c332dd9e795">usage
 example</a> (again, Gajim code)</li>
</ul>
<p>Note that the Python binding uses <tt>subprocess.Popen()</tt> and the
 Shell binding to do the actual work.</p>

<h3 id="b_shell">Shell binding</h3>
<p>The kwalletcli(1) manpage provides a documentation of the shell
 binding. The other utilities part of the distribution, as well as
 the Python binding, serve as usage examples.</p>

<h2 id="security">Security</h2>
<p>Passwords can, of course, only be accessed if the KDE Wallet is
 opened. Hence, the on-disc security of the passwords is the same
 as for all other applications using it. We make no statement on its
 security (the GnuPG mailing lists have some flamewars about it), but
 if this is “enough” for you (or, if you are a company sysadmin, your
 boss), you're welcome. On the other hand, since the KDE pop-up will
 only show “kwalletcli”, not the application/script using it, when it
 asks whether access to the Wallet is to be permitted, password stealing
 by untrusted-local applications is easier (but if you have these, you
 have totally different problems anyway). Hence, we suggest to “allow
 always” access for kwalletcli(1) and take the usual care when installing
 and running applications from third parties.</p>
<p>If you turn “iodebug” in pinentry-kwallet on, it will log the entire
 dialogue with both parent and co-process, including passwords, to a
 file in your home directory. (This can only be done by editing the
 script directly.)</p>

<h2 id="users">Users</h2>
<p>The <a href="http://gajim.org/">Gajim</a> Jabber client supports
 kwalletcli, by means of <a href="#b_py">the Python binding</a>, for
 storing Jabber passwords in the KDE Wallet in an encrypted manner,
 since version 0.13 (committed after some discussion; Gajim already
 supported gnome-keyring though).</p>
<p><a href="https://www.tarent.de/">tarent GmbH</a>, which sponsored
 development of kwalletcli, has been using it to make the live of its
 employees on their GNU/Linux desktops easier, since mid-2009.</p>

<h2 id="clog">ChangeLog</h2>
<p id="r2_03">kwalletcli 2.03</p><ul>
 <li>Fix building the kwalletcli binary with <a
  href="https://fedoraproject.org/wiki/UnderstandingDSOLinkChange">indirect
  linking</a>; patch from Felix Geyer &lt;debfx＠ubuntu.com&gt;</li>
 <li>In kwalletaskpass(1), do not even attempt to call kwalletcli(1)
  if <tt>$DISPLAY</tt> is unset or empty, it will not be able to
  communicate with it anyway. Fixes spurious “Do you want to store …
  in the KDE Wallet?” questions when logged in via ssh(1).</li>
 <li>Small documentation improvements, mostly re. <tt>$DISPLAY</tt></li>
</ul>
EOF
mws_putfooter
exit 0

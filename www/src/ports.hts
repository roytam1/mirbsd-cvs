# This file is part of the website of The MirOS Project, which is
# copyrighted material, please read the LICENCE file for details.

mws_setname ports "The MirPorts Framework"
mws_subdir 0
mws_putheader '$MirOS: www/src/ports.hts,v 1.4 2008/03/14 21:13:10 tg Exp $'
mws_content <<'EOF'
<h1>MirPorts: The MirOS Ports Framework</h1>

<p>The official MirPorts homepage can always be reached at <a
 href="http://mirbsd.de/ports">http://mirbsd.de/ports</a> which
 redirects to a &quot;known working&quot; mirror.</p>

<h2>Installation instructions</h2>

<h3>BSD users</h3>

<h4>General</h4>

<p>Please refer to the <a href="@@RELPATH@@man8/Setup.sh.htm">installer’s
 manual page</a> for an invocation reference.</p>

<h4 id="mbsd">Special case: MirOS system-wide installation</h4>

<p>On MirOS BSD, you can do the backwards-compatible</p><pre>
 $ cd /usr/ports
 $ make setup
</pre><p>as well (SUDO is invoked automatically).</p>

<h3 id="darwin">Macintosh users</h3>

<p>You might need the following commands. They assume the Bourne
 shell (GNU bash is pre-installed) as user shell; source SetEnv.csh
 if using the C shell (tcsh) instead. bash is still required to
 build, though.</p><pre>
 $ localbase=$HOME/.mpkg	# or something similarily sensible
 $ cd ports
 $ mkdir -p $localbase/bin
 $ MKSH=$localbase/bin/mksh bash Setup.sh -uel $localbase
 $ . $localbase/db/SetEnv.sh	# repeat each time you want to use it
</pre>

<h3 id="mnbsd">MidnightBSD users</h3>

<p>MidnightBSD support is very new, as of 2008-03-14, and currently
 lacks support for the “i386-unknown-midnightbsd0.2” gnutarget in
 most applications. This should not be <em>that</em> much a problem,
 as we have MirLibtool, which aids in 90% of the use cases. (Besides,
 we did the adjustments for MirBSD already, and sometimes even for
 ekkoBSD. It’s possible.)</p>

<p>There are two possible, recommended, methods of operation of
 the MirPorts Framework (mirports, not to confuse with mports,
 the native MidnightBSD ports tree) on MidnightBSD, both of which
 do not interact with mports or distract it:</p>

<h4>MidnightBSD installation – system-wide</h4>

<p>To install, execute the following commands as a user who has
 sudo(8) rights:</p><pre>
$ cd /usr
$ sudo mkdir mirports
$ sudo chown $(id -u) mirports
$ cvs -d anoncvs@anoncvs.mirbsd.org:/cvs co -d mirports ports
$ cd mirports
$ mksh Setup.sh -e
</pre>

<p>To build, you need a user with sudo(8) rights (and write
 permissions on <tt>/usr/mirports</tt>, possibly via UNIX®
 groups). Execute the following command to set up your
 environment, then proceed as <a href="#using">below</a>.</p>

<pre>
$ . /usr/mpkg/db/SetEnv.sh		# if you’re using ksh
% source /usr/mpkg/db/SetEnv.csh	# if you’re using csh
</pre>

<p>Note that the MirPorts Framework always uses the <a
 href="mksh.htm">MirBSD Korn Shell</a> internally to run
 command lines embedded in the Makefiles, configure scripts,
 etc. Since mksh lives as <tt>/bin/mksh</tt> in MidnightBSD,
 there is no need to install it; however, if a more recent
 version is available, you can upgrade it from shells/mksh;
 export MKSH=$LOCALBASE/mksh then (or overwrite the system’s
 copy).</p>

<p>To use the applications built, it is <em>often</em> enough
 to place <tt>/usr/mpkg/bin</tt> in one’s <tt>$PATH</tt> –
 however, we <strong>recommend</strong> to <em>also</em> use
 the “dot”/“source” command from above before <em>running</em>
 an application built via the MirPorts Framework.</p>

<p>If you do <em>not</em> wish to use mports, only MirPorts,
 and do not fear the wrath of ctriv ☺, you can add either the
 source/dot command or necessary variables to the system-wide
 <tt>/etc/profile</tt> so that all users can benefit from the
 applications supplied via MirPorts without additional hassle.</p>

<h4>MidnightBSD installation – within $HOME</h4>

<p>This is not different from the installation inside $HOME on
 other operating systems, like Darwin. The installer issues a
 warning about not using sudo(8), but you can’t or don’t need
 it since you’re using a private copy of the $LOCALBASE. On the
 other hand, many ports, like <tt>games/bsdgames</tt>, will either
 not work at all or force you to manually export SUDO=sudo before
 building. That’s the reason for the warning.</p><pre>
$ cd
$ cvs -d anoncvs@anoncvs.mirbsd.org:/cvs co -d mirports ports
$ cd mirports
$ mksh Setup.sh -uel ~/.mpkg
</pre>

<p>The dot/source commands read like this then:</p><pre>
$ . ~/.mpkg/db/SetEnv.sh		# if you’re using ksh
% source ~/.mpkg/db/SetEnv.csh		# if you’re using csh
</pre>

<p>The notes about environment variables from above apply here
 as well.</p>

<h3 id="obsd">OpenBSD users</h3>

<p>We do not currently know of anyone using MirPorts on OpenBSD,
 although it is destined to work there quite well, and not conflict
 with the OpenBSD ports tree. Please use the same commands as for
 Macintosh users above, except you can use ksh instead of bash for
 the <tt>Setup.sh</tt> invocation.</p>

<p>If you use MirPorts on OpenBSD and are willing to help us test,
 please drop an eMail to the miros-discuss@ mailing list. Thanks!</p>

<h2 id="using">Using the MirPorts Framework</h2>

<p>To be filled in...</p>
<p>Basically:</p><pre>
 $ cd /usr/ports/editors/joe
 $ <b>m</b>make install clean
 $ echo export EDITOR=/usr/mpkg/bin/jupp &gt;&gt;~/.profile
</pre>

<p>Other useful commands:</p><ul>
<li><tt>$ <b>m</b>make show=FLAVOURS</tt> # show all flavours,
 which can then be used with<br /><tt>$ env FLAVOUR='foo bar'
 <b>m</b>make install clean</tt> (note that you must not place the
 assignment after the <b>m</b>make invocation)</li>
<li>…</li>
</ul>

<h2 id="hacking">Writing ports for the framework</h2>

<p>To be filled in…</p>
EOF
mws_putfooter
exit 0

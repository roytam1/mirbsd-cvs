# This file is part of the website of The MirOS Project, which is
# copyrighted material, please read the LICENCE file for details.

mws_setname ports "The MirPorts Framework"
mws_subdir 0
mws_setheadline MirPorts: The MirOS Ports Framework
mws_putheader '$MirOS: www/src/ports.hts,v 1.11 2011/02/09 19:51:50 tg Exp $'
mws_content <<'EOF'
<p>(The official MirPorts homepage can always be reached at <a
 href="http://mirbsd.de/ports">http://mirbsd.de/ports</a> which
 redirects to a &quot;known working&quot; mirror.)</p>

<p>On this page:</p>

EOF
mws_maketoc
mws_content <<EOF

<h2 id="intro">Introduction</h2>

<p>MirPorts&mdash;a derivative of the OpenBSD ports tree&mdash;is
 our solution for installing additional software packages not contained
 in the base system.</p>


<p>Both MirOS and MirPorts should put most of the “dotfiles” in users’
 home directories in a single directory named “.etc”. You can have  your
 own programs and scripts in ~/.etc/bin.</p>

<p>MirPorts is portable. It has support for the following operating
 systems:</p>

<ul>
 <li>MirOS BSD (-stable and -current)</li>
 <li>OpenBSD (-stable and -current)</li>
 <li>MidnightBSD</li>
 <li>Mac OS X  (10.4 and newer) / Darwin</li>
 <li>Interix / SFU 3.5 (to a lesser degree)</li>
</ul>

<p>Even on stable releases, using the newest MirPorts version is
 recommended. For all platforms, we are still searching for developers
 as well as testers to build packages and to submit bug reports.</p>

<h2 id="install">Set-up instructions</h2>

<p>Please refer to the <a href="man8/Setup.sh.htm">installer’s
 manual page</a> for an invocation reference of the Setup.sh script.</p>

<h3 id="installsystem">System-wide installation</h3>

<p>The system-wide setup is usually carried out by a user who can run
 commands as root by using sudo(8).</p>
 
<ol>
 <li>First, MirPorts must be checked out from CVS into either /usr/ports
  or /usr/mirports. If you are on MirOS and installed the ports10.ngz
  set, you can skip this step, and you will find the sources unpacked in
  /usr/ports. In the following commands, replace “mirports” by “ports”
  to use the /usr/ports directory.<pre>
$ cd /usr
$ sudo mkdir mirports
$ sudo chown $(id -u) mirports
$ cvs -d _anoncvs@anoncvs.mirbsd.org:/cvs co -d mirports ports
</pre></li>
 <li>Now you need to run the setup script. It will automatically use
  sudo(8) to gain root privileges where necessary. If the -e flag is
  given below, the configuration files will be placed inside
  /usr/mpkg/etc instead of /etc. If you do not have mksh, replace it by
  bash.<pre>
$ cd /usr/mirports
$ mksh Setup.sh -e
</pre><p>On MirOS, you can skip this step if you installed the
  pkgutl10.ngz set during the installation. If not, then run</p><pre>
$ cd /usr/ports ; make setup
</pre><p>instead of the commands above.</p></li>
 <li>On non-MirOS systems, to use MirPorts, some environment variables
  (PATH etc.) have to be set. For Bourne shells (mksh, bash or similar),
  run the following command:<pre>
$ . /usr/mpkg/db/SetEnv.sh
</pre><p>and add it to your ~/.profile or /etc/profile (for all users).
  For tcsh, the command is</p><pre>
$ source /usr/mpkg/db/SetEnv.csh
</pre><p>To make the changes permanent, the command must be added to
 ~/.tcshrc.</p></li>
</ol>

<h3 id="installuser">Installation as an unprivileged user</h3>

<p>For an unprivileged installation, the same three steps as above are
 necessary. In the Setup.sh invocation, the -u flag is used to select an
 unprivileged setup, and the target directory is selected with the -l
 flag. This directory is usually located in your home directory and will
 contain all installed packages, configuration files and the package
 database. In the following, we will use <tt>$localbase</tt> for this
 directory.</p>

<ol>
 <li>Checkout:<pre>
$ cvs -d _anoncvs@anoncvs.mirbsd.org:/cvs co -d mirports ports
</pre></li>
 <li>Setup:<pre>
$ cd ports
$ mkdir -p $localbase/bin
$ MKSH=$localbase/bin/mksh bash Setup.sh -uel $localbase
</pre></li>
 <li>Set environment variables:<pre>
$ . $localbase/db/SetEnv.sh
</pre><p>Or for tcsh:</p><pre>
$ source $localbase/db/SetEnv.csh
</pre></li>
</ol>


<h2 id="platforms">Platform-specific notes</h2>

<h3 id="miros">MirOS BSD</h3>


<p>To install MirPorts system-wide on MirOS BSD, just execute</p><pre>
 $ cd /usr/ports
 $ make setup
</pre><p>as an unprivileged user. The sudo command is invoked
 automatically to gain root privileges where needed.</p>

<h3 id="darwin">Mac OS X</h3>

<p>Before using MirPorts, you need to install the Developer Tools from
 the separate DVD provided, as well as the X11 package from the
 installation DVD.</p>

<h3 id="mnbsd">MidnightBSD</h3>

<p>MidnightBSD support is experimental, and it currently
 lacks support for the “i386-unknown-midnightbsd0.2” gnutarget in
 most applications. This should be unproblematic due to MirLibtool.</p>

<p>You must install perl from mports before setting up MirPorts, as
 parts of the infrastructure are written in Perl.</p>

<p>Note that the MirPorts Framework always uses the <a
 href="mksh.htm">MirBSD Korn Shell</a> internally to run
 command lines embedded in the Makefiles, configure scripts,
 etc. Since mksh lives as <tt>/bin/mksh</tt> in MidnightBSD,
 there is no need to install it; however, if a more recent
 version is available, you can upgrade it from shells/mksh;
 export MKSH=$LOCALBASE/mksh then (or overwrite the system’s
 copy).</p>

<h3 id="obsd">OpenBSD</h3>

<p>Using MirPorts on OpenBSD is currently untested but should work well
 in principle. It does not conflict with the OpenBSD ports tree. You can
 use ksh for the Setup.sh invocation in step 2 above.</p>

<p>If you use MirPorts on OpenBSD and are willing to help us test,
 please drop an e-mail to the miros-discuss@ mailing list. Thanks!</p>

<h2 id="using">Using the MirPorts Framework</h2>

<p>The directories below /usr/ports are the categories for ports. Each
 port is contained in its own subdirectory and contains a Makefile.
 Just executing <tt>mmake install</tt> in such a directory will download
 the source code, compile it, create a binary package and install it.
 Dependencies are automatically installed  when necessary. Some ports
 exist in different “flavours”, e.g. with or without X support.</p>

<p>For example, to install the “joe” port from the “editors” category,
 use the following commands:</p><pre>
 $ cd /usr/ports/editors/joe
 $ mmake install clean
</pre>

<p>Always use mmake instead of make for invoking MirPorts commands. Some
 other useful commands are:</p>
 
<ul>
 <li>To search for ports whose name contains “foo”, run the following
  command in the top-level directory:<pre>
$ mmake search name=foo
</pre></li>
 <li>To show all flavours of a given port, run:<pre>
$ mmake show=FLAVOURS
</pre></li>
 <li>To install the package with, say, the “foo” and without the
  “bar” flavour, run:<pre>
$ env FLAVOUR='foo no-bar' mmake install clean
</pre>Note that you must not place the assignment after the mmake
 invocation.</li>
</ul>
EOF
mws_putfooter
exit 0

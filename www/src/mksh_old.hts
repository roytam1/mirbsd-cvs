# This file is part of the website of The MirOS Project, which is
# copyrighted material, please read the LICENCE file for details.

mws_setname subprojects/mksh/old "mksh – old versions"
mws_setheadline The MirBSD Korn Shell
mws_putheader '$MirOS: www/src/mksh_old.hts,v 1.48 2014/09/03 19:55:50 tg Exp $'
mws_content <<'EOF'
<h2><a href="mksh.htm">mksh</a> – old versions</h2>

<p>This page lists information about versions of mksh(1) earlier than R40.</p>

<h2>Old instructions</h2>
<h3 id="compile">Compilation</h3>

<p>The build script also honours the following environment variables:</p><ul>
<li><tt>CC</tt> (cc) – the C compiler used</li>
<li><tt>CFLAGS</tt> (-O2 / -xO2) – optimiser and other compiler flags used
 (set to anything containing a letter or digit to prevent <tt>Build.sh</tt>
 from automatically adding optimisation flags)</li>
<li><tt>CPPFLAGS</tt> (no default) – additional cpp(1) flags</li>
<li><tt>LDFLAGS</tt> – additional CCLD flags</li>
<li><tt>LIBS</tt> (-lcrypt on Interix; empty otherwise) – additional
 libraries to pull in</li>
<li><tt>NOWARN</tt> (-Wno-error / -errwarn=%none) – $CC option to disable
 bailing out at errors; used during mirtoconf checks</li>
<li><tt>NROFF</tt> (nroff; “nroff -c” with GNU groff) – the manual page
 processor used unless <tt>-r</tt> is given</li>
<li><tt>TARGET_OS</tt> (uname -s || uname) – the operating system to compile
 for; set this during cross compilation; valid: AIX BeOS (not yet) BSD/OS
 CYGWIN* Darwin DJGPP (not yet) DragonFly FreeBSD GNU (Hurd) GNU/kFreeBSD
 Haiku HP-UX Interix IRIX* Linux MidnightBSD Minix MirBSD NetBSD OpenBSD OSF1
 Plan9 (not yet) PW32* (not yet) QNX SunOS syllable (not yet) ULTRIX UWIN*</li>
<li><tt>TARGET_OSREV</tt> (uname -r) – the operating system revision number
 for these that need it; currently: QNX (R38c+)</li>
<li style="list-style:none;">Feature selectors:</li>
<li><tt>USE_PRINTF_BUILTIN=1</tt> – add <tt>printf.c</tt> to the list of
 files to be compiled and set a flag so it is used as builtin (R39+)</li>
</ul>
<p>If <tt>CPPFLAGS</tt> contain any of the following definitions, the resulting
 binary will be compiled with a specific flavour:</p><ul>
<li><tt>-DMKSH_ASSUME_UTF8=0</tt> – do not use setlocale(3) or
 nl_langinfo(CODESET); do not assume the terminal is in UTF-8 mode
 (mksh R38c and up)</li>
<li><tt>-DMKSH_ASSUME_UTF8</tt> – do not use setlocale(3) or
 nl_langinfo(CODESET); assume the terminal is always in UTF-8 mode</li>
<li><tt>-DMKSH_BINSHREDUCED</tt> – include code to automatically “set -o
 sh” to reduce functionality if called as <tt>sh</tt> or <tt>-sh</tt></li>
<li><tt>-DMKSH_CLS_STRING</tt> – the string to send to the terminal to clear
 the window (default: <tt>"\033[;H\033[J"</tt>)</li>
<li><tt>-DMKSH_CONSERVATIVE_FDS</tt> – use less filedescriptors (32/10 ipv
 56/24), e.g. if the system supports few (mksh R37c and up)</li>
<li><tt>-DMKSH_MIDNIGHTBSD01ASH_COMPAT</tt> – parse “--” on the shell command
 line like MidnightBSD 0.1 <tt>/bin/sh</tt> (different from all other shells);
 <em>requires</em> <tt>-DMKSH_BINSHREDUCED</tt> or “-o sh” (R39b+)</li>
<li><tt>-DMKSH_NOPWNAM</tt> – omit getpwnam(3) calls (<tt>~foo/</tt> expansion)
 in order to not pull in the nsswitch or PAM libraries</li>
<li><tt>-DMKSH_NO_LIMITS</tt> – don’t compile the ulimit code (R38c+)</li>
<li><tt>-DMKSH_SMALL</tt> – build a really small mksh(1), e.g. for embedded
 systems (see below for details of what this entails)</li>
<li><tt>-DMKSH_S_NOVI=0</tt> – do not omit the Vi editing mode (R39b+)</li>
<li><tt>-DMKSH_S_NOVI=1</tt> – omit the Vi command line editing mode (" ")</li>
<li><tt>-DMKSH_UNEMPLOYED</tt> – compile without job control (R37b+)</li>
<li><tt>-DMKSH_DEFAULT_EXECSHELL</tt> – default: <tt>"/bin/sh"</tt> (R40+)</li>
<li><tt>-DMKSHRC_PATH</tt> – default: <tt>"~/.mkshrc"</tt> (R40+)</li>
<li><tt>-DMKSH_DEFAULT_TMPDIR</tt> – default: <tt>"/tmp"</tt> (R40+)</li>
<li><tt>-DMKSH_CLRTOEOL_STRING</tt> – default: <tt>"\033[K"</tt> (R40+)</li>
<li><tt>-DMKSH_A4PB</tt> – force arc4random_pushb(3) for $RANDOM (R40+)</li>
<li><tt>-DMKSH_NO_DEPRECATED_WARNING</tt> (varies between versions)</li>
<li><tt>-DMKSH_DONT_EMIT_IDSTRING</tt> – for broken OSes (R40+)</li>
<li><tt>-DMKSH_NOPROSPECTOFWORK</tt> – disables more than just job control,
 to use for tracking down signal handling bugs in Syllable, Plan 9 (R40+)</li>
<li><tt>-DMKSH_NO_EXTERNAL_CAT</tt> – always run <tt>cat</tt> as builtin,
 instead of diverting to <tt>command cat</tt> if called with flags (R40b+)</li>
<li><tt>-DUSE_REALLOC_MALLOC=0</tt> – if <tt>realloc(NULL, n)</tt> is not
 equivalent to <tt>malloc(n)</tt> (n &gt; 0) as ANSI C89 prescribes</li>
</ul>
<p>You can override certain mirtoconf checks by setting environment variables
 like <tt>HAVE_REVOKE=0</tt> (default for Linux) – if these are set to 0 or 1,
 the values are used; if unset, the values are probed (unless overridden by a
 different check, such as MKSH_SMALL), if set to ‘x’ the probe is forced.<br />
 Useful items to enable/disable are HAVE_MKNOD (set to x to re-enable),
 HAVE_SETLOCALE_CTYPE (set to 0 if you know that
 it won’t ever return UTF-8), HAVE_PERSISTENT_HISTORY (0 to not include this
 feature), HAVE_FLOCK_EX (if flock or mmap do not work on files).</p>
<p>Defining <tt>MKSH_SMALL</tt> will disable persistent history (to re-enable,
 env HAVE_PERSISTENT_HISTORY=x), try to compile with <tt>-fno-inline</tt>,
 disable the nice(3) extern; (not overridable) implies traditional/conservative
 filedescriptor usage, MKSH_NOPWNAM; omits shebang checking in scripts, the Vi
 command line editing mode (mksh R39b and up can re-enable it by defining
 <tt>-DMKSH_S_NOVI=0</tt>), certain verbose error messages, the entire ‘-T’
 command line option; replaces inlines
 with separate functions for size over speed optimisation, etc. (In R39b and
 up, it disables a whole lot more things than in earlier versions.)</p>


<p>Accepted arguments to <tt>Build.sh</tt> are:</p><ul>
<li><tt>-combine</tt> – all-in-one build, recommended unless gcc is broken;
 ignored if $CC does not support “-fwhole-program --combine” (gcc4, R37+)
 – replaced with “-c combine” from mksh R40</li>
<li><tt>-llvm[=…]</tt> – compile to bytecode; option arguments (or, if none
 given, ‘-std-compile-opts’) are passed to LLVM opt (mksh R36b and up)
 – replaced with “-c llvm” from mksh R40</li>
<li><tt>-valgrind</tt> – append <tt>-DDEBUG -g3 -fno-builtin</tt> which are
 required to work around gcc/valgrind and clang/scan-build bugs (R39b+)
 – replaced with “-g” from mksh R40</li>
<li><tt>-d</tt> (R29 and below): build dynamically, don't try to link with
 <tt>-static</tt> by default on architectures that support it</li>
<li><tt>-nd</tt> (R29 and below): build statically, always try to link with
 <tt>-static</tt> even on systems with nsswitch/PAM</li>
<li><tt>-q</tt> (R35b and below): output almost nothing</li>
<li><tt>-r</tt> (all versions): don't try to build a pre-formatted version
 of the manual page using nroff(1) if found</li>
</ul>
<p>These special values in <tt>CPPFLAGS</tt> are recognised:</p><ul>
<li><tt>-DMKSH_MIDNIGHTBSD01ASH_COMPAT</tt> – parse “--” on the shell command
 line like MidnightBSD 0.1 <tt>/bin/sh</tt> (different from all other shells);
 <em>requires</em> <tt>-DMKSH_BINSHREDUCED</tt> or “-o posix” (R38+) / “-o sh”
 (R39b+)</li>
<li><tt>-DMKSH_BINSHREDUCED</tt> – include code to automatically “set -o
 posix” (mksh R39b+: “set -o sh”) to reduce functionality if called as
 <tt>sh</tt> or <tt>-sh</tt></li>
<li><tt>-DMKSH_NOVI</tt> – omit the Vi command line editing mode, which is
 orphaned anyway, yet functional (mksh below R39b)</li>
<li><tt>-DNO_STRTOD</tt> – (printf.c) disable floating point (below R40)</li>
<li><tt>-DMKSH_AFREE_DEBUG</tt> – run with extra alloc/free checking
 (mksh R36b and below)</li>
<li><tt>-DMKSH_NEED_MKNOD</tt> – if MKSH_SMALL is set, do not omit the mknod(8)
 builtin functionality from the binary; <strong>deprecated</strong>, use the
 environment variable <tt>HAVE_MKNOD=[0|1]</tt> to determine if this builtin
 should be compiled in or not instead; has been removed past R31c</li>
</ul>
<p>The build script also honours the following environment variables:</p><ul>
<li><tt>CPP</tt> ($CC -E -) – the C preprocessor used</li>
</ul>

<h2 id="contrib">Other Shells and more</h2>
<p>mksh is a successor of pdksh but not affiliated with the pdksh
 developers or contributors. mksh is not affiliated with the AT&amp;T
 Korn Shell, its past or present owners, other than that both attempt
 to implement the Korn Shell programming language.</p>
<p>mksh targets users who desire a compact, fast, reliable, secure
 shell not cut off modern extensions; a shell with Unicode support;
 an actively developed, current, and portable product; one with
 developers that listen to their users’ requests and implement them
 if they actually make sense.</p>
<p>mksh aims to replace pdksh in all but very rare use cases (such as
 support for checking the Unix mbox) and in all operating environments
 (thus including patches from pdksh on e.g. Debian).</p>

<h3 id="co-diffs">Differences</h3>
<p>mksh is a direct descendant from the OpenBSD <tt>/bin/ksh</tt> and
 contains all of its bug fixes and enhancements <strong>except</strong>
 the “GNU bash-like <tt>$PS1</tt>” and “POSIX character class support
 in globbing” changes and the incompatible “ulimit can handle multiple
 limits in one invocation” difference. Some of the more weird diffs in
 oksh have not been merged either. The DeliLinux developer who
 is responsible for packaging oksh for GNU/Linux should instead use mksh
 and port that diff over (be careful to not break the fixes to the command
 line editing modes, these are subtilely broken in OpenBSD). Even better,
 the OpenBSD people should not only commit a port of mksh but replace their
 ksh with it (optionally retaining that GNU bash-like $PS1 stuff). The
 <tt>set -o emacs-usemeta</tt> command is no longer needed because the
 emacs editing mode has been changed for Unicode/UTF-8 mode, which adds a
 new <tt>set -o utf8-mode</tt> flag. The <tt>set -o sh</tt> command has
 been completely removed, <tt>set -o posix</tt> merely turns off brace
 expansion as side effect. There is no limit (well, 2³² – for now…) on
 array sizes any more. Many bugs and security holes have been closed in
 mksh and are still in oksh and OpenBSD ksh. The user interface has much
 less bugs and surprises; emacs editing mode is enabled by default.
 In contrast to oksh, <tt>set -o arc4random</tt> can be used to control
 which generator for <tt>$RANDOM</tt> is used.</p>
<p>mksh is the heir of pdksh and contains all the latest fixes from upstream
 (so ca. 1995) and Debian. It is the only pdksh derivate currently being
 under active development. See above for other
 differences. The code really has been cleaned up and no longer contains any
 material under licences more restrictive than the BSD licence.</p>
<p>AT&amp;T ksh88 and ksh93 compare to mksh substantially, but share no code;
 the user interface is slightly different especially for ksh88; many editing
 commands work (only slightly) differently as well. mksh implements many, but
 by far not all, ksh93 features, but most ksh88 features. No floating point.
 All commands of a pipeline are executed in a subshell.</p>
<p>mksh can do many things GNU bash can’t, for example better arrays, the
 ksh Co-processes, etc. but is much faster and smaller. In contrast to bash,
 mksh is still being actively developed (bash almost only receives small
 changes or weird stuff like programmable tab completion). GNU bash’s array
 initialiser syntax is not yet supported. We don’t aim at being fully bash
 compatible, but some of the surprises for converts will be removed. Funnily,
 bash4 now contains some things first introduced in mksh.</p>
<p>The Z shell (zsh) isn’t even remotely ksh compatible in its “emulate ksh”
 operation mode, and we don’t compare to it.</p>
<p>mksh is <em>mostly</em> bourne shell compatible (but ^ as alias for | is
 not supported, like most modern shells). mksh is also POSIX sh compatible.
 Some constructs are not supported, for example<br />
 <tt>((foo; bar) 2>&amp;1 || baz)</tt><br />which has to be rewritten as<br />
 <tt>( (foo; bar) 2>&amp;1 || baz)</tt><br />because ((…)) is shell arithmetics;
 brace expansion is turned on by default; etc.</p>
<p>mksh R33 supports more (later versions even more) bash/ksh93/zsh constructs
 than its antecessors; sometimes, not all cases (e.g. applying string trimming
 on arrays) are supported, but you probably will not notice that.</p>

<h3 id="co-hints">Hints and other useful stuff</h3>
<p>mksh does not write a history file by default any longer; set the
 environent variable <tt>HISTFILE</tt> in <tt>~/.mkshrc</tt> (or the
 profile) if you want this. The history file format of mksh (and oksh
 and pdksh) differs from that of other shells, so you might want to
 use a construct like<br /><tt>case $KSH_VERSION in<br />
 *MIRBSD\ KSH*) export HISTFILE=~/.mksh-history ;;<br />
 *PD\ KSH*MirOS*) export HISTFILE=~/.oldmksh-history ;;<br />
 *PD\ KSH*) export HISTFILE=~/.pdoroksh-history ;;<br />
 ?*) export HISTFILE=~/.ksh-history ;;<br />
 *) export HISTFILE=~/.nonksh-history ;;<br />
 esac</tt><br />to avoid them overwriting each others' history file.</p>
<p>Very old sample: <a href="/cvs.cgi/contrib/samples/etc_profile">this</a></p>
<p>OS inclusion:</p><ul>
<li><a href="http://crux.nu/">Crux GNU/Linux</a> used to have an mksh port contributed by
 <a href="http://www.xs4all.nl/~hanb/software/crux/han/mksh/">Han Boetes</a>.</li>
</ul>

<h2 id="upgrade">For packagers: Upgrades</h2>
<p id="p47">R47: Overriding size(1) with $SIZE now works. Do take note of <a
 href="https://bugzilla.redhat.com/show_bug.cgi?id=922974">this GCC bug</a>
 when trying to build mksh sticks / waits forever.</p>
<p id="p46">R46: New <tt>-DMKSH_BINSHPOSIX</tt> to complement the older
 <tt>-DMKSH_BINSHREDUCED</tt>. Some lksh stuff is now integrated.</p>
<p id="p45">R45: Neither <tt>-DMKSH_GCC55009</tt> nor HAVE_SILENT_IDIVWRAPV
 nor <tt>-Wno-overflow</tt> are used any more; mksh employs unsigned integer
 arithmetic now and emulates signed integer arithmetics with defined wraparound
 using unsigned C integers. Oh, and a workaround for a workaround for a bug in
 GNU tar in dietlibc was added (hah, nested sentences are nice!).</p>
<p id="p44">R44: Please consider switching from R41-stable, which is now
 oldstable; this release is conservative wrt. R43 and may become stable.</p>
<p id="p43">R43: Unbreaks detection of <tt>sys_siglist[]</tt> and friends’
 definitions. The Makefrag.inc generation shows the check categories.</p>
<p id="p42b">R42b: Dear packagers, please consider subscribing to our <a
 href="@@RELPATH@@rss.htm">miros-mksh mailing list</a> or use the RSS feed.
 The testsuite is now run verbosely by default; use ‘-Q’ to quieten it.</p>
<p id="p42">R42: <tt>MKSH_DISABLE_EXPERIMENTAL</tt> was made a no-op again
 for this release, like <tt>MKSH_DISABLE_DEPRECATED</tt> was for R41. There
 is a new option <tt>DEBUG_LEAKS</tt> which is implied by <tt>DEBUG</tt>,
 which, in turn, you should never enable in production. Handling of time.h
 vs. sys/time.h and sys_errlist[] changed. The default <tt>dot.mkshrc</tt>
 now uses <tt>${ foo;}</tt> constructs ipv <tt>$(foo)</tt> to save a fork(2)
 at the cost of using a file in $TMPDIR; adjust if you really need.</p>
<p id="p41c">R41c: Dear packagers, please consider subscribing to our <a
 href="@@RELPATH@@rss.htm">miros-mksh mailing list</a> or use the RSS feed.</p>
<p id="p41b">R41b: Some bugfixes in Build.sh and the code; GCC now adds
 <tt>-fno-asynchronous-unwind-tables</tt>.</p>
<p id="p41">R41: We’re using POSIX ustar archives now. Honours
 <tt>LDSTATIC</tt> (which is appended to <tt>LDFLAGS</tt> and, if not empty
 (e.g. consists of whitespace), adds more mksh-local code to to the build to
 avoid pulling in more libc code and improving LTO effect. The
 <tt>-long-options</tt> for <tt>Build.sh</tt> are gone. <tt>MKSH_SMALL</tt>
 no longer implies <tt>-fno-inline</tt>. A “legacy ksh” can now be built.
 <a href="http://gcc.gnu.org/bugzilla/show_bug.cgi?id=55009">A GCC bug</a>
 may lead to assertion failures at <tt>Build.sh</tt> check time; in that
 case, you <em>may</em> use a workaround <strong>only if you ensure that
 a run-time test succeeds</strong> (i.e. must not cross-compile except if
 the result is manually checked afterwards): <tt>arith-mandatory</tt> in
 <tt>check.t</tt> <strong>must</strong> pass if <tt>-DMKSH_GCC55009</tt>
 is given (the Debian and OpenSuSE Buildservice packages do the same test
 without using the Perl testsuite).</p>
<p><strong>Warning!</strong> The current <tt>Build.sh</tt> interface
 <em>will</em> change in the future. With run-time checks, mandatory
 testsuite parts, etc. it’s already at its limit, and we’ll be needing
 a host compiler some time later, which will see it revamped. Do read
 the upgrade notes!</p>
<p id="p40f">R40f: Honours <tt>AWK</tt>. Is a lot more anal wrt. using
 cached Makefile includes. Persistent history support may show up.</p>
<p id="p40e">R40e: No longer tries to use GCC and C99 extensions. It has
 a run-time check in Build.sh which may trigger a core dump; <strong>when
 cross-compiling, preseed with HAVE_SILENT_IDIVWRAPV=0 in the environment
 to skip the check and always compile in the safety code</strong>; the check
 is for removing the safety code if it is not needed on the target machine
 (which obviously cannot be checked when cross-compiling) and segfaults if
 it is needed (by design). Support for various OSes has improved.</p>
<p id="p40d">mksh R40d has several new options: <tt>test.sh</tt> ‘-f’ to
 enable running tests that need a fast machine; the preprocessor flag
 <tt>MKSH_DISABLE_DEPRECATED</tt> to disable code that is deprecated and
 scheduled for removal in the next version; updated <tt>dot.mkshrc</tt>.</p>
<p id="p40c">mksh R40c got better support for OPENSTEP, Interix, kFreeBSD,
 MSYS, Hurd. No packaging changes worth mentioning, though.</p>
<p id="p40b">mksh R40b changed <tt>dot.mkshrc</tt> and has a new option for
 disabling special handling the cat(1) builtin. The system and suid profile
 have moved to <tt>/system/etc/</tt> for Android. Build failures (e.g. broken
 system includes abusing <tt>inline</tt> vs. broken GCC <tt>--combine</tt>) may
 now be caught earlier, so <tt>Rebuild.sh</tt> may not be available yet.</p>
<p id="p40">mksh R40 has substantially changed <tt>Build.sh</tt> options,
 CPPFLAGS, etc. and the testsuite now exits with an error code if tests fail.
 Please do review your packaging; contact us if necessary. Specifically for
 embedded systems (do not do this on desktops etc.), the <tt>~/.mkshrc</tt>
 location can be changed at compile time. Several more operating systems are
 supported. <tt>setmode.c</tt> is gone and HAVE_MKNOD defaults to 0 now but
 can be explicitly enabled, provided your OS has setmode(3) and getmode(3),
 or it is provided in $LIBS. <tt>arc4random.c</tt> is no longer used, unless
 specifically called for by <tt>-DMKSH_A4PB</tt> (e.g. on Cygwin). Upgrade
 <tt>printf.c</tt> to the latest version if you use it. First release to
 officially support Android; quell aliasing “stop” and “suspend” there.
 MKSH_SMALL doesn’t imply HAVE_REVOKE=0 any longer.</p>
<p>mksh R39c should fix a bug that could have led to accidental removal of
 the manpage when building in the source directory. AIX builds no longer
 uselessly pull in libcrypt.</p>
<p>mksh R39b now has a separate <a href="#caveat">caveat</a> section listing
 the most relevant user-visible changes, split off this packagers' list.
 The optional, undesirable, unsupported printf(1) builtin is now documented
 in the manpage. The chdir builtin is an alias for cd. The realpath builtin
 is now always provided. <tt>MKSH_SMALL</tt> removes much more functionality
 than it used to. <tt>MKSH_NOVI=1</tt> is now <tt>MKSH_S_NOVI=[0|1]</tt>.
 <tt>$RANDOM</tt> handling is greatly simplified. There's now both “±o sh”
 and “±o posix”, and they differ; <tt>MKSH_MIDNIGHTBSD01ASH_COMPAT</tt> needs
 the former. New build flags <tt>-M</tt>, <tt>-valgrind</tt>. The default on
 HP-UX on IA64 is no longer to default to building with <tt>-mlp64</tt> (gcc)
 or <tt>+DD64</tt> (HP aCC). SUNWcc tries <tt>-xipo</tt> (but requires the
 packager to use <tt>-xO4</tt> or up manually).</p>
<p>mksh R39 has user-visible changes regarding “set -u” (“set -o nounset”)
 and alias/function name conflicts regarding whitespace before parenthesēs,
 as well as a much enhanced <tt>dot.mkshrc</tt> sample file I urge to install.
 People using a Makefile to build it may need to regenerate their set of
 CPPFLAGS used; CPPFLAGS handling in general has improved. There is now a
 defined but unsupported way to make printf(1) a builtin; this is <em>not</em>
 tested and adds a huge SLOB of foreign code to the build, lets the shell use
 stdio and floating point, making it bloated and fragile; if you still want
 it (hi Md), set <tt>USE_PRINTF_BUILTIN=1</tt> and add <tt>printf.c</tt> from
 <tt>mircvs://src/usr.bin/printf/</tt> to the build.</p>
<p>mksh R38c adds QNX fixes, build system fixes, and the (not recommended)
 ability to use <tt>-DMKSH_ASSUME_UTF8=0</tt> to skip the environment checks
 for locale (leading to one (supposedly un-)expected regression test failure).
 Use <tt>-DMKSH_NO_LIMITS</tt> to skip the ulimit builtin (klibc).</p>
<p>mksh R38b works on QNX 6.4 out of the box.</p>
<p>mksh R38 offers <tt>-DMKSH_MIDNIGHTBSD01ASH_COMPAT</tt> and users
 should be warned about the “!string” line and UTF-8 mode changes.</p>
<p>mksh R37c now honours <tt>-DMKSH_CONSERVATIVE_FDS</tt> and ACK.
 The regression test suite keeps <tt>LOCPATH</tt> around.</p>
<p>mksh R37b now honours <tt>-DMKSH_UNEMPLOYED</tt> for the jobless
 mode required on, at least, Minix 3.</p>
<p>Freshmeat announcements <strong>have ceased</strong> because the
 site switched to a very user-unfriendly HTML (especially Lynx). Use
 the <a href="@@RELPATH@@tag_mksh.rss">RSS feed</a> instead.</p>
<p>mksh R37 has a new ‘-combine’ <tt>Build.sh</tt> option. The
 <tt>-DMKSH_AFREE_DEBUG</tt> flag is gone due to a new allocator,
 which however honours <tt>-DUSE_REALLOC_MALLOC=0</tt>.</p>
<p>At <a href="http://freshmeat.net/projects/mksh">Freshmeat</a> you can
 subscribe to get automatically notified (with a summary of changes, not
 the complete changelog, see below) whenever new releases are put out.</p>
<p><strong>Note:</strong> This is <em>not</em> <a href="#clog">the
 ChangeLog</a>, these are the packager-visible upgrade notes regarding
 changes in the build system (<tt>Build.sh</tt> and friends, compiler
 support, packaging conventions, bad examples, etc).</p>
<p>mksh R36b stays compatible, no surprises there. The ‘-llvm’ option
 to <tt>Build.sh</tt>, however, is new.</p>
<p>mksh R36’s <tt>Build.sh</tt> script ‘-q’ option is gone. Furthermore,
 you must add <tt>-DMKSH_BINSHREDUCED</tt> to your <tt>CPPFLAGS</tt> now
 if you want mksh to behave more POSIXish if called as <tt>sh</tt>.<br />
 OSF/1 V2.0 is now supported using the native DEC C compiler.</p>
<p>mksh R35b builds on some more platforms and throws less warnings,
 but the build system is almost unchanged; <tt>test.sh</tt> now shows
 the Perl binary used (honours <tt>$PERL</tt>) and its version.</p>
<p>In mksh R35, setlocale/nl_langinfo have been disabled by default for
 some platforms. If we do not assume UTF-8, disabling lets mksh employ
 the <tt>LANG</tt> and <tt>LC_*</tt> environment variables for codeset
 determination. Also, a new builtin is included depending on existence
 of the readlink(3) function, disabled by default if MKSH_SMALL. The
 “pdksh” check category is no longer persistent. The licence has changed
 (the advertising clause was removed). The <tt>dot.mkshrc</tt> sample
 was changed to improve re-use.<br />There was no R34.</p>
<p>No changes in mksh R33c except for Ultrix support. None in R33d.</p>
<p>In mksh R33b, much more compilers are detected, even if not all of
 them are supported. The OE (OS and CC/LD) versions are now dumped too.
 Instead of <tt>#error</tt>, forced link failures are now used as the
 mechanism to auto-detect some things in the target environment. Features
 are now much better detected, and some annoying warnings don’t show up
 any longer due to this. Less tools are required to build.</p>
<p id="tty">Please be reminded that you should run <tt>./test.sh -v</tt>
 inside an environment with <tt>/dev/tty</tt> available (as device node)
 and usable (e.g. use script(1) or GNU screen if you’re doing auto-builds
 detached from controlling terminal). Use <tt>-v</tt> to see failures.</p>
<p>No surprises in mksh R33 either, but the build system now gives more
 detailed output on the version actually built, to aid tracking down
 FTBFSen (build errors) with access to only the build logs. Regression
 tests now work with Intel’s compiler on SLES too, which requires a
 custom <tt>LD_LIBRARY_PATH</tt> formerly stripped by the script.</p>
<p>No surprises in mksh R32, but some ancient systems (AIX, Solaris 11,
 OSF/1, UWIN) are now better supported.</p>
<p>In mksh R31d, parallel make with ‘-j’ was added (no limitation on number
 of childs though), this even works with Solaris 8 <tt>/bin/sh</tt>. The
 <tt>MKSH_NEED_MKNOD</tt> define is no longer honoured.</p>
<p>From mksh R31 to R31b, arc4random.c has been upgraded.</p>
<p>From mksh R30 to R31, there are no surprises. The “arc4random.c” file
 is available from mircvs://contrib/code/Snippets/arc4random.c now, and
 the new “source” command is not available in posix mode either.</p>
<p>From mksh R29 to R30, the following things should be kept in mind:</p>
<p>The syntax of <tt>Build.sh</tt> has changed: $CC now defaults to “cc”
 instead of “gcc”, and the ‘-d’ and ‘-nd’ arguments are gone – if you
 want to build a statically linked mksh, pass <tt>LDSTATIC=-static</tt>
 (gcc+GNU ld, adjust for other OEs) to it. An “arc4random.c” is now
 automatically included into the build if found in the source directory.
 The $CPP variable is ignored, <tt>$CC -E</tt> is used instead, except
 for tcc, which uses “cpp -D__TINYC__” because “tcc -E” doesn’t work.</p>
<p>As a tribute to better POSIX compatibility, certain aliases (like
 “stop”) are no longer predefined in “set -o posix” mode, which is invoked
 automatically if the shell is run as <tt>-sh</tt>, <tt>/bin/sh</tt> or
 similar, so that they can be used as function names.</p>
<p>If defining <tt>MKSH_SMALL</tt>, the ‘vi’ editing mode is omitted,
 which may surprise your users.</p>
<p>Many compilers other than gcc are now supported as well as AIX.</p>

<h2 id="caveat">Users' Upgrade Caveat</h2>
<p id="c47">R47:
 The <tt>-T</tt> option no longer chown(2)s or chmod(2)s the tty(4) device; it
 no longer fork(2)s if the argument is prefixed with a ‘!’ (MirBSD setsid(2) is
 a bit too anal to make use of it, but it gets rid of cttyhack et al. on Linux).
 POSIX compatibility was improved again (also thanks to the OpenBSD guys). New
 “set ±o inherit-xtrace”. Fixes lotsa bugs in R45/R46…</p>
<p id="c46">R46: Compatibility behaviour (mksh with -o posix, mksh with -o sh,
 mksh with -o posix -o sh, lksh, lksh with -o posix) changed again slightly.
 For both, -o posix re-enables parsing leading digit-zero numbers as octal,
 even though you should know better. You <em>can</em> now set both sh and posix
 but have to do it with the same command; your distributor can pre-enable both,
 or just one, for /bin/sh. The manpages for mksh and lksh document the delta
 better now and point out why you should not rely on POSIX long arithmetic.</p>
<p id="c45">R45: mksh in compatibility modes (posix, sh, lksh) no longer
 parses the <tt>&amp;&gt;</tt> GNU bash I/O redirection (it breaks previously
 valid scripts). “set -x” output changed. Enjoy the new <tt>dot.mkshrc</tt>
 provided <tt>PS4</tt> variable and “doch” alias.</p>
<p id="c44">R44: <tt>"$@"</tt> always generates words.</p>
<p id="c43">R43: <tt>$'…'</tt> is only allowed where strings are.</p>
<p id="c42b">R42b: Sorry for the “set -e” breakage.</p>
<p id="c42">R42: <tt>${ foo;}</tt> constructs now handle <tt>local</tt>,
 <tt>return</tt> and <tt>exit</tt> like functions do; <tt>dot.mksh</tt>
 makes use of them to avoid fork(2)s. <tt>$'…'</tt> works in more places;
 here strings now use the full recursive parser.</p>
<p id="c41c">R41c: Sorry for the “set -e” breakage.</p>
<p id="c41b">R41b: The ERR and EXIT traps are called correctly; in “set -e”
 mode, functions correctly cause the shell to exit if they return nonzero,
 even if they contain a list.</p>
<p id="c41">R41: Deprecated features (set ±o arc4random; beginning an input
 line with ‘!’ instead of ‘r’+space) are gone. Numbers beginning with 0 are
 no longer interpreted as octal (except in lksh). Several fixes may have
 user-visible impact on the language.</p>
<p>For mksh R41 and up, being a feature superset of OpenBSD ksh (except the
 broken (GNU bash-style) <tt>PS1</tt> and mail support) is demoted, no longer
 a primary but a secondary release criterium. This was changed to facilitate
 faster releases, especially when OpenBSD changes are not usable as-is.</p>
<p id="c40f">R40f: Support for persistent history (which is still discouraged)
 may show up on platforms previously without it.</p>
<p id="c40e">R40e: Interpreting "010" as octal number will now emit a warning
 at run-time. Several bugfixes lead to slightly changed behaviour to conform
 better to the standards. The worst offending bugs in the persistent history
 code have been fixed, but its use is still discouraged. THIS VERSION IS
 BROKEN WITHOUT A HOTFIX which your packager probably added. Tab completion
 may now shrink the current input line, but still follows the docs.</p>
<p id="c40d">R40d: Interpreting "010" as octal number is now deprecated
 and <em>will</em> be removed soon. You can now use “local” and “set -A”
 together to create function-local arrays. The test(1) built-in command
 behaves POSIX conformant. The ^O Emacs mode command now works as it used
 to when editing the fetched lines. Arithmetic expressions have certain
 guarantees that are detailed more explicitly in the manpage.</p>
<p id="c40c">R40c: The hack for when an interactive command begins
 with ‘!’ to substitute that with “fc -e -” is now deprecated and
 will be removed with R41 (or R42, we’ll see) despite objection.
 Write ‘r ’ (letter err plus a space) instead, it’s exactly the
 same. On the other hand, GNU bash-style array assignments are now
 a standard feature: <tt>x=(a [3]=b); x+=(c [6]=d)</tt> now works
 even in <tt>-DMKSH_SMALL</tt>. The <tt>-DMKSH_BINSHREDUCED</tt>
 fix for <tt>${foo%\?}</tt> needed another fix, same for the
 recursive parser introduced in R40.</p>
<p id="c40b">R40b: There is a new built-in special command “global”
 which does the same as “local” except localise every parameter it
 touches; in short, it does what “typeset” would’ve been supposed
 to be had it not to double as “local”. Tab completion will now work
 better. The shell handles bogus environment variable imports more
 gracefully and doesn’t let the terminal crash hard under some corner
 cases. ^Cing out of the built-in cat utility is possible.</p>
<p id="c40">R40: “set ±o arc4random” is deprecated and will not exist
 in the next version (R41) any more – the shell uses an LCG internally
 which is seeded from ASLR. Several POSIX fixes may change behaviour
 of builtins, substitutions, etc. and some differ now depending on the
 “set ±o sh” flag. New builtin “cat” (although, if called with a flag,
 the external cat utility is invoked) and “sleep” (if select(2) could
 be linked). <tt>dot.mkshrc</tt> no longer exports <tt>$PS1</tt>. GNU
 bash localised strings ($"…") are handled, but (of course❣) untranslated.
 “foo=&lt;&lt;EOF” cat(1)lessly assigns a here document to a parameter. New
 KSHEGID, KSHGID, KSHUID variables and PIPESTATUS array. Completely new
 read built-in command with several new options. Parse command substitutions
 – $(…) – recursively. HP-UX “test -H” is back, “test -t” (without the “fd”
 argument) is gone. “set -x” is now inherited by called functions. The x+=y
 and x+=(y z) notations for appending to variables and (!MKSH_SMALL) arrays
 are now supported, as are “;&amp;” and “;|” (“;&amp;&amp;” !MKSH_SMALL too)
 case fall-through without/with re-examination.</p>
<p id="c39c">R39c: Evaluation of things like <tt>${foo:-bar}</tt> and
 <tt>"${foo+bar}"</tt> now behave standards-compliant (SUSv4) and more
 like all other shells, sans bugs. In particular, if a <tt>${}</tt>
 expression is double-quoted, the apostrophe/single quote loses its
 special meaning within, whereas it still acts as quote character if
 the expression is not double quoted. Other special characters' meanings
 have been updated to match standardised/expected behaviour.</p>
<p id="c39b">R39b: Due to a lot of bugfixes and some enhancements, take
 care when upgrading. The realpath builtin is now always available. There
 are now both “±o sh” and “±o posix”, and they <a href="#r39b">differ</a>
 (scroll down to almost the end of the R39b changelog). In numeric expressions,
 “'a'” is an alternative to “1#a” like in ksh93; “$'…'” expanded strings are
 now also supported. Some constructs parse more loosely, and things like
 “function stop () {” work now. <tt>MKSH_SMALL</tt> removes <em>much</em>
 more functionality than it used to. <tt>set +o arc4random</tt> is no longer
 possible (either it's there and used, or it's not). "mksh /tmp/horsies" now
 exits 127 ipv 1 (ENOENT). 「((foo) || bar)」 and 「((foo) | (bar))」 work
 now. Lazy evaluation of ternary operations is fixed. In '-o sh' mode, echo
 does not expand backslashes any more. In '+o sh' mode, “set -- $(false)”
 POSIXly correctly returns 0 (and breaks getopt(1) in traditional usage
 mode). Changes of variables inside Bourne style functions affect the
 caller's environment. “eval $(false)” also returns 0. “±U” is now honoured
 on an interactive shell's command line. Finally, the getopts builtin now
 behaves standards-compliant: even on an unknown option, <tt>OPTIND</tt>
 is incremented (think “getopts "ab:c" ch” and “script -a -I foo bar” in
 contrast to “script -a -- -I foo bar” – mkdep(1) was <a
 href="http://marc.info/?m=125598551928046">affected</a>, as will be <a
 href="http://marc.info/?m=125598548027997">every script</a> that does not
 abort in the <tt>(\?)</tt> or <tt>(*)</tt> case).</p>
<p id="c39">mksh R39 has user-visible changes regarding “set -u” (“set -o
 nounset”) and alias/function name conflicts regarding whitespace before
 parenthesēs.</p>

<h2 id="clog">Recent Changes</h2>
<p id="r47">R47 is a bugfix everyone <strong>must</strong> upgrade to:</p><ul>
 <li>[tg] Do not accidentally remove <tt>lksh.1</tt> for in-srcdir builds</li>
 <li>[tg] Fix post-build non-‘-Q’ output for lksh</li>
 <li>[tg] Silence some configure-time warnings for clang-3.2 and GCC</li>
 <li>[tg] Prevent recursion loops for namerefs; found by ormaaj</li>
 <li>[tg] Replace wcwidth code by mine based on Unicode 6.2.0</li>
 <li>[tg, Alexander Polakov] Fix quoting in word part of <tt>${var+word}</tt>
  etc. when the expression is in a quoted brace or a here document</li>
 <li>[tg] Fix some compiler warnings; improve sig{,handler}_t detection</li>
 <li>[tg] Keep SIGCHLD blocked in some more semi-critical code paths</li>
 <li>[tg] Fix uninitialised variable causing random nōn-numerical input
  to be accepted and acted upon in the select built-in command</li>
 <li>[tg] No longer chown(2)/chmod(2) the <tt>-T</tt> tty(4) argument</li>
 <li>[tg] Don’t fork(2) if the <tt>-T</tt> tty(4) argument begins with ‘!’;
  eliminates the need for things like oneit_line/cttyhack/etc. on Linux</li>
 <li>[jca] Fix “for var in; do” to not be interpreted as “for var; do”</li>
 <li>[tg] Use %zu for printing size_t (ipv %lu with casting around)</li>
 <li>[tg] use ${SIZE-size} for lewellyn’s cross</li>
 <li>[fgsch, espie, millert, tg] Write more testcases</li>
 <li>[millert] POSIX specifies that for &amp;&amp; and || lists, only the
  exit status of the last command matters for “set -e”; fix and document</li>
 <li>[millert] check.pl: Add <tt>-T</tt> flag to set the tmpdir; use
  mkstemp(3) and mkdtemp(3) instead of $$ in /tmp for tempfiles</li>
 <li>[jca] Make $(&lt;nonexistent) behave like $(cat nonexistent)</li>
 <li>[tg] Let shf_open return an errno; display why file wasn’t read</li>
 <li>[tg] Finally decide on regression-39 desired outcome (sync with
  AT&amp;T ksh93 and GNU bash --posix as well as mksh behaviour)</li>
 <li>[tg] Fix post{in,de}crement in not evaluated side of e.g. ternary
  operator (LP#1187729)</li>
 <li>[tg] Fix “set -x” problems; add “set +o inherit-xtrace” (LP#1179287)</li>
 <li>[tg] Simplify some code</li>
 <li>[tg] Fix segfault related to mixing funsub/valsub and comsub</li>
</ul>
<p id="r46">R46 delivers these changes:</p><ul>
 <li>[tg] <tt>dot.mkshrc</tt>: prevent lksh from running it</li>
 <li>[tg] Add the lksh manual page to the mksh distribution</li>
 <li>[tg] Make both lksh and mksh interpret numbers with a leading digit
  zero (‘0’) as octal precisely iff “set -o posix” is active</li>
 <li>[tg] Point out the octal digit and the integer arithmetic differences
  from POSuX verbosely in the manual pages (point people who need octals to
  “set -o posix” and who need longs to lksh) and elaborate on the horrors of
  ISO C Undefined Behaviour which is allowed to delete all your data</li>
 <li>[tg] Unbreak “set -o” (list flags) in lksh on LP64 machines</li>
 <li>[tg] Implement Emacs mode PgUp as Vi insert mode Cur↑ for Yofuh</li>
 <li>[tg] Allow setting both “set -o sh” and “set -o posix”, if done in
  the same command; shuffle around compatibility levels (mksh/lksh, with
  -o sh, with -o posix) again; permit a /bin/sh to set either or both</li>
 <li>[tg] Sync lksh manual page with the exact code ifdefs</li>
 <li>[tg] Change more use of signed integer to use unsigned instead</li>
 <li>[tg] Implement “set -o pipefail” like AT&amp;T ksh93 and GNU bash do</li>
 <li>[tg] <tt>dot.mkshrc</tt>: provide hd(1) in Pure mksh™ for fallback</li>
 <li>[tg] Implement VALSUBs (value substitutions): <tt>${|REPLY=foo;}</tt></li>
</ul>
<p id="r45">R45 comes with this bag of changes:</p><ul>
 <li>[tg] Make “set -x” print the commands run in escaped form</li>
 <li>[tg] <tt>PS4</tt> in <tt>dot.mkshrc</tt> is now timestamped</li>
 <li>[tg] The <tt>&amp;&gt;</tt> GNU bash I/O redir is no longer parsed in
  <tt>-o posix</tt>, <tt>-o sh</tt> modes, lksh (breaks valid scripts)</li>
 <li>[tg] Implement <tt>${ …;}</tt> more efficiently (deleted-open files)</li>
 <li>[tg] For shf, <tt>%#s</tt> (if you can get it past GCC’s printf format
  attribute) calls print_value_quoted, ignoring field width and precision</li>
 <li>[tg] Catch “typeset =” (regression) with better error message</li>
 <li>[tg, Tonnerre Lombard] add “doch” alias to <tt>dot.mkshrc</tt> which just
  repeats the last input line with sudo(8)</li>
 <li>[tg] Use unsigned integers for all calculations, to avoid ISO C “Undefined
  Behaviour” (and implementation-defined behaviour) throughout (most of) the
  code; emulate signed integer arithmetics using unsigned; not-lksh only</li>
 <li>[tg] Emulate signed modulo naïvely, for correct sign of the result</li>
 <li>[tg] Add &lt;&lt;&lt; and &gt;&gt;&gt; for ROL and ROR (rotate left and
  right, respectively) operations, &lt;&lt;&lt;= and &gt;&gt;&gt; assignments;
  bitwise AND the RHS of a shift/rotate op with 31 (not for lksh)</li>
 <li>[tg] Remove a warning by working around a workaround found in dietlibc
  which works around a bug in broken software such as GNU tar (really!)</li>
 <li>[tg] Correct and simplify list and categorisation of built-in commands
  as POSIX special and “everything else” plus a flag to keep assignments</li>
 <li>[tg] Handle <tt>((foo))</tt> as “let]” internally to avoid a conflict
  with user-defined functions called <tt>let</tt> (LP#1156707)</li>
 <li>[tg] Clean up the code</li>
</ul>
<p id="r44">R44 contains these bugfixes:</p><ul>
 <li>[tg] "$@" always generates words; bug spotted by engla in IRC</li>
 <li>[tg] Optimise print_columns display to use the screen space better</li>
</ul>
<p id="r43">Please upgrade to mksh R43 (or stick on R41c) because of…</p><ul>
 <li>[tg] Do not permit <tt>$'…'</tt> and <tt>$"…"</tt> in anything that
  looks like a string, as old scripts, like ncurses’, depend on behaviour
  not guaranteed by POSIX regarding unescaped dollar signs there</li>
 <li>[dalias] Make detection of function prototypes more reliable</li>
 <li>[tg] Quote setenv arguments for eval properly in <tt>dot.mkshrc</tt></li>
 <li>[tg] Validate parameter names for typeset, export, etc.</li>
 <li>[tg] Provide a classic BSD echo builtin for /bin/sh on MidnightBSD</li>
 <li>[tg] When generating Makefrag.inc put list of check_categories inside</li>
 <li>[tg] Actually test all echo(1) flavours and MidnightBSD /bin/sh hacks</li>
</ul>
<p id="r42b">mksh R42b and <span id="r41c">R41c</span> fix regressions:</p><ul>
 <li>[tg] Correctly initialise memory (Debian #700604)</li>
 <li>[tg] LP#1104543 fix was too strict (Debian #700526)</li>
</ul>
<p id="r42">mksh R42 brings back the release\ {early,often} scheme:</p><ul>
 <li>[tg] Make <tt>-DMKSH_DISABLE_EXPERIMENTAL</tt> a nop again</li>
 <li>[tg] Quell some LLVM+Clang warnings; overhaul scan-build assert(3)s</li>
 <li>[tg, RT] Bunch of portability and build system fixes</li>
 <li>[tg] Re-enable <tt>${ precmd;}</tt> in <tt>dot.mkshrc</tt> and fix it
  to retain the errorlevel</li>
 <li>[RT] Port to Minix-vmd, QNX 4, Watcom C; begin porting to SunOS 4.1.1,
  Xenix, ISC (Interactive) Unix</li>
 <li>[tg] Prefer const-clean <tt>sys_errlist[]</tt> to strerror(3)</li>
 <li>[tg] Permit <tt>$"…"</tt> and <tt>$'…'</tt> everywhere except in the
  body of here documents that are not here strings</li>
 <li>[tg] Use full recursive parser for double-quoted here strings, and
  reuse code between here strings and here documents</li>
 <li>[tg] #ifdef DEBUG_LEAKS free all fds and memory on exit (LP#1106116)</li>
 <li>[tg] Don’t close stdout/stderr with redirections, dup /dev/null
  instead, always, both in dot.mkshrc and the testsuite, it does break!</li>
 <li>[tg] Handle <tt>${ …;}</tt> like functions in that <tt>local</tt> and
  <tt>return</tt> DWIW; use it for the big chunk in $PS1 to avoid fork(2)ing
  (at cost of tempfiles; dot.mkshrc is a sample, adjust to your needs)</li>
 <li>[tg] Document invalid ${a/b/c} patterns in manpage (Debian #698678)</li>
</ul>
<p id="r41b">mksh R41b is a bugfix-only release off a stable branch:</p><ul>
 <li>[tg] Fix gettimeofday(2) detection at build time (warning)</li>
 <li>[RT, tg] <tt>Build.sh</tt>: catch non-working dash printf builtin</li>
 <li>[chris2, dalias, tg] Remove musl libc workaround and use _GNU_SOURCE
  which they kindly aliased to _ALL_SOURCE, which is implemented now</li>
 <li>[tg] Fix getn and some cases of possible array bounds trespasses</li>
 <li>[chris2, dalias, tg] Use -fno-asynchronous-unwind-tables with GCC</li>
 <li>[tg] Fix a few warnings from libFirm/cparser (mostly -Wsign-compare)</li>
 <li>[tg] Correct mistake when doing hashtable lookup collision resolution</li>
 <li>[tg] Fix running the <tt>ERR</tt> and <tt>EXIT</tt> traps in situations
  with <tt>set -e</tt> and/or <tt>eval</tt> (also closes Debian #696823)</li>
 <li>[tg] Fix “command shift”, reported by «ormaaj:#!/bin/mksh»</li>
 <li>[Torsten Sillke] Unbreak linking on AIX (remove <tt>-qextchk</tt>)</li>
 <li>[tg] Fix regression wrt lists in functions and “set -e” (LP#1104543)</li>
</ul>
<p id="r41">mksh R41 brings a number of bugfixes and new features:</p><ul>
 <li>[tg] Drop “set ±o arc4random” (deprecated in R40)</li>
 <li>[tg] Drop old <tt>Build.sh</tt> -long-options (deprecated in R40)</li>
 <li>[tg] Change the internal hash algorithm from Bob Jenkins’ one-at-a-time
  to its NUL-counting, always-changing, better-avalanching MirOS variant <a
  href="@@RELPATH@@cvs.cgi/src/kern/include/nzat.h">NZAAT</a> (with feedback
  from ciruZ; 75% fill level is reasonable; names tbd in Mirkev/MirJSON)</li>
 <li>[tg] Use <tt>$'…'</tt> for non-ASCII parameters for re-entry printing</li>
 <li>[tg] Use sane spelling of “read-only” consistently</li>
 <li>[tg] Improve tree <tt>-DDEBUG</tt> functions (internal/developer use)</li>
 <li>[tg] Reduce stack usage a bit; speed up hash tables at size cost</li>
 <li>[tg] <tt>MKSH_SMALL</tt> no longer implies <tt>-fno-inline</tt></li>
 <li>[tg] Support optional seed in <tt>${parameter@#seed}</tt> for security</li>
 <li>[tg] New <tt>Build.sh</tt> environment configurable: LDSTATIC (empty)</li>
 <li>[tg] Improve LTO effect by always adding our copies of distributed utility
  function sources when linking statically (i.e. LDSTATIC is not empty)</li>
 <li>[tg] Drop deprecated hack for lines beginning with an exclamation mark</li>
 <li>[tg] No longer interpret numbers beginning with a 0 digit as octal</li>
 <li>[tg] Attempt to use <tt>-fwrapv</tt> on more compilers</li>
 <li>[tg, RT] Better portability to 386BSD, Debian 0.91, ancient Unicēs</li>
 <li>[tg] No longer use mkstemp(3) or tempnam(3) functions, do our own</li>
 <li>[tg] Fix some bugs in the manual page and <tt>Build.sh</tt></li>
 <li>[tg] Add MKSH_NO_CMDLINE_EDITING, MKSH_DISABLE_TTY_WARNING</li>
 <li>[RT] Port to Coherent UNIX</li>
 <li>[tg] Enable some options by default for some ports, for instance, since
  BeOS can never have a controlling tty, the option disabling that warning</li>
 <li>[tg] Some bugfixes, prompted by RT and Valgrind</li>
 <li>[RT] Disable sigsuspend(2) on Syllable Desktop</li>
 <li>[tg] Fix several issues with typeset -p (LP: #993847)</li>
 <li>[RT] Detect lcc and apply inline fix, e.g. for use with libc5</li>
 <li>[tg] If klibc, set -DMKSH_NO_LIMITS and check for sigsuspend fix</li>
 <li>[tg] Fix some issues found by Coverity and some found while fixing</li>
 <li>[tg] <tt>Build.sh</tt> options: <tt>-t</tt> <i>target-filename</i> (instead
  of <tt>mksh</tt>); <tt>-L</tt> to build a legacy mksh, current changes:<ul>
   <li>different <tt>$KSH_VERSION</tt> “LEGACY KSH” instead of “MIRBSD KSH”</li>
   <li>purely for running ksh88 and pdksh scripts; no command line editing</li>
   <li>use traditional “set -- $(getopt …); echo $?” mode always</li>
   <li>do not keep file descriptors private</li>
   <li>parse leading-zero-digit numbers as octal</li>
   <li>no mksh extension <tt>-T</tt></li>
   <li>use “long”, not “int32_t”, for arithmetics</li>
  </ul></li>
 <li>[tg] fix trimming with positional parameters (Debian #48453)</li>
 <li>[tg] ensure that case end tokens are not mixed up (Debian #220272)</li>
 <li>[tg] make alias definitions in mksh -c work (Debian #517009), hack</li>
 <li>[tg] Apply speed improvements and add <tt>MKSH_SMALL_BUT_FAST</tt></li>
 <li>[tg] Fix <tt>CONSERVATIVE_FDS</tt> use-before-definition bug</li>
 <li>[tg] Correct two regressions when tab-completing (LP: #1025843) and fix
  bugs in the same code wrt. completion display and other expansions</li>
 <li>[tg] Make quoted output of “typeset -p” AT&amp;T ksh93 compatible</li>
 <li>[tg] Implement <tt>${foo@Q}</tt> like <tt>${foo:Q}</tt> in make(1)</li>
 <li>[tg] Remove some unused code; more int → bool conversion</li>
 <li>[tg] Fix using here documents in COMSUB etc. (LP: #1030581)</li>
 <li>[tg] Fix ulimit builtin usage to match what limits we actually know</li>
 <li>[tg] Allow overriding /etc location, experts only (LP: #1039713)</li>
 <li>[tg] Update to Unicode 6.1.0</li>
 <li>[tg, Todd Miller] Avoid changing ps(1) output by accident</li>
 <li>[tg, ft, Christian Neukirchen] Detect zsh 2.5.02/NeXTstep for Build.sh</li>
 <li>[tg] Detect <tt>musl-gcc</tt> wrapper, define <tt>_BSD_SOURCE</tt> there,
  which is totally bogus, but musl, just like dietlibc, gets it wrong</li>
 <li>[tg] Improve compile-time assertions</li>
 <li>[tg] Repair <tt>select</tt> builtin without any choices given</li>
 <li>[tg] Add <tt>-DMKSH_GCC55009</tt> hack to avoid some compile-time
  assertions and introduce <tt>arith-mandatory</tt> in <tt>check.t</tt>
  to substitute for missing that compile-time check; will change</li>
 <li>[tg] Rewrite lots of code to not rely on <tt>-fwrapv</tt> so much</li>
 <li>[tg] <tt>Build.sh</tt>: Fix flock(2) detection on GNU/Linux</li>
 <li>[Andrew Kudryashov] Manpage: fix default for <tt>HISTSIZE</tt></li>
 <li>[tg] Add debugging aid (split-screen mechanism using GNU screen)</li>
 <li>[Andrew Kudryashov] Manpage, Website: point out correct mailing list</li>
 <li>[tg, Andrew Kudryashov] Fix <tt>~/nonexistant</tt> tab completion</li>
 <li>[tg] Optimise sh -c “[^]\t\n"-$&amp;-*;-?[\\`|]*” to exec, inspired by
  Jilles Tjoelker (<tt>-DMKSH_DISABLE_EXPERIMENTAL</tt> to ostracise)</li>
 <li>[tg] Fix <tt>$?</tt> inside <tt>eval</tt> (RedHat BZ#865121)</li>
 <li>[tg] Implement ksh93 feature <tt>${ foo;}</tt> (using tempfiles this
  time; exclude with <tt>-DMKSH_DISABLE_EXPERIMENTAL</tt> in R41)</li>
 <li>[tg] Run SIGINT check more reliably in the cat builtin (LP#1058815)</li>
 <li>[tg] Handle ^C in here documents, COMSUB, arithmetics (LP#1069428)</li>
 <li>[tg] Make <tt>dot.mkshrc</tt> usable with “set -o nounset” / “set -u”</li>
 <li>[tg, Clint Adams] Clean up and optimise the error handling code</li>
 <li>[tg] Fix and add some checks in the testsuite</li>
 <li>[tg] Sort list of variables in the source code when possible</li>
 <li>[tg] Add <tt>$BASHPID</tt> (for ormaaj) and <tt>$EPOCHREALTIME</tt></li>
 <li>[tg] Improve documentation, <tt>#ksh</tt> IRC channel homepage</li>
 <li>[tg, RT] Minix 2 also doesn’t have gettimeofday(2) ⇒ check for it</li>
 <li>[tg] Fix an input command line editing display redrawing issue</li>
 <li>[tg] Track the tty to keep <tt>$COLUMNS</tt> and <tt>$LINES</tt>
  up-to-date after a <tt>SIGWINCH</tt> even in scripts</li>
</ul>
<p id="r40f">mksh R40f fixes a critical bug as well as this:</p><ul>
 <li>[tg, RT] Implement fcntl(2)-based advisory locking as an alternative
  iff flock(2) is not found (LP: #912691); keep trying in the face of EINTR</li>
 <li>[tg] Fix severe regression wrt. initialising tty(4) states</li>
 <li>[tg] Improve testsuite, build-time checks and debugging output</li>
 <li>[tg, RT, winstonw] Improve portability to BeOS (works), Cygwin (good),
  Dell UNIX (works somewhat, but not with gcc), LynxOS (works somewhat),
  NeXTstep (works but not OpenStep 4.2), USL C compiler, SCO OpenServer (good),
  SCO UnixWare (good), Plan 9 (still broken), Syllable Desktop (broken?)</li>
 <li>[tg] <tt>rlim_t</tt> is supposed to be unsigned</li>
 <li>[tg] Some code, warning and spelling cleanup</li>
 <li>[tg] New <tt>Build.sh</tt> environment configurable: AWK (= awk)</li>
 <li>[tg, DONG-DONG YANG] Add safety net in the Emacs line editing code</li>
 <li>[tg] No longer rely on env(1), id(1), printf(1) in the testsuite, and
  strcasecmp(3), strcasestr(3), strncasecmp(3) in the code</li>
 <li>[tg, stsc, RT] Reduce system requirements of <tt>check.pl</tt> further</li>
</ul>
<p id="r40e">mksh R40e is another must-have bugfix update:</p><ul>
 <li>[tg, Jilles Tjoelker] skip readonly check in unevaluated ternary twig</li>
 <li>[tg, anonymous] fix all remaining <tt>ifs.sh</tt> testcases</li>
 <li>[tg] No longer try to build with GCC and C99 extensions</li>
 <li>[tg, Jilles Tjoelker] Do not expand aliases in COMSUB twice</li>
 <li>[tg] Honour UTF-8 multi-byte character boundaries when doing partial
  tab-completion insertions (LP: #909025) to fix RedHat BZ#745702</li>
 <li>[tg] Fix R40 (BZ#496791) regression with IOACT in TIF (LP: #907224)</li>
 <li>[tg, ft] Darn persistent history code worst offenders (LP: #906914)</li>
 <li>[tg] Fix some gc-sections, GCC and Clang/scan-build warnings/issues</li>
 <li>[tg, 28C3] dot.mkshrc hash functions: partially address LP: #909818</li>
 <li>[tg] Only compile divmod(0x80000000, -1) code in when not unneeded</li>
 <li>[tg, RT] Move mirtoconf checks and <tt>INCLUDES_ONLY</tt> parts of
  <tt>sh.h</tt> around to ensure prerequisites are always available</li>
 <li>[tg, RT, ir0nh34d] Pass mksh.exe to testsuite, if such thing is generated,
  and deal with Cygwin passing just “mksh” in argv[0] in such cases</li>
 <li>[tg] Imply -DMKSH_ASSUME_UTF8=0 on MSYS; optimise checks</li>
 <li>[tg, Jb_boin] Fix regression introduced in R35b by jaredy’s security
  patch where TTIME trashed a non-TCOM string argument (e.g. in TFOR)</li>
 <li>[tg] Better support for tcc; fix GCCism that accidentally crept in</li>
 <li>[tg] Deal with UTF-8 when reporting jobs’ commands</li>
 <li>[RT] Add SkyOS to known OS list</li>
 <li>[tg, RT] Support Minix in its variants Minix 3 and Ninix 3 better</li>
 <li>[tg] Drop some Android-specific unused code (lsmod builtin)</li>
 <li>[tg, RT, lewellyn] Support QNX and various versions of BSD/OS better</li>
 <li>[tg] More code cleanup and new developer-only debugging functions</li>
 <li>[tg, Andrew Kudryashov] Fix some tab completion related escaping bugs</li>
 <li>[tg, draenog] Honour COLUMNS and LINES from the environment in scripts</li>
 <li>[tg, winstonw] The sleep built-in utility now blocks more signals</li>
 <li>[tg] Warn when using another deprecated function that will be removed</li>
</ul>
<p id="r40d">mksh R40d is a must-have bugfix update:</p><ul>
 <li>[tg] New <tt>test.sh</tt> ‘-f’ option (same as ‘-C fastbox’)</li>
 <li>[tg] Drop using <tt>set -o noglob</tt> inside pushd/popd/dirs</li>
 <li>[tg] Use += more in <tt>dot.mkshrc</tt> and keep strings shorter</li>
 <li>[tg] Correct interworking between <tt>local</tt> and <tt>set -A</tt></li>
 <li>[tg] Fix out-of-bounds memory access on strings of 32 KiB length</li>
 <li>[tg] <tt>MKSH_DISABLE_DEPRECATED</tt> (for integrators)</li>
 <li>[tg, Jilles Tjoelker] test(1) built-in behaves exactly as POSIX says</li>
 <li>[tg] Move compile-time assertions to Build.sh from misc.c#ifdef DEBUG</li>
 <li>[tg] Invocation documentation is at the bottom of Build.sh</li>
 <li>[tg] <tt>test.sh</tt>: verbosely look for perl(1) interpreter to use</li>
 <li>[tg] New tests for integers (base 1‥36, base unspecified, base OOB)</li>
 <li>[tg] Correct error paths for <tt>typeset -n</tt> global state</li>
 <li>[tg] Deprecate interpreting "010" as octal number, <em>will</em> go</li>
 <li>[tg] Improvements re. integer handling; more explicit manpage text</li>
 <li>[tg] Do not use <tt>caddr_t</tt> on Linux, so dietlibc stops bitching</li>
 <li>[tg, Jilles Tjoelker] Catch division/modulo overflow 0x80000000/-1</li>
 <li>[tg] Emacs mode ^O regression fix when the fetched lines are edited</li>
</ul>
<p id="r40c">mksh R40c collects stable development, mostly fixes:</p><ul>
 <li>[tg, Wouter Verhelst] Fix <tt>${foo%\?}</tt> in <tt>-o sh</tt></li>
 <li>[jonthn, Snader_LB] Fix spelling mistakes</li>
 <li>[cnuke] Fix bugs spotted during porting to OPENSTEP</li>
 <li>[tg, jg71] Unbreak building stristr with MKSH_ASSUME_UTF8 defined</li>
 <li>[tg] Fix most of the issues Jerker Bäck encountered on Interix</li>
 <li>[tg] Wrap access(2) as it may return false positive for X_OK on root</li>
 <li>[OpenBSD] Upper bound Emacs mode command repeat by input line length</li>
 <li>[tg] Improve <tt>CPPFLAGS</tt> mangling in <tt>Build.sh</tt></li>
 <li>[Snader_LB] Several comment, documentation and website fixes/updates</li>
 <li>[tg] Avoid identifiers and cpp(1) macros with two underscores in a row,
  and those with a trailing underscore; they are reserved for the OS</li>
 <li>[tg] Fix accidental behavioural change wrt some built-in parameters</li>
 <li>[RT, Chris “ir0nh34d” Sutcliffe] Port to MSYS</li>
 <li>[tg, Markus Duft, Bruno Haible] Interix select(2) bug workaround</li>
 <li>[tg] Manpage fixes</li>
 <li>[tg] Deprecate the “command line begins with ‘!’ for fc -e -” wbx hack</li>
 <li>[tg] Promote <tt>x=(a b); x+=(c d)</tt> to a core mksh(1) feature</li>
 <li>[tg] Testsuite fixes for Hurd, MSYS; warning fixes for dietlibc</li>
 <li>[tg] Fix R40 regression misparsing <tt>$(case x in (x) :; esac)</tt></li>
</ul>
<p id="r40b">mksh R40b introduces several <em>desired</em> fixes:</p><ul>
 <li>[tg] Don’t busy-loop on <tt>nameref ARY=ARY</tt> (LHS = RHS)</li>
 <li>[tg, yofuh] Tabcomplete <tt>~foo</tt> like <tt>$FOO</tt> (LP: #710539)</li>
 <li>[tg] Code cleanup, style, and minor assorted fixes</li>
 <li>[tg] Tabcomplete <tt>~foo/M↹</tt> (with slash) economically</li>
 <li>[tg] Add new <del>experimental</del> <tt>global</tt> builtin, doing
  the same as <tt>local</tt> (<tt>typeset</tt>, really – but that doesn’t
  deserve its name) does, except localising all parameters it touches</li>
 <li>[tg] Better error messages with non-integral environment imports</li>
 <li>[tg] <tt>$RANDOM</tt> environment import accepts any string now</li>
 <li>[tg, Lucas Holt] Add <tt>setenv</tt> cshism to <tt>dot.mkshrc</tt></li>
 <li>[tg, Johannes] Allow ^C to interrupt the built-in cat(1)</li>
 <li>[tg, Arkadiusz Miśkiewicz, Kacper Kornet] Fix mksh taking down the entire
  terminal, hard, when scripts use <tt>$COLUMNS</tt> and fork off utilities;
  regression introduced in mksh R37 (sorry, no regression test possible)</li>
 <li>[tg, Arkadiusz Miśkiewicz] Properly mark need-ctty regression tests</li>
 <li>[tg] MKSH_NO_EXTERNAL_CAT – Quell the external cat(1) calls magic</li>
 <li>[tg, Arkadiusz Miśkiewicz] Yes, “echo” is not portable, document</li>
 <li>[tg] Improve content and look of the manual page</li>
 <li>[tg] Move /etc/{,suid_}profile to /system/etc/ on Android</li>
 <li>[tg] Prevent more compiler warnings; catch build errors earlier</li>
</ul>
<p id="r40">mksh R40 is a major everything release:</p><ul>
 <li>[tg] Correct small mistakes in manpage and build script</li>
 <li>[ahoka, tg, stippi, bonefish, cnuke] Port to <a
  href="http://www.haiku-os.org/">Haiku</a> (and probably, implicitly,
  BeOS; this is not tested though)</li>
 <li>[tg, stippi] Add Haiku specific RLIMIT_NOVMON as ‘V’ to ulimit builtin</li>
 <li>[tg] Let Build.sh cope with dirname(1) unavailability</li>
 <li>[tg] In the Emacs editing mode, hi-bit7 octets are now considered
  “motion characters” for word boundaries – Esc+b, Esc+f, ^W, …</li>
 <li>[tg] Make EXECSHELL default configurable at compile time (embedded)</li>
 <li>[tg] If MKSH_SMALL do not compile in “set -o bgnice” by default</li>
 <li>[tg] Rework how RLIMIT_{AS,RSS,VMEM} map to ‘m’ and ‘v’ ulimits</li>
 <li>[tg] Add some more OS specific limits seen in zsh</li>
 <li>[tg] SUSv4 ${v=a\ b} and "${v=a\ b}" and ${v-a\ b} compliance, tests</li>
 <li>[tg] Make "~/.mkshrc" path configurable at compile time (embedded)</li>
 <li>[tg] Fix SUNWcc 12.1 error message scan in build phase=u</li>
 <li>[tg, Johannes Sixt, Geoff Clare] Fix variable assignment scope during
  command execution (expansion vs. assignment execution environment);
  [Herbert Xu, Geoff Clare] Add more regression tests for this</li>
 <li>[tg] Fix single quotes in "${foo#bar}" (differs from "${foo-bar}")</li>
 <li>[oksh] Fix mknod(8) usage message: b|c are <em>not</em> optional</li>
 <li>[tg, oksh] Fix "${x#?}" expansion when quoted (quotes, space)</li>
 <li>[tg] Make default temporary directory configurable at compile time</li>
 <li>[tg] Fix performance deficiencies in the built-in realpath function</li>
 <li>[tg] Deprecate Build.sh <tt>-longoptions</tt> in favour of short ones:
  <tt>-valgrind</tt> becomes <tt>-g</tt> (like debug), <tt>-combine</tt> and
  <tt>-llvm</tt> become <tt>-c {combine,llvm}</tt> and the LLVM optimiser
  flags are passed via <tt>-O</tt> = <tt>-o -std-compile-opts</tt></li>
 <li>[tg] New Build.sh options <tt>-c dragonegg</tt> (for using the LLVM <a
  href="http://dragonegg.llvm.org/">plugin</a> to GCC 4.5 with inter-module
  optimisation), <tt>-v</tt> (version)</li>
 <li>[tg] Document another way to get a coloured PS1 in the manpage</li>
 <li>[tg] Disallow some more kinds to trim a vector; Debian #581867</li>
 <li>[oksh] Simplify some code; RCSID and comment sync with OpenBSD ksh</li>
 <li>[oksh] Apply diff from manuel giraud to keep track of LINENO in a trap</li>
 <li>[tg] Remove arc4random(3) functionality; seed an LCG depending on the
  OS doing Address Space Layout Randomisation; speed up (we will use either
  arc4random_pushb_fast(3) if it exists or arc4random_pushb(3) if forced by
  the user with <tt>-DMKSH_A4PB</tt> e.g. on Cygwin)</li>
 <li>[tg] Fix spelling mistakes in <tt>dot.mkshrc</tt></li>
 <li>[tg] Implement “live” window resize for the Emacs editing mode</li>
 <li>[tg] More fixes for bugs found by Valgrind and LLVM+Clang scan-build</li>
 <li>[tg] For script compatibility support “set ±o arc4random” during a
  transition period until R40 is out (but issue a warning to stderr)</li>
 <li>[oksh] Add <tt>(</tt>, <tt>)</tt>, <tt>((</tt> to reserved words in
  the manual page and fix some formatting errors with GNU groff’s mdoc</li>
 <li>[tg] Make printf.c.1.15 use mksh’s shf_* routines instead of stdio</li>
 <li>[tg] Fix <tt>-Wc++-compat</tt> except implicit casts from/to "void *"</li>
 <li>[tg] Correct shf buffer I/O routines to avoid a memory corruption bug
  discovered by Waldemar Brodkorb and other bad effects</li>
 <li>[tg] Fix NULL pointer dereference during iteration loop when checking
  for alias recursion; discovered by Michal Hlavinka</li>
 <li>[tg] More int → bool conversion, whitespace and general code cleanup</li>
 <li>[tg] Fix window size not being checked during runtime of external
  programmes by not relying on SIGWINCH so much but instead checking
  before every interactive editing of a command line</li>
 <li>[tg] Improve mksh(1) manpage coverage, remove mentions of not-mksh</li>
 <li>[tg] Use wcwidth() from system on MirBSD</li>
 <li>[tg] u_int32_t is no longer needed (only for OpenBSD’s pre-ISO-C99
  arc4random API, which we no longer call), so don’t provide it from
  <tt>Build.sh</tt> any longer</li>
 <li>[tg, tonnerre] Scan for <tt>uint8_t</tt> and provide if not found</li>
 <li>[tg] Fix realpath builtin for “/file/” arguments wrt. POSIX</li>
 <li>[tg] Do not generate &lt;stdint.h&gt; from Build.sh as file any more
  if it is missing; rather let sh.h define the types appropriately and fix
  related compiler warnings</li>
 <li>[tg] Add “cat” builtin (defers to external if options are given)</li>
 <li>[tg] Reduce size by improved string pooling, improving struct packing,
  lowering size of some allocation chunks, and better code</li>
 <li>[tg] Document 「x=$(eval $(cat)) &lt;&lt;'EOF'」 workaround for the <a
  href="https://bugzilla.redhat.com/show_bug.cgi?id=496791">$(…)
  parsing bug</a> in the mksh(1) manual page and on the Red Hat Bugzilla</li>
 <li>[tg] Add support for handling a “--” argument to more builtins</li>
 <li>[tg] Correct some error messages and typos</li>
 <li>[Jeff Hamilton] Don’t alias stop, suspend on Android (system specific
  conflict for stop; suspend just joined the boat)</li>
 <li>[tg] Address what few concerns Chris Palmer (Android security team) had:
  check all multiplications and some additions for integer overflows, mostly
  in allocation context, and check setres{u,g}id/setuid for EAGAIN iff the
  target OS is known to be returning it (Linux only, right now)</li>
 <li>[OpenBSD] Some small manpage fixes</li>
 <li>[tg] Clean up mirtoconf and build warnings with some compilers</li>
 <li>[tg] Fix <tt>\c?</tt> vs. <tt>\c~</tt> mis-documentation in mksh(1)</li>
 <li>[tg] Remove the somewhat-portable <tt>setmode.c</tt> from the mksh
  source distribution and demote mknod(8) to an optional builtin, disabled
  by default, manually re-enabled in the installer only on MirBSD</li>
 <li>[tg] Regenerate wcwidth table from Unicode 6.0.0</li>
 <li>[tg] Change behaviour of argument-less exit in traps to match SUSv4,
  original patch from Jonathan Nieder (Debian #599484)</li>
 <li>[tg] <tt>dot.mkshrc</tt> no longer <tt>export</tt>s <tt>$PS1</tt>,
  as recommended by Frank Terbeck, to avoid confusing other shells</li>
 <li>[tg] The character width table is now in sync with Unicode 6.0.0</li>
 <li>[tg] MKSH_SMALL doesn’t imply HAVE_REVOKE=0 any longer</li>
 <li>[tg] Ignore a ‘$’ preceding ‘"…"’ (like bash, ksh93)</li>
 <li>[tg] Make “foo=&lt;&lt;EOF” a direct assignment of here document (or
  here string) to string variable</li>
 <li>[tg] Add KSHEGID, KSHGID, KSHUID variables (idea from Richard K.)</li>
 <li>[tg] Option -d to read specifies a delimiter, like ksh93 (10x dgk)</li>
 <li>[tg] Extension ${foo@#} expands to hash of $foo (mksh specific)</li>
 <li>[tg, Jörg-Volker Peetz] Emacs prev-hist-word resets the counter if other
  editing commands were run in between; repeat calling works, even together
  with arguments, now; arguments are 0-based (Debian #603801)</li>
 <li>[tg] Introduce MKSH_NOPROSPECTOFWORK which implies MKSH_UNEMPLOYED
  and additionally disables job signals, |&amp;, sigprocmask(2), etc.</li>
 <li>[tg] POSIX: <tt>trap 'echo foo' UNKNOWN</tt> is not a syntax error</li>
 <li>[tg] Do not use <tt>&lt;sys/file.h&gt;</tt> unless it exists</li>
 <li>[tg] <tt>dot.mkshrc</tt>: When we set a UTF-8 locale (e.g. for the
  GNU OS), we must also <tt>set -o utf8-mode</tt> to match it</li>
 <li>[tg] Don’t append a space after tab-completing a parameter
  substitution that doesn’t contain a glob/extglob (LP: #710539)</li>
 <li>[tg] Limit history file size to 1 GiB for sanity</li>
 <li>[tg] Add <tt>smores</tt>, a more(1)-like pager, as shell function
  to <tt>dot.mkshrc</tt> (not control character safe but tty aware)</li>
 <li>[tg] Make builtins directly callable; <tt>utf8-mode</tt> is determined
  by LC_ALL/LC_CTYPE/LANG environment variables in that case</li>
 <li>[tg] If the interactive shell uses setlocale(3)/nl_langinfo(3) to divine
  <tt>utf8-mode</tt>, fall back to environment variables unless success</li>
 <li>[tg] From a direct builtin call, echo(1) behaves POSIXish</li>
 <li>[tg] Replace some MirBSD utilities with links to mksh(1) and ensure
  some integration to keep compatibility</li>
 <li>[tg] Add a microsecond capable sleep(1) builtin [updated 20110213]</li>
 <li>[tg] If the built-in cat is invoked from a direct builtin call, it
  now properly handles the POSIXly demanded ‘-u’ option (as a no-op)</li>
 <li>[tg] Support the <tt>PIPESTATUS</tt> array (like GNU bash)</li>
 <li>[tg] Port to MiNT / FreeMiNT (Atari m68k operating system)</li>
 <li>[tg] Do not close filedescriptor #3 (controlling tty) on UWIN</li>
 <li>[tg] Make the tree printing code safe for re-entrancy of output</li>
 <li>[tg] Implement recursive parser for $(…) to fix RedHat BZ#496791</li>
 <li>[tg] Use the existing state machine, a recursive parser and retracing
  the input stream for correct <tt>x=(…$((…$(…)…))…)</tt> parsing</li>
 <li>[tg, Jb_boin] complain about <tt>${x:1:2:3}</tt> instead of crashing</li>
 <li>[tg, Jb_boin] make optional printf(1) builtin __CRAZY=Yes clean and
  prevent it from crashing by reading past end of (invalid) format strings</li>
 <li>[tg] abort(3) on rogue pointers <tt>#ifdef DEBUG</tt></li>
 <li>[tg] Correct some documentation, code commentary, etc.</li>
 <li>[tg] Handle the UTF-8 Byte Order Mark in <tt>$(…)</tt> expressions</li>
 <li>[tg] Speed up reading input by checking for the BOM only once</li>
 <li>[tg] Fix mis-detection of gcc format attribute (false negative)</li>
 <li>[tg] Include some Android specific hacks (no change on other OEs)</li>
 <li>[tg, Jb_boin] In <tt>${foo/bar/baz}</tt> expressions, when adjourning
  empty patterns to avoid running into a busy-wait loop, remember to skip
  the anchor characters (‘#’ or ‘%’) at the beginning, yet keep the special
  meaning replacing a string begin or end with a string has</li>
 <li>[tg] Write a pattern optimiser that is run internally before calls to
  the pattern matching code always (currently, replaces <tt>a@(b@(c)d)e</tt>
  with <tt>abcde</tt> but keeps <tt>@(a|a)</tt>, then (in a second pass)
  collapses adjacent asterisk (‘*’) wildcards into a single one; this fixes
  some of the symptoms of severe performance issues our pattern matching code
  has to the extent that it can prevent busy-looping (found by Jb_boin)</li>
 <li>[tg, Chris “ironhead” Sutcliffe, Chet Ramey, Eric Blake, David Korn]
  Handle pathnames with exactly two leading slashes well (SUSv4 3.266)</li>
 <li>[tg, Wayne Pollock, Bart Schaefer] Fix here documents, add testcases</li>
 <li>[tg] Fix corner case <tt>${##1}</tt>, add tests for that and
  <tt>${##}</tt> and <tt>${#?}</tt></li>
 <li>[tg] Bring back “test -H” ifdef S_ISCDF (for HP-UX) from pdksh</li>
 <li>[tg] Align read-only variable behaviour with (future) POSIX</li>
 <li>[tg] Permit <tt>${foo%(*}</tt> on FSH (Debian #619947)</li>
 <li>[tg, rsc] Allow skipping testcases that need a controlling tty</li>
 <li>[tg] Correct skipping the UTF-8 BOM when identifying a file</li>
 <li>[tg] Do not use <tt>&lt;stdbool.h&gt;</tt> any longer</li>
 <li>[tg] Use double-underscore-framed <tt>__attribute__</tt>s</li>
 <li>[tg] Always catch <tt>SIGALRM</tt> (for the sleep builtin)</li>
 <li>[tg, wbx] Functions now inherit a global <tt>set -x</tt></li>
 <li>[tg] Do not explicitly initialise static globals to 0/NULL</li>
 <li>[tg] Eliminate some dead code (functions, globals)</li>
 <li>[tg] Correct more tree handling bugs and merge similar code</li>
 <li>[tg] Add “+=” to concatenate scalars and append to arrays</li>
 <li>[tg] Support empty here document delimiters</li>
 <li>[Robert Luberda] Fix the four-argument form of test(1)</li>
 <li>[tg] Drop the pre-POSIX ability to “test -t” without specifying “fd”</li>
 <li>[tg] Defer dropping an alias in favour of a POSIX function to when the
  function is actually defined and check for the closing parenthesis too</li>
 <li>[tg, Kacper Kornet] Implement a new regression test attribute
  <tt>need-pass: {yes|no}</tt> and exit 1 if unexpected fails occur</li>
 <li>[tg] Add <tt>;&amp;</tt> and <tt>;|</tt> for <tt>case</tt></li>
 <li>[tg] Rewrite the <tt>read</tt> builtin and its documentation;
  adding <tt>-A</tt> (read IFS words into array), <tt>-a</tt> (read
  octets/wide characters into array), <tt>-N</tt>/<tt>-n</tt> (read
  only / up to <i>z</i> bytes), <tt>-t</tt> (read with timeout)</li>
 <li>[tg] Add <tt>-e</tt> option to <tt>cd -P</tt> (POSIX 2011)</li>
 <li>[tg] Update <tt>dot.mkshrc</tt> to use the new features</li>
 <li>[tg] Fix gsf’s ifs.sh tests of the <tt>read</tt> builtin</li>
 <li>[tg, cnuke] Improve support for AIX, Cygwin, IBM XL C</li>
 <li>[tg] Add tests for <tt>x+=(y z)</tt> and <tt>;;&amp;</tt> extensions</li>
 <li>[tg, hondza] Fix regression in tab completion result display</li>
 <li>[tg, Frank Terbeck] Fix parsing <tt>x=(…)</tt> expressions</li>
 <li>[tg, Jb_boin] Increase hash table limit; don’t crash when reaching
  the limit; work around bug in GCC 4.1 on Debian Etch</li>
 <li>[tg] New <tt>-c lto</tt> option to use Link Time Optimisation (GCC)
  with automatic fallback to <tt>-c combine</tt> if unavailable</li>
 <li>[tg] Improvements for <tt>-c dragonegg</tt>, <tt>-c llvm</tt> (with
  gcc+dragonegg, or llvm-gcc and clang, respectively), and TenDRA</li>
 <li>[tg] Let code samples in <tt>check.t</tt> and <tt>dot.mkshrc</tt>
  take care of the new features; fix some longstanding bugs in them</li>
 <li>[tg] Add missing flush in rewritten read builtin for prompting</li>
 <li>[tg] Minix builds now automatically disable the ulimit builtin</li>
</ul>
<p id="r39c">mksh R39c is an important minor bugfix release:</p><ul>
 <li>[tg] Build system, code, docs and testsuite cleanup, also style(9)</li>
 <li>[tg] Build.sh now requires people to whitelist conftest*.c</li>
 <li>[tg] AIX builds no longer pull in libcrypt uselessly by default</li>
 <li>[tg] Parse and evaluate <tt>${parameter op word}</tt> correctly</li>
 <li>[tg] Fix possible SIGSEGV in interactive mode <tt>bind</tt> builtin due
  to mis-optimisation of gcc combined with a bogus prototype; discovered by
  Grml.org's Frank Terbeck (ft), thanks!</li>
 <li>[tg] Prevent Build.sh from accidentally removing <tt>mksh.1</tt></li>
</ul>
<p id="r39b">mksh R39b is a major stability and bugfix update:</p><ul>
 <li>[tg] Clean up some more strict *roff or compiler warnings: dashes,
  undefined macros; casting errors (constness, signedness, type width/class)
  and catch possibly unaligned pointer dereferences early; remove code/rodata
  redundancies, plug memory leaks</li>
 <li>[smultron] Tweak the manual page: point out the word “colour”</li>
 <li>[tg] Optimise dot.mkshrc DJB’s CDB hash implementations; add Bob
  Jenkins’ one-at-a-time hash (standard and leading-bit initialised); fix
  signedness in expressions; let the hashes use stdin if "$*" is empty, like
  Lb64{en,de}code; use “[[ -o utf8-mode ]]” ipv “[[ $- = *U* ]]”</li>
 <li>[tg] Build.sh portability fixes: missing prerequisite headers; ensure
  $CC is never called without $CFLAGS; fix <tt>test.sh</tt>, et al.</li>
 <li>[tg] Optimise internal variable representation; use one-at-a-time hash;
  cache hash values for faster resizing at zero memory cost; clean up hash
  table (keytab) code; switch hash table collision resolution algorithm to
  Python’s; prepare for later changes (commented out)</li>
 <li>[tg] Fix type errors in the source code (int → bool, size_t,
  mksh_uari_t)</li>
 <li>[tg] Fix “${foo:bar:$baz}” not working (missing substitute() call)</li>
 <li>[tg] Implement “typeset ±a” as nop</li>
 <li>[tg] Support ksh93-like “${!foo[@]}” listing the <em>keys</em> (indicēs)
  of all set array elements – zsh does it too (${(k)foo}), bash4 can’t :þ</li>
 <li>[tg] Support bash/ksh93-like “array=([key]=value …)” and (additionally)
  “set ±A array -- [key]=value …” to directly specify indicēs to use</li>
 <li>[tg] Document the optional, unsupported, printf(1) builtin in TFM</li>
 <li>[tg] Replace realpath(3) dependency and internally used get_phys_path()
  pdksh code with own implementation; always offer the realpath builtin</li>
 <li>[tg] Implement nameref='typeset -n' (bounded variables) like AT&amp;T
  ksh93 but with mksh-style nested/dynamic scoping and on-use resolving;
  they cannot currently be stored in an array though</li>
 <li>[tg] Add “chdir” builtin doing the same as the “cd” special builtin</li>
 <li>[tg, David Korn] Document more differences between mksh (and pdksh)
  and AT&amp;T ksh (or, more specific, ksh88, ksh93) in the manual page</li>
 <li>[tg] Support “'a'” as an alternative to “1#a”, like ksh93 does</li>
 <li>[tg] Add ksh’s “test -o ?foo”: true if “foo” is a valid shell option,
  where “foo” can be “xtrace” or “-x” or “+x” (these three are equivalent)</li>
 <li>[tg] Support “$'…'” backslash-expanding single-quoted strings, as
  requested by David G. Korn, with almost the same syntax and semantics</li>
 <li>[tg] Unify backslash expansion code (C style vs. print builtin mode)</li>
 <li>[tg] Support “function stop () {” bashism</li>
 <li>[tg] For several items in the source code that require order to be
  kept, provide it from multiply-included header files; sort correctly</li>
 <li>[tg] Get rid of unneeded FMONITOR (-m) for shells without job control;
  sync list of flags, comments and manpage with reality</li>
 <li>[tg] If MKSH_SMALL, reduce size by removing editor functionality</li>
 <li>[tg] Support VT100 emulator style {Ctrl,Alt}-CurLeft/Right keycode
  sequences with new <tt>vt100-hack</tt> emacs bind function (LP: #355883)</li>
 <li>[cnuke, tg] Remove more, like GNU bash extensions, from MKSH_SMALL</li>
 <li>[tg] Remove more functionality, such as Emacs command line editing mode
  bind key macros, and other extensions, from MKSH_SMALL to help floppies</li>
 <li>[tg] Make forking and subshells less expensive wrt. random state</li>
 <li>[tg] Build and source code fixes for / caught by SUNWcc, HP aCC, pcc,
  DEC ucode cc (MIPS), GCC, LLVM clang</li>
 <li>[tg] Make undef/def MKSH_NOVI into 0/1 MKSH_S_NOVI build flag</li>
 <li>[tg] Get rid of "U getenv" in nm(1) output, we already import environ</li>
 <li>[tg] Simplify $RANDOM handling: reads are now either arc4random(3) (if
  available: set +o arc4random is no longer possible) or an LCG; writes are
  arc4random_pushb(3) if available for explicit writes, arc4random_addrandom(3)
  otherwise, or another one-at-a-time hash feeding the LCG; furthermore, RANDOM
  is now always exported to and imported from (implicit read: no push to kernel
  done) the environment vector on startup and spawning</li>
 <li>[tg] Internal code cleanup, optimisation, moves to different files;
  dead/commented out code removal; code beautification</li>
 <li>[tg] Document mksh does not exactly use OPTU-8/OPTU-16 in the manpage,
  as well as when characters, octets, or screen columns are used</li>
 <li>[tg] Fix exit 127 on "mksh /tmp/horsies" ipv of 1 on ENOENT, #548744</li>
 <li>[Clint Adams] Fix typos in the testsuite</li>
 <li>[tg, Clint Adams] Begin a shared testsuite for mksh and posh</li>
 <li>[tg] Make 「((foo) || bar)」 and 「((foo) | (bar))」 work</li>
 <li>[tg] Fix lazy evaluation of assignments by ternary operator, #445651</li>
 <li>[tg] Work around Cygwin bugs (quirks) hindering the testsuite</li>
 <li>[tg] In FSH mode, “echo [-n] 'foo\x40bar'” shall not be expanded</li>
 <li>[tg] Let <tt>Build.sh</tt> run with AIX bsh (SVR3 Bourne Shell)</li>
 <li>[tg] Let <tt>set -- $(false); echo $?</tt> return 0 (POSIXly correct)
  in FSH mode, 1 (needed for getopt(1) support) otherwise</li>
 <li>[tg] Changes of variables inside Bourne style POSIX functions indeed
  affect the current execution environment (of the function caller)</li>
 <li>[tg] Fix getopts behaviour (sync with AT&amp;T ksh93 not ksh88)</li>
 <li>[tg] “eval $(false)” shall return 0 (Debian #550717)</li>
 <li>[tg] Ensure that <tt>/* apo'strophes in comments */</tt> work</li>
 <li>[tg] New <tt>Build.sh</tt> flag <tt>-M</tt> to not compile but spit out a
  <tt>Makefrag.inc</tt> file from the current build environment, such as the
  (cross)compiler, CFLAGS, LDFLAGS, etc. which then can be sourced by e.g. the
  Android NDK, or built with make(1) – BSD make and GNU make have been tested,
  but almost all makes should work if the source and build directories are the
  same or VPATH is supported at least (use of this option is discouraged)</li>
 <li>[tg] Overhaul and simplify handling of (special) variables</li>
 <li>[tg] Further reduce memory (code/data) and import footprint</li>
 <li>[tg] Use functions without <tt>PATH_MAX</tt> limit on GNU/Hurd</li>
 <li>[tg] Fix tab completing pathnames containing ‘:’, ‘=’, ‘$’ or ‘`’</li>
 <li>[tg] Support ‘-T &lt;tty&gt;’ even if <tt>MKSH_SMALL</tt> and fix it</li>
 <li>[tg] Remove "which" alias "whence -p" to allow "which -a" in
  <tt>dot.mkshrc</tt> and add more examples, some commented out</li>
 <li>[tg] Fix print_columns() issue with displaying items where characters
  had differing number of octets and columns, and the off-by-one which had
  hidden this problem with 2-octet 1-column and 3-octet 2-column chars</li>
 <li>[tg] Beautify the manpage in both AT&amp;T nroff and GNU groff</li>
 <li>[tg] Fix null-expansion of “${x%?}” if <tt>$x</tt> is unset</li>
 <li>[tg] Make some globbing (<tt>${x%?}</tt>) operate on characters instead
  of octets; update manual page to reflect that others still do and remove
  wording that let people think we’d ever support POSuX character classes</li>
 <li>[tg] New <tt>${%foo}</tt> returning width of $foo in screen columns,
  or -1 if $foo contains an ASCII/latin1/Unicode C0/C1 control character</li>
 <li>[tg] Fix subtle possible portability problem wrt. <tt>CHILD_MAX</tt></li>
 <li>[tg] Honour <tt>±U</tt> on command line of an interactive shell</li>
 <li>[tg] Fix dead stores and other bugs pointed out by the Clang static
  analyser; put assertions in places it has false positives (-DDEBUG)</li>
 <li>[tg] Plug uninitialised memory access and possible out-of-bounds read
  of a buffer caught by Valgrind; change one memcpy(3) to memmove(3) where
  srcbuf and dstbuf overlap; place (-DDEBUG) workaround for false positive</li>
 <li>[tg] HP aCC: change IA64 default from forced <tt>+DD64</tt> to using the
  default; support Bundled compiler; fix double-<tt>const</tt> warning</li>
 <li>[tg] Rework <tt>__attribute__</tt> compiler capability check</li>
 <li>[tg] Apply errno save/restore related fix from (sync with) oksh</li>
 <li>[tg] Build.sh: output message when switching from autoconfiguration to
  building / output generation (requested by Matt “lewellyn” Lewandowsky);
  use “conftest.c” ipv “scn.c” (to please ccache); check for “-xipo” with
  SUNWcc (suggested by lewellyn as well)</li>
 <li>[tg] Allow “unset foo[*]” (keep attributes) and “typeset foo[*]” (for
  forward-compatibility; in R39b it’s the same as “typeset foo”)</li>
 <li>[tg] When persistent history is enabled (but not MKSH_SMALL) and used,
  intertwine the shells concurrently accessing $HISTFILE better ⇒ sync on
  empty or duplicate line as well (requested by Maximilian “mxey” Gaß)</li>
 <li>[tg] Split off “set ±o posix” and “set ±o sh” again, to be somewhat
  more compatible to various old or vendor versions of pdksh and mksh:<ul>
   <li>MKSH_BINSHREDUCED sets FSH but not FPOSIX</li>
   <li>MKSH_MIDNIGHTBSD01ASH_COMPAT depends on FSH but not FPOSIX</li>
   <li>The <tt>echo</tt> built-in behaves the same for FPOSIX and FSH</li>
   <li>File descriptors &gt; 2 are not closed for both FPOSIX and FSH</li>
   <li>Both “set -o posix” and “set -o sh” call “set +o braceexpand”</li>
   <li>In contrast to R39 and below, the errorlevel of “set -- $(getopt ab:c
    "$@")” is now the same in ksh and FPOSIX mode (0) and only FSH will use
    the errorlevel of <tt>getopt</tt> (used to be the other way round)</li>
  </ul></li>
 <li>[tg] Document some more shortcomings in the mksh(1) manual page</li>
 <li>Contributed <tt>printf.c</tt> fixes:<ul>
   <li>[tg] Make printf(1) builtin use “$'…'” mode, like ksh93</li>
   <li>[tg] Fix const-cleanliness</li>
  </ul></li>
 <li>Contributed <tt>arc4random.c</tt> fixes:<ul>
   <li>[tg] Fix buffer overflows in the Win32 codepath of the contributed
    <tt>arc4random.c</tt> file and limit the rate of expensive CryptGenRandom
    calls if we have other (seed in registry key) entropy pools</li>
   <li>[tg] Fix uninitialised memory access caught by Valgrind</li>
  </ul></li>
 <li>[tg] New <tt>Build.sh</tt> flag <tt>-valgrind</tt> since I’m lazy</li>
</ul>
<p id="r39">mksh R39 evolved into these through various means:</p><ul>
 <li>[tg] Shut up a bogus gcc warning during configuration process</li>
 <li>[tg] Spell <tt>AT&amp;T</tt> consistently in the source code</li>
 <li>[tg] Tweak mksh(1) manual page, from wbx@ and «lewellyn:#ksh»</li>
 <li>[tg] <tt>dot.mkshrc</tt>: fix <tt>$@</tt> vs. <tt>$*</tt> mix-up</li>
 <li>[tg] <tt>dot.mkshrc</tt>: add DJB cdb hash function</li>
 <li>[tg] Sync with oksh: fix Vi editing mode word erase handling, again</li>
 <li>[tg] Skip whitespace between POSIX style shell function name and its
  definition parenthesēs during detection if an alias of the same name
  already exists to be more robust (Debian #535970)</li>
 <li>[tg] Build system improvements for ACK and nwcc, both on Debian sid</li>
 <li>[tg] Fix spelling error in changelog discovered by Lintian</li>
 <li>[tg] Aligh “set -o nounset” / “set -u” behaviour with future POSIX
  standard, as discussed with GNU bash maintainers, David Korn from AT&amp;T
  ksh93, and The Open Group; prompted by use in Debian; Debian #539538</li>
 <li>[tg] add an unsupported way to make printf(1) a builtin</li>
 <li>[tg] Build system and regression test code and comment improvements:
  better and more comments matching reality better; more reliability w.r.t.
  passed CPPFLAGS; more of the MKSH_SMALL changes may be overridden, all of
  them are now enumerated on the webpage; fixed some breakage; portability</li>
 <li>[tg] MKSH_NOPWNAM and MKSH_SMALL will now both disable the <tt>~fac/</tt>
  (homedir) expansion code wholly if defined, not just getpwnam(3) calls</li>
 <li>[tg] shells without job control no longer define the standard “stop” and
  “suspend” aliases (they are pointless anyway); regression tests know</li>
 <li>[tg] use system RCS ID macros on MirBSD if decent enough</li>
 <li>[tg] shut up bogus gcc 4.5/trunk warnings caused by over-optimisation</li>
 <li>[tg] restore ANSI C compilability broken in R38 (speed up, even)</li>
 <li>[tg] use memcpy(3) ipv strlcpy(3) if possible and safe and secure</li>
</ul>
<p id="r38c">mksh R38c contains the following fixes:</p><ul>
 <li>[tg] Fix regression tests on OSes insisting on a shebang (Cygwin)</li>
 <li>[Sean Boudreau] QNX 6.4.2 ed(1) is said to have the bugs fixed</li>
 <li>[tg] <tt>Build.sh</tt> bugfixes: <tt>-DMKSH_BINSHREDUCED</tt> can also
  be given without <tt>-DMKSH_SMALL</tt>; allow <tt>HAVE_REALPATH=x</tt> and
  <tt>HAVE_REVOKE=x</tt> in the environment to re-enable these even if
  <tt>-DMKSH_SMALL</tt> disables them by default, like mknod already did</li>
 <li>[tg] <tt>-DMKSH_ASSUME_UTF8=0</tt> skips the environment checks, like
  <tt>-DMKSH_ASSUME_UTF8=1</tt>, but disables the <tt>utf8-mode</tt></li>
 <li>[tg] Apply some more KNF – style(9) – to the source; clean it up
  and further optimise for small size</li>
 <li>[OpenBSD] Fix segfaults caused by missing check for end of input
  in the tokeniser on “let --” and other input</li>
 <li>[OpenBSD] Make Vi editing mode <tt>^W</tt> behave like Emacs mode’s</li>
 <li>[tg] If no killpg(3) is available, use kill(2) and hope it works</li>
 <li>[tg] <tt>-DMKSH_NO_LIMITS</tt> skips trying to build the ulimit code</li>
</ul>
<p id="r38b">mksh R38b fixes the following problems:</p><ul>
 <li>[André Wösten] Add __NO_EXT_QNX to avoid picking up the wrong
  waitfor() from &lt;libutil.h&gt; in (while porting to) QNX 6.4</li>
 <li>[tg] Plug memory corruption issue introduced in R38</li>
 <li>[tg] Amend <tt>dot.mkshrc</tt> with a base64 en-/decoder in shell</li>
 <li>[tg] Import a manpage fix via OpenBSD from Alan R. S. Bueno</li>
</ul>
<p id="r38">mksh R38 comes with these changes and fixes applied:</p><ul>
 <li>[tg] Improve regression test output debugging</li>
 <li>[tg] Fix &lt;libutil.h&gt; prerequisites on MidnightBSD in mirtoconf</li>
 <li>[tg] Mention that RedHat BZ#496791 cannot currently be fixed in the
  manpage by discouraging use of apostrophes in comments in comsubs; add
  appropriate (expected-fail) regression tests</li>
 <li>[tg] Sync with OpenBSD ksh (mostly a no-op)</li>
 <li>[James Butler] Add search-history-up and search-history-down keybindings
  (tcsh-like) to the Emacs command line editing mode</li>
 <li>[tg] Bind new search-history-{up,down} to ANSI PgUp and PgDn keys</li>
 <li>[tg] Document ANSI default keybindings (↑↓←→ Home End Del PgUp PgDn)
  in the mksh(1) manual page as well</li>
 <li>[tg] Optimise internal UTF-8 handling code for size and reusability</li>
 <li>[tg] Incompatible change: <tt>${foo:1:2}</tt> and <tt>${#foo}</tt> now
  operate on characters, not on bytes. Characters are octets (<tt>set +U</tt>)
  or (utf8-mode) MirOS OPTU-8 multibyte characters (<tt>set -U</tt>)</li>
 <li>[tg] Improve regression tests relating to <tt>${foo:1:2}</tt> and
  <tt>${#foo}</tt> and <tt>let wc=1#x</tt> and utf8-mode</li>
 <li>[tg] Use per-file copyright notices, move global text to manpage</li>
 <li>[tg] Expose new MKSH_MIDNIGHTBSD01ASH_COMPAT ifdef; change it to
  only trigger if FPOSIX (or MKSH_BINSHREDUCED and <tt>/bin/sh</tt>)</li>
 <li>[tg] Remove already-dead “#if 0” style debugging code</li>
 <li>[tg] Change some code into a more portable fashion, optimise</li>
 <li>[tg] Allow <tt>[[ $foo ]]</tt> (ksh93 extension) mentioned by pgas</li>
 <li>[tg] Clean up mksh and the contributed <tt>arc4random.c</tt> for some
  conversion, enum and other warnings for gcc-snapshot trunk r147610</li>
 <li>[tg] Ensure no function uses more than 768 bytes of stack either</li>
 <li>[tg, wbx] Add extension to make “!string” lines work like in GNU bash</li>
</ul>
<p id="r37c">mksh R37c provides these follow-up fixes:</p><ul>
 <li>[tg] Improve præprocessor detection/work in <tt>Build.sh</tt></li>
 <li>[tg] Decouple MKSH_CONSERVATIVE_FDS from MKSH_SMALL</li>
 <li>[tg] Enable MKSH_CONSERVATIVE_FDS by default on Minix 3</li>
 <li>[tg] Work around the (in-)famous ACK "const" bug</li>
 <li>[tg] Optimise structure alignment and padding; Debian #522778</li>
 <li>[tg] Retain <tt>LOCPATH</tt> (for glibc locale) in <tt>check.pl</tt></li>
 <li>[tg] Document, simplify and clean up the code better</li>
 <li>[tg] Use <i>mirbsd.org</i> eMail addresses consistently</li>
</ul>
<p id="r37b">mksh R37b comes with the following fixes on top:</p><ul>
 <li>[tg] Clean up build system and <tt>dot.mkshrc</tt> some more</li>
 <li>[tg] Add getrusage(2) implementation using times(3) if none found</li>
 <li>[tg] Add jobless mode (for Minix 3, Plan 9, …)</li>
 <li>[tg] Detect the Amsterdam Compiler Kit in the build system</li>
 <li>[tg] If no <tt>RLIM_INFINITY</tt> don’t try to do ulimit</li>
 <li>[tg] Work around gcc4 strict warnings vs. broken system headers</li>
 <li>[tg] Work around systems with mmap(2) but no munmap(2)</li>
 <li>[tg] Fix (disallow) bind key macro recursion (instead of beeping and
  going into an endless loop), allow multi-line bind key macros (mostly
  from Alexander Hall), remove dead code (the beeping) and optimise</li>
 <li>[tg] Add (commented out, undesired, standards compliance breaking)
  compatibility code to MidnightBSD 0.1 <tt>/bin/sh</tt> for ctriv</li>
 <li>[tg] Clarify the mksh(1) manual page even more</li>
 <li>[tg] Port to <a href="http://www.minix3.org/">Minix 3</a> + GCC</li>
</ul>
<p id="r37">mksh R37 has major standards compliance improvements:</p><ul>
 <li>[tg] Rename <tt>-o utf8-hack</tt> to <tt>-o utf8-mode</tt></li>
 <li>[tg] Fix spacing mode error (pasto) in the mdoc(7) format manpage</li>
 <li>[tg] Implement <tt>$((#…))</tt> unsigned arithmetic calculation,
  needed for arc4random_uniform(3)-in-korn-shell implementation</li>
 <li>[tg] Really preserve LD_LIBRARY_PATH in <tt>check.pl</tt></li>
 <li>[tg] New <tt>Build.sh</tt> option ‘-combine’ for building mksh(1) at
  once with “-fwhole-program --combine” (gcc4, llvm-gcc4) if available</li>
 <li>[tg] Always set <tt>COLUMNS</tt> and <tt>LINES</tt> trying as hard
  as we can, using <tt>TIOCGWINSZ</tt> even if used without FTALKING,
  and with the sane 80x24 default if the ioctl(2) fails</li>
 <li>[tg] Handle _POSIX_VDISABLE being undefined (e.g. Linux/klibc)</li>
 <li>[tg] &lt;sys/file.h&gt; is only required for flock(2)</li>
 <li>[tg] Fix multi-column output routine for the corner case if the
  screen is less wide than one output column; 10x Gábor Gergely</li>
 <li>[tg] Fix ${foo/@(%)/\\x} in UTF-8 mode (utf_widthadj for control
  characters U+0080‥U+009F is slightly broken; this fix shifts the
  brokenness into the command line editing mode only)</li>
 <li>[tg] Introduce <tt>mksh_ari_t</tt> and <tt>mksh_uari_t</tt>
  internal types to limit arithmetics to 32 bit on all systems;
  currently depending on the already-used standard <tt>int32_t</tt>
  and <tt>uint32_t</tt> types. Future expansion to 64 bit possible.
  Document that shell integer variables use this type.</li>
 <li>[tg] The variables PGRP, PPID, RANDOM and USER_ID are now unsigned</li>
 <li>[tg] Fix two off-by-ones breaking PS1 ending with a newline; bug
  reported by Matthias Diener</li>
 <li>[tg] Just pass through C1 control characters for now</li>
 <li>[tg] Code and internal interfaces cleanup</li>
 <li>[tg] Regression test fixes for Cygwin env(1) being unsorted</li>
 <li>[tg] Replace the memory allocator by something equally simple
  and homegrown but optimised for use with mksh and free checking</li>
 <li>[tg] Import a couple of minor fixes (e.g. spelling) from oksh</li>
 <li>[tg] Fix problems with "set -e" for real; from oksh, Debian #518359</li>
 <li>[tg] In "set -o posix" mode, have limited echo(1) to improve
  standards compliance; the exact feature set is open for discussion,
  e.g. with pkgsrc® people; for now, only <tt>-n</tt> as first arg</li>
 <li>[tg] Make test builtin operator precedence consistent; from oksh</li>
 <li>[tg] Revamp and fold and enhance the regression tests</li>
 <li>[tg] Document somewhat surprising behaviour in mksh(1) better;
  here: <tt>[ x -eq y ]</tt>; for gps23 from <tt>#ksh</tt></li>
 <li>[tg] Reduce memory consumption by allocator simplification</li>
 <li>[tg] Fix bugs spotted by DEC ucode cc (ULTRIX) and gcc 1.42 (BSD/OS)</li>
 <li>[laffer1] Make mksh the default <tt>/bin/sh</tt> in MidnightBSD</li>
</ul>
<p id="r36b">mksh R36b is a compatible, major bug-fix update:</p><ul>
 <li>[tg] Add check for naming the output file “scn” instead of “a.out” or
  “a.exe” when compiling scn.c, for Haiku, from Adam “replaced” Hoka</li>
 <li>[tg] Rewrite utf_backch macro and x_bs2 function into a combined
  x_bs3 function for the Emacs editing mode, to optimise them and get
  rid of the use of <tt>__typeof__</tt> (suggested by Anders “ragge”
  Magnusson after the problem was spot by replaced) and one of the uses
  of the statements-as-expressions feature</li>
 <li>[ahoka] Add mirtoconf check for nice(3), missing on Haiku</li>
 <li>[tg] Remove all uses of the statements-as-expressions feature by
  rewriting the source code accordingly and optimising some parts</li>
 <li>[tg] Recognise nwcc (Nils Weller’s C compiler) in <tt>Build.sh</tt></li>
 <li>[tg] If &lt;strings.h&gt; exists, pull it in for strcasecmp(3)</li>
 <li>[tg] Welcome QNX/Neutrino; work around broken <tt>/bin/ed</tt></li>
 <li>[tg] Simplify, shorten, speed up <tt>PS1</tt> in <tt>dot.mkshrc</tt></li>
 <li>[tg] Remove some dead code courtesy of scan-build native runs</li>
 <li>[tg] Add some casts to prevent LLVM+Clang warnings</li>
 <li>[tg] Work around llvm-gcc-4.2.1 -Wformat pickyness</li>
 <li>[tg] Add new <tt>Build.sh</tt> option ‘-llvm’ (clang, llvm-gcc)</li>
 <li>[tg] Speed up mirtoconf if ‘-DMKSH_ASSUME_UTF8’ is set</li>
 <li>[tg] Add the workaround for Debian #492377 into the main mirtoconf
  function (hiding gcc errors during the configure phase) because Gentoo
  has similar scanner issues; reported by Hanno Böck</li>
 <li>[tg] If an MKSH_SMALL has arc4random(3), skip the rand(3)/srand(3)
  fall-back altogether to shrink size, also removed need for time(3)</li>
 <li>[tg] Fix alias expansion recursion check if the word to be expanded
  is immediately followed by end of input, add test case; spotted by
  Michael Hlavinka in pdksh and mksh; RedHat #474115</li>
 <li>[tg] Fix string/wdstring confusion preventing bashiop (&amp;&gt;foo)
  to work inside a function, add regression test, limit to 99 fds</li>
 <li>[tg] change regression tests to <tt>set -U</tt> or <tt>set +U</tt>
  instead of <tt>set -o utf8-{hack,mode}</tt>, as well as query using
  <tt>$-</tt> ipv <tt>$(set +o)</tt> (easier and more reliable)</li>
 <li>[tg] Add comment to regression tests which can fail on slow machines
  or Cygwin environments due to timing issues</li>
 <li>[tg] Remove a lot of superfluous casts, improve type cleanliness</li>
 <li>[tg] Insert a couple of <tt>/* CONSTCOND */</tt> for lint</li>
</ul>
<p id="r36">mksh R36 features the following changes:</p><ul>
 <li>Fix <tt>Build.sh</tt> invocation without ‘-r’, 10x Elias Pipping</li>
 <li>Mention the <strong>MirOS OPTU-8</strong> and <em>MirOS OPTU-16</em>
  encodings in the manual page, now that we have a name for it</li>
 <li>In the MirOS base installation via <tt>Makefile</tt> (and <em>not</em>
  via <tt>Build.sh</tt>, run with <tt>-DMKSH_AFREE_DEBUG</tt> (unless ramdisc
  or MirOS-stable or formal release, i.e. DEBUGLIBS is not set)</li>
 <li>Merge final version of jaredy’s fix for the stack-storage free issue</li>
 <li>Be more efficient in the mksh(1) manual page example section</li>
 <li>Fix multi-line <tt>$PS1</tt> in the (officially orphaned and unsupported)
  “vi” command-line editing mode (regression; reported by asarch via IRC)</li>
 <li>Fix multi-line <tt>$PS1</tt> where the last line is too long for the edit
  area to fit on the screen, genuine (pdksh, probably) bug, while here</li>
 <li>Plug a memory leak; patch from jaredy taken via oksh</li>
 <li>Fix mis-information re. <tt>-o posix</tt> mode in the manual page</li>
 <li>If <tt>-o posix</tt> is set, do not keep file descriptors created via
  I/O redirection, as Korn Shells do, private; add regression test; Debian
  Debian #499139; reported by Markus Schaber and Agustin Martin Domingo</li>
 <li>Work around GNU getopt(3) violating every single standard in existence
  regarding flag placement on the command line (test suite), from Debian</li>
 <li>Sync internal wcwidth(3) implementation with Markus Kuhn’s latest</li>
 <li>Optimise internal multibyte⇐⇒wide character conversion functions</li>
 <li>Emacs editing mode: if the input line is modified (after a history
  search) or newly typed or empty, preserve it when scrolling the history,
  requested by many (at least: gecko2, Matthias Diener, Benny, myself)</li>
 <li>Do not push lines beginning with an IFS character or IFS white space
  into the history (at the <tt>PS1</tt> prompt only), for Matthias Diener</li>
 <li>Emacs editing mode: if an Escape character ends a history search, and
  Escape is bound to prefix-1, and the following character in prefix-1 mode
  is a prefix-1 or prefix-2 key, do not swallow the Escape character</li>
 <li>Emacs editing mode: new command “edit-line”, bound to <tt>^Xe</tt> by
  default like in lynx(1), allows for interactive editing of the current
  input line similar to Vi mode “v” command, requested by asarch in IRC</li>
 <li><tt>Build.sh</tt>: remove the problematic ‘-q’ option</li>
 <li>Fix internal type abuse: convert more int to bool</li>
 <li>Ignore duplicates when pushing interactive lines into the history,
  prodded by Matthias Diener, wanted by myself for quite a while</li>
 <li>Ignore duplicates after <tt>fc -s</tt> editing too, fix regress test</li>
 <li>&lt;libutil.h&gt; needs &lt;sys/types.h&gt; on some platforms</li>
 <li>Implement somewhat different behaviour for repeated invocations of the
  Emacs prev-hist-word editing command, so that even a single invocation
  trashes “the mark”, but repeated invocations scroll up the history, similar
  to what GNU bash attempts and zsh does, by request of Han Boetes</li>
 <li>Improve support for AIX 5.2 / xlC V7.0, from Jupp “cnuke” Söntgen,
  which does not respect cc -qversion or ld -V (new for improved version
  reporting on AIX 5.3 / xlC V9.0), but also errors out if a static bounds
  checker on arrays is triggered by pointer assignment (such as <tt>p =
  arr[sizeof (arr)];</tt>, even if the only accesses are of the <tt>*--p</tt>
  style, by preventing it from recognising static storage in this case</li>
 <li>Neither AIX has a UTF-8 locale, so disable use of setlocale(3) there</li>
 <li>Fix some of the things the LLVM-Clang scan-build static analyser spotted
  and a couple of compile time warnings</li>
 <li>Reduce amout of stack space eaten, prefer <tt>.bss</tt> storage</li>
 <li>Restore old input line on history search abortion</li>
 <li>(<i>unrelated</i>) update <tt>arc4random.c</tt> sample to allow use of
  arc4random_pushb(3) on GNU/Cygwin by using Microsoft® CryptoAPI</li>
 <li>Bring back automatic <tt>-o posix</tt> setting if the shell is invoked
  as “sh” or “-sh” (unless compiled with MKSH_SMALL), add regression test,
  change it to be only compiled in with <tt>-DMKSH_BINSHREDUCED</tt></li>
 <li>Improve mksh(1) manual page</li>
 <li>Add support for Digital UNIX (DEC OSF/1) V2.0 (MIPS) with DEC C and
  ucode ld, work around a bug by conditionally using static linking</li>
 <li>Change <tt>Build.sh</tt> slightly to accomodate for “true Bourne
  shells” such as OSF/1 V2.0’s <tt>/bin/sh</tt> in printf(1) detection</li>
 <li>Improve OS / compiler / linker version reporting</li>
 <li>Optimise the code and <tt>Build.sh</tt> slightly</li>
 <li>(<i>unrelated</i>) fix <tt>arc4random.c</tt> sample missing defns</li>
 <li>Use the Unicode MirOS Licence template proper in <tt>copyright</tt></li>
</ul>
<p id="r35b">mksh R35b comes with the following bug fixes:</p><ul>
 <li>IRIX also has no UTF-8 locale at all, confirmed by Elias Pipping</li>
 <li>Fix regression test suite for MKSH_SMALL</li>
 <li>Bring in latest changes from oksh (OpenBSD ksh, not DeliLinux crap)</li>
 <li>Fix abuse and unsafe use of str_save() and str_nsave()</li>
 <li>Optimise the implementations of str_save() and str_nsave()</li>
 <li>If MKSH_AFREE_DEBUG is defined, guard against afree()ing a pointer
  which has not been allocated from the given pool, from Todd C. Miller</li>
 <li>Fix attempt to free a pointer to stack (function-local) storage when
  redefining a function containing a call to the “time” built-in, discovered
  by Elias Pipping, patch by Jared Yanovich, help from Todd C. Miller</li>
 <li>Protect a little against people not running “./test.sh -v” but calling
  it with, for instance, GNU bash (as homsn did…)</li>
 <li>Honour <tt>$PERL</tt> environment variable in test.sh, improve scanning
  for Perl, do not use potentially undefined $^O, print Perl version</li>
 <li>Add &lt;sys/types.h&gt; as &lt;ulimit.h&gt; requirement (dietlibc)</li>
 <li>Work around bug in BSD/OS 3.1 /bin/ksh (PD KSH v5.2.8 96/08/19)</li>
 <li>Add regression tests from OpenBSD’s &lt;bsd.regress.mk&gt; suite</li>
 <li>Use better CPPFLAGS for AIX, Minix 3 (from pdksh)</li>
 <li>Expose the “s ≠ NULL” str_[n]save_() API and use it where the string
  can never be NULL (local stack storage), from gcc-4.2 warnings</li>
 <li>Clean up pointer-to-integer-cast warnings in the mirtoconf process</li>
</ul>
<p id="r35">mksh R35 comes with helluva changes:</p><ul>
  <li>Simplify and refactor the ulimit builtin, partially from oksh</li>
 <li>Some style cleanup; use appropriate integer types</li>
 <li>Fix a bug in table (e.g. kill -l, tab completion) display: the width
  of non-ASCII characters is now honoured in the utf8-hack mode</li>
 <li>Improve handling of invalid UTF-8 in certain areas, and multibyte
  (UTF-8 / CESU-8) in general</li>
 <li>When using “typeset -Z«n»” on an integer variable with a base other
  than ten, zero-pad the value instead of the base – pdksh, oksh, zsh, and
  AT&amp;T ksh93 are wrong here; GNU bash doesn’t even have typeset</li>
 <li>Improve parsing of “set +o” output where done (dot.mkshrc, check.t)</li>
 <li>Improve regression tests</li>
 <li>Support for base-1 numbers: in non-utf8-hack mode, ‘1#x’ means the same
  as the ASCII code for ‘x’ (e.g. 78hex), where ‘x’ is any single octet (byte);
  in utf8-hack mode, ‘x’ is <em>either</em> a <strong>valid and minimalistically
  encoded</strong> UTF-8 multibyte character in the range 0000‥FFFD, <em>or</em>
  a single octet <em>with no trailing octets (bytes)</em>, which will then be
  converted as if it were an ASCII value, or, if bit7 is set, be mapped into the
  PUA range of EF80‥EFFF assigned by CSUR for this purpose; this mapping is, in
  both cases, bidirectional; the planned base-0 number support is not possible
  with the code, so use base-1 (with utf8-hack disabled, or &amp; 0xFF) instead
  (while it is recommended to parse only single octets, there is a regression
  test showing correct and safe multibyte parsing, which however is error-prone
  to implement and thusly not recommended) – “genial” replaced@TNG, “this sounds
  fun” ggergely, agreed bsiegert@ and others</li>
 <li>Pull in more current versions of supplied files; use Unicode 5.0</li>
 <li>Clean up unused definitions in build system; document MKSH_CLS_STRING</li>
 <li>Remove advertising clause from <tt>copyright</tt> file; while we’d be
  pleased to be mentioned if something contains our code, tg@ will no longer
  enforce the requirement to advertise with that specific formula, and we’d
  prefer if people remember the OpenHAL vs ath5k incident and that they cannot
  simply change licencing of existing code; patches sent to the MirOS Project
  for inclusion shall be accepted if they’re agreed to match this licence</li>
 <li>Simplify <tt>dot.mkshrc</tt> sample file: licence is merged into the main
  copyright file; AT&amp;T ksh93 compatibility was improved</li>
 <li>Fix a display problem regarding fullwidth characters (e.g. CJK)</li>
 <li>Set the “C” locale in <tt>Build.sh</tt> for tool execution; otherwise,
  certain OEs behave strange; thanks to Adam “replaced” Hoka for spotting</li>
 <li>Use <tt>en_US.utf8</tt> as UTF-8 locale for the testsuite for now</li>
 <li>If <tt>setlocale(LC_CTYPE, "")</tt> is not available, look at the
  environment variables ourselves – brings UTF-8 support to poor OSes</li>
 <li>Remove some now-dead code; speed up configuration process; shrink</li>
 <li>Default to no setlocale(3) due to stubbed or missing locale support
  on GNU/Cygwin, OpenBSD, OSF/1 in <tt>Build.sh</tt>; a few more that are
  quite unlikely to have a UTF-8 locale: BSD/OS, Interix, Minix, PW32, Ultrix,
  AT&amp;T UWIN; default to always UTF-8 on Plan 9</li>
 <li>Fix for testsuite unexpected failure if running as root in one case</li>
 <li>Initialise all shell integer variables (<tt>OPTIND</tt>, <tt>PPID</tt>,
  <tt>RANDOM</tt>, <tt>SECONDS</tt>, <tt>TMOUT</tt>) to base 10</li>
 <li>Reintroduce from mksh pre-R24 shell integer variable <tt>PGRP</tt> set
  to the PID of the process group leader via getpgrp(2)</li>
 <li>New shell integer variable <tt>USER_ID</tt> set to the geteuid(2) and
  used by <tt>dot.mkshrc</tt> to speed up logins, saves a spawn of id(1),
  mentioned by and realisation planned with Andreas "gecko2" Gockel</li>
 <li>Fix <tt>dot.mkshrc</tt> tilde replacement in both <tt>$PS1</tt> and the
  pushd/popd/dirs implementation when the home directory is empty, the root
  directory, or ends with a slash (disable replacement in that case)</li>
 <li>Support dietlibc, force it into providing a BSDish <tt>caddr_t</tt></li>
 <li>Do not use LDFLAGS and LIBS while compiling with <tt>-c</tt></li>
 <li>Add realpath(3) builtin, to further speed up logins and chdirs</li>
 <li>Optimise the code somewhat by making use of possible assumptions</li>
 <li>Set the “C” locale in <tt>test.sh</tt> as well to quell warnings</li>
 <li>Split the regression tests that use locale between <tt>en_US.utf8</tt>
  and <tt>en_US.UTF-8</tt>, since not all OSes support either one, and
  make only HP-UX and GNU use the latter</li>
 <li>Fix kill, mknod(8) builtin usage msg, from Igor Sobrado via oksh</li>
 <li>Use proper <tt>ptrdiff_t</tt> casts for pointer arithmetics, inspired
  by an oksh commit from Federico Schwindt</li>
 <li>Remove check category “pdksh” from <tt>check.t</tt> and test script</li>
 <li>Improve Darwin, OSF/1, HP aCC, SUNpro version reporting</li>
 <li>Support GNU bash “&amp;&gt;” extension, even better than they do,
  suggested by Lukas “smultron” from MidnightBSD</li>
 <li>Basic support for LLVM+clang in the build system with experimental
  “ccc” compiler driver; llvm-gcc worked as-is before already</li>
 <li>Better support for contributed <tt>arc4random.c</tt> file</li>
 <li>Do not spin if unlink(2) fails on $HISTFILE, from Decklin Foster</li>
 <li>Dump the perl(1) <tt>$^O</tt> variable in <tt>test.sh</tt> to logs</li>
 <li>Pull in latest changes from oksh</li>
 <li>Allow white space between a here string indicator and the string,
  accidentally discovered by twkm (#ksh, freenode)</li>
 <li>Allow fd specifications outside the 0‥9 range for I/O redirections,
  and bounds check them to be lower than the <tt>FDBASE</tt> definition,
  currently still 10 if MKSH_SMALL, 24 otherwise (unportable)</li>
 <li>Improve the regression test suite: for one test, we had a bizarre
  constraint telling it won’t work on UWIN, which was based upon false
  assumptions, but Tru64 would fail it since its cat(1) unexpectedly outputs
  some error messages (fix by closing stderr for cat); another test would
  unexpectedly print <em>no</em> error message on Solaris (fix by making
  the error message optional in the perlre(1) used)</li>
 <li>Switch back to en_US.UTF-8 for glibc, Debian can do both, Mandriva
  fails on en_US.utf8 (XXX no libc5 auto-detection to disable it)</li>
</ul>
<p id="r33d">mksh R33d is a quick security-update with these changes:</p><ul>
 <li>Move a portability define from <tt>sh.h</tt> to the <tt>setmode.c</tt>
  helper, as it’s <em>only</em> needed there, and we want to use the latter
  from MirMake as well</li>
 <li>SECURITY: when spawning mksh on a new terminal, for example with
  <tt>sudo mksh -lT/dev/ttyC7</tt>, flush all of that tty’s I/O first
  (CVE-2008-1845)</li>
 <li><tt>dot.mkshrc</tt>: ensure “ls” is no alias, don’t hardcode its path</li>
</ul>
<p id="r33c">mksh R33c issues fixes for the following issues:</p><ul>
 <li>Handle Ultrix mmap(2) having a different prototype (returning a
  <tt>caddr_t</tt> instead of a <tt>void *</tt> and not defining
  MAP_FAILED; making Ultrix 4.5 a fully supported platform</li>
 <li>Decrease code size and optimise (using puts-style functions instead
  of printf-style functions for fixed strings; bool instead of int)</li>
 <li>Correct behaviour of “export”, “export -p”, “readonly”, “readonly
  -p”, “typeset”, “typeset -p”, “typeset” and their respective
  descriptions in the manual page; problem reported by Danijel Tasov</li>
 <li>Work around dup2(2) problem (preserving the close-on-exec flag)
  on Ultrix using code from mirbsdksh-1.11, lost in oksh</li>
 <li>Clean up <tt>Build.sh</tt> a little more</li>
 <li>Correct quotes and some other stuff in the regression tests;
  fix for running with old Perl (5.002 or so, Linux 2.0, BSD/OS)</li>
 <li>Export the new “__progname” and “__perlname” environment variables
  to the suite run from <tt>check.t</tt> in <tt>check.pl</tt></li>
 <li>Do not mistake IBM xlC and VisualAge for different things, thanks
  to Pascal “loki” Bleser from OpenSuSE for information on them</li>
</ul>
<p id="r33b">mksh R33b comes with the following minor fixes:</p><ul>
 <li>Work on porting to <a href="http://www.syllable.org/">Syllable</a>
  (again much improved; support now en par with Plan 9’s, thanks to Anthony
  Morphett &lt;awmorp@gmail.com&gt; – maybe the rest is a kernel bug?)</li>
 <li>Fix some minor code issues remarked by MIPSpro</li>
 <li>Port to SGI IRIX 6.5 (uname: IRIX64) using gcc and MIPSpro</li>
 <li>Scan for a lot more compilers; add support for MIPSpro</li>
 <li>Ignore if the OS doesn’t define <tt>MAP_FILE</tt> for mmap(2)</li>
 <li>Use <tt>sys/types.h</tt> as <tt>sys/mkdev.h</tt> dependency</li>
 <li>Enable OSF/1 V2.0 <tt>/bin/sh</tt> to run <tt>Build.sh</tt></li>
 <li>Add strcasecmp(3) proto for Ultrix 4.5 only (imake style)</li>
 <li>Add S_ISLNK if the OS doesn’t define it</li>
 <li>Use tempnam(3) if mkstemp(3) not found – <strong>not recommended</strong></li>
 <li>Reduce dependency on certain OE facilities: printf(1), fgrep(1) being
  able to scan for two patterns at the same time, perl5 being named perl</li>
 <li>New <tt>-T-</tt> option for dæmonisation, cf. man page</li>
 <li>Port to BSDi BSD/OS 3.1 (gcc 1.42 and gcc 2.7.2.1 supported)</li>
 <li>Simplify the <tt>dot.mkshrc</tt> file and make it more robust</li>
 <li>Report OE and <tt>$CC</tt> version in <tt>Build.sh</tt>, for logs</li>
 <li>Fix look’n’feel of the mksh(1) manual page, so that it still looks
  best in AT&amp;T nroff(1), looks much better in GNU groff (the PDF version
  we place on the website), and looks some better <em>and</em> gains the
  ability to copy’n’paste from it for GNU gnroff -Tutf8, originally prompted
  by Patrick “aptituz” Schoenfeld and “lintian -viI mksh*.changes”, but then
  improved (and nroff hacked) by tg@ a lot</li>
 <li>Shut up some gcc warnings (explicit braces; cast <tt>MAP_FAILED</tt>)</li>
 <li>Try to get rid of the test “if the compiler fails correctly” by using
  the errorlevel of the <tt>$CC</tt> process (except with Microsoft Visual C++
  which returns non-zero even on success sometimes), thus supporting DEC C on
  OSF/1 (and, quite possibly, gcc3 on Mac OSX Leopard)</li>
 <li>If revoke(2) and flock(2) are found, check if they’re declared</li>
 <li>Promote Tru64 to a fully supported operating environment, even though it
  needs a plethora of <tt>_*_SOURCE</tt> defines and has <tt>SIGMAX</tt>
  instead of <tt>NSIG</tt>; OSF/1 V4.0 and Tru64 (OSF/1 V5.1) are supported
  with both gcc and HP/Compaq/DEC C in various versions</li>
 <li>Generalise the workaround for incompatible <tt>sig_t</tt> across the
  platforms that need it (currently, OSF/1 and PW32)</li>
 <li>Shut up annoying warning about gcc 2.7.2.3, 2.8.1, 2.95.x not knowing the
  “-std=gnu99” and “-std=c99” options without setting proper errorlevel</li>
</ul>
<p id="r33">A release with many new features is mksh R33, look yourself:</p><ul>
 <li>Sync with OpenBSD ksh (no real functional changes)</li>
 <li>Enhance the <tt>print</tt> builtin with two new escape sequences:
  <tt>\x<b>AB</b></tt> parses the next up to two hexadecimal digits <b>AB</b>
  and outputs a raw octet (byte) whose ordinary value is <b>AB</b>;
  <tt>\u<b>ABCD</b></tt> parses up to four hexadecimal digits and outputs
  the UTF-8 (CESU-8) representation of the unicode codepoint U+<b>ABCD</b>
  from the BMP (Basic Multilingual Plane), not depending on the locale</li>
 <li>The <tt>.</tt> (“dot”) command (and its counterpart <tt>source</tt>)
  needs an argument (the script to source); from Debian pdksh package</li>
 <li>In the lexer, do not expand aliases if there is an opening parenthesis
  just after the token (from Debian pdksh). This fixes the namespace issue
  that caused a POSIX function definition <tt>stop() { … }</tt> to fail due
  to “stop” being a built-in Korn shell alias. Now, aliases are removed when
  a POSIX function with the same name is defined; Korn functions are still
  different: their definition does not fail, but the alias retains its
  precendence (unchanged behaviour)</li>
 <li>Accordingly, do not disable built-in aliases in POSIX mode any more</li>
 <li>Since POSIX mode now only turns off braceexpand mode (which can then
  be turned back on), do not handle being called as <tt>-sh</tt> or <tt>sh</tt>
  specially any longer</li>
 <li>Clean up the source code: make some constants private to the only file
  using it; optimise; comment some code; improve portability with regards to
  stupid tools in /usr/bin (or /usr/xpg4/bin) and foreign compilers</li>
 <li>Implement “here strings” (like ksh93 or zsh; GNU bash collapses white
  space if the string is not double-quoted): you can now replace <tt>print
  -r -- "$foo" | command</tt> with <tt>command &lt;&lt;&lt;"$foo"</tt> with
  the very same semantics as <tt>command &lt;&lt;EOF<br />$foo<br />EOF</tt>
  (stripping initial tabs is not possible)</li>
 <li>Implement string replacement <tt>${var/pattern/string}</tt> (where
  <em>pattern</em> is an extended glob pattern), like GNU bash; like with
  the substring accessor (<tt>${var: x: y}</tt>) mksh implements almost all
  corner cases (and double slash), but do not handle trimming arrays yet</li>
 <li><em>Side note:</em> You can now, as a consequence of the two items
  above, write, for instance, <tt>x=${x//foo*bar/baz}</tt> instead of the
  more complicated <tt>x=$(sed -e 's/foo.*bar/baz/g' &lt;&lt;&lt;"$x")</tt>
  or the mksh R32 and before idiom <tt>x=$(print -r -- "$x" | sed -e
  's/foo.*bar/baz/g')</tt> – be sure to check $KSH_VERSION first though</li>
 <li>Use the new <tt>&#36;Mdocdate&#36;</tt> RCS keyword in the manual page
  mksh(1) as well; since this is not portable in tmac.doc especially to GNU
  groff, prepend a seven-liner implementing it to the <tt>.Dd</tt> macro</li>
 <li>Fix a mistake in using the <tt>.Nm</tt> macro in the manual page</li>
 <li>Make <tt>Build.sh</tt> and the generated <tt>test.sh</tt> more chatty
  about what they’re doing and what versions (aids debugging build logs)</li>
 <li>Update the <tt>dot.mkshrc</tt> sample and make it more portable; it
 requires mksh R33 or above now though due to use of special functions</li>
 <li>Enhance the website, especially the section about official testing:
  now, the tests are split into tests done by us via Makefile (MirOS only),
  Build.sh (portably), porting frameworks, with arc4random.c added, tests by
  others via Build.sh, via packaging frameworks, failed tests; more links</li>
 <li>Note: the “vi” editing mode is code of historical value and, at the
  moment, unmaintained. It does not benefit from the fixes to the “emacs”
  editing mode (horizontal scrolling) or new features (bind keys that end
  their sequence with a tilde; UTF-8 support). Neither is it supported in
  either editing mode to bind keys that generate a sequence consisting of
  more than just a prefix (ESC, ^X, or ESC [), another octet and (“emacs”
  only) an optional tilde (but this might come in the future). This is
  explicitly mentioned here due to a user inquiry.</li>
</ul>
<p id="r32">Sported by mksh R32 are these changes:</p><ul>
 <li>Make checks for symbol declarations compile checks instead of link
  checks, as the binding may not succeed due to different symbol types,
  for instance on AIX, if the declaration does not match</li>
 <li>Widen the range of array indices to [0‥2³²-1], with negative values
  being mapped into the high-bit31 range for simplicity</li>
 <li>Fix the pipeline-as-coprocess internal error</li>
 <li>Do not require certain integer types to be defined any more</li>
 <li>Optimise the code and reduce its RAM usage</li>
</ul>
<p id="r31d">Everyone should upgrade to mksh R31d with fixes for…</p><ul>
 <li>Support pcc (the ragge version of the Portable C Compiler)</li>
 <li>Add pushd/popd/dirs functions (csh) and precmd/chpwd hooks (zsh) to
  <tt>dot.mkshrc</tt> which now requires readlink(1) with <tt>-f</tt>;
  requested by many (e.g. some Gentoo users; XTaran of symlink.ch)</li>
 <li>Enable colour escapes in <tt>dot.mkshrc</tt> since almost nobody groks
  how to do it right from the manual</li>
 <li>Remove <tt>-DMKSH_NEED_MKNOD</tt> checks from <tt>Build.sh</tt>,
  people should use the <tt>HAVE_MKNOD</tt> environment variable</li>
 <li>Implement parallel make in <tt>Build.sh</tt></li>
 <li>Fix another busy-loop spinning problem introduced by an icc warning,
  thanks to spaetzle@freewrt.org for keeping to bug me to look for it, as
  it affected GNU/Linux most, followed by Solaris, rarely BSD</li>
 <li>Improve standard integer type detection in <tt>Build.sh</tt></li>
 <li>Cleanups in code, build script and manual page</li>
</ul>
<p id="r31c">The mksh R31c (Solaris-only) upgrade for cnuke@ was caused by:</p><ul>
 <li>Clean up <tt>Build.sh</tt> and “test … -o …” doesn’t exist in Bourne</li>
 <li>Detect if the non-standard <tt>u_int32_t</tt> type, which was
  unfortunately used by the OpenBSD project in designing the standard
  arc4random(3) API, is present (which it isn’t on Solaris), and, if
  not, emulate it using the standard <tt>uint32_t</tt> (ISO C99) from
  &lt;stdint.h&gt;, which we fake as needed (if the standard integer
  types are not present, e.g. on PW32 and OSF/1); change mksh as well as <a
  href="http://cvs.mirbsd.de/contrib/code/Snippets/arc4random.c?rev=HEAD">the
  arc4random.c contribution</a> to not use these non-standard types</li>
 <li>Remove unused types from the faked &lt;stdint.h&gt; file</li>
</ul>
<p id="r31b">A quick upgrade, mksh R31b with major bug fixes:</p><ul>
 <li>Fix typo (blsk → bksl) in <tt>check.t</tt> test naming</li>
 <li>Autoscan for <tt>uint32_t</tt>, <tt>u_int</tt> etc. presence</li>
 <li>Fix some memory leaks, mostly by NetBSD® via OpenBSD</li>
 <li>The “unset” builtin always returns zero, even if the variable
  was already unset, as per SUSv3 (reported by Arkadiusz Miskiewicz
  via pld-linux → oksh)</li>
 <li>In tab-completion, escape the question mark, reminded by
  cbiere@netbsd.org, via oksh</li>
 <li>Fix a busy-loop problem, Debian #296446 via oksh</li>
 <li>Fix a few display output problems in the build script</li>
 <li>Shut up some gcc warnings on Fedora; beautify some code</li>
 <li>Support OSF/1 with gcc2.8, thanks to Jupp Schugt</li>
 <li>Fix gcc4 detection of __attribute__() on non-SSP targets</li>
</ul>
<p id="r31">mksh R31 was released as part of MirOS #10 with these news:</p><ul>
 <li>Support the TenDRA compiler (possibly also Ten15, not tried)</li>
 <li>Begin supporting Fabrice Bellard’s Tiny C Compiler (tcc on Debian
  cannot link due to duplicate symbols in GNU libc, thus unfinished)</li>
 <li>Improve some mirtoconf checks (most notably, mknod(2) and macros)</li>
 <li>Add new emacs editing command “clear-screen” (<tt>ESC ^L</tt>)
  as requested by D. Adam Karim &lt;archite@midnightbsd.org&gt;</li>
 <li>Support building for MidnightBSD</li>
 <li>Add new shell alias “source”, semantics like the GNU bash builtin</li>
 <li>Add new shell option “set ±o arc4random”, controlling whether rand(3) or
  arc4random(3) is used for the $RANDOM value, use arc4random_pushb(3)</li>
 <li>Add new builtin “rename” (just calls rename(2) on its arguments)</li>
 <li>Fix the inofficial OpenBSD port, from D. Adam “Archite” Karim, 10x</li>
 <li>Disable the less(1) history file by default (privacy issues) in the sample
  <tt>dot.mkshrc</tt> file; mention other things in <tt>etc_profile</tt></li>
 <li>Fix a syntax error in Build.sh checking for TenDRA</li>
</ul>
<p id="r30">A milestone in development: mksh R30 can do this:</p><ul>
 <li>Build on and for Solaris, Linux and MirBSD with Sun’s C compiler</li>
 <li>No longer build a statically linked shell by default; do not try,
  do not provide any means; user has to use LDFLAGS instead</li>
 <li>Remove some probably dead mirtoconf checks</li>
 <li>Remove commented out <tt>-fwhole-program --combine</tt> check and
  still active <tt>-fno-tree-vrp</tt> bug workaround thing, the latter
  because the bug seems to only appear for functions that also exist as
  a builtin (which was declared with the nonnull attribute)</li>
 <li>Fix a long-standing typo, 10x moritz@obsd</li>
 <li>Prefer more common signal names (SIGCHLD) over uncommon ones (SIGCLD)</li>
 <li>Quieten gcc and support SUNpro 5.8 on Solaris 10 on sparc64</li>
 <li>Optimise signal handling and detection; enable compilers whose
  præprocessor doesn’t have <tt>-dD</tt> to generate list of signals</li>
 <li>Optimise mirtoconf meta-checks for persistent history etc.</li>
 <li>Fix a bug preventing manual page generation on Solaris</li>
 <li>Add support for the Intel® C Compiler and quieten it a little; fix a few
  minor buglets (mostly type conversion) its too verbose warnings show, as
  well as some errno ab-/mis-use</li>
 <li>Remove support for honouring the <tt>CPP</tt> environment variable;
  <tt>$CC -E -</tt> is simply used instead in the places where <tt>$CPP</tt>
  was used previously, because that was used in other places already, and
  to prevent it from behaving differently from the $CC used</li>
 <li>If a file called <tt>arc4random.c</tt> is lying around in the source
  directory at mirtoconf time, scan for <tt>&lt;sys/sysctl.h&gt;</tt> and
  use the file if arc4random(3) isn’t found otherwise. From Debian.</li>
 <li>If the basename of argv[0] starts with “sh”, activate FPOSIX
  early, preventing some typical ksh aliases from being defined</li>
 <li>If FPOSIX, don’t pre-define aliases (except integer and local) to benefit
  operating environments that never heard of the great Korn Shell…</li>
 <li>#if defined(MKSH_SMALL) || defined(MKSH_NOVI) disable the vi
  editing mode</li>
 <li>Don’t try to execute ELF, a.out, COFF, gzip or MZ binaries</li>
 <li>Can be built on HP-UX (PA-RISC and IA64) with gcc or HP C/aC++</li>
 <li>Support <tt>x=(a b c)</tt> bash-like array initialisation</li>
 <li>Support <tt>${foo:2:3}</tt> bash-like substring expansion</li>
 <li>Many mirtoconf improvements, fixes; speed-up; better portability</li>
 <li>Enable compilation using Microsoft C/C++ Standard Compiler</li>
 <li>Add UWIN build target using various compilers with the cc wrapper</li>
 <li>Fix struct padding mistakes uncovered by the Microsoft compiler</li>
 <li>Fix double initialisation / unused value assignment errors unveiled
  by Borland C++ Builder 5.5</li>
 <li>Fix superfluous code detected by gcc 4.2</li>
 <li>Fix large file support for OSes that require CPPFLAGS contains
  <tt>-D_FILE_OFFSET_BITS=64</tt> – it was detected but not actually
  used in the build; thanks to hondza for the problem report!</li>
 <li>Give the lexer a bigger state stack if !MKSH_SMALL</li>
 <li>Prepare for addition of make(1)-style search/replace operations;
  correct the code for other substitution expansion operations</li>
 <li>Default $CC to cc not gcc, this is no non-unix-ware ☺</li>
 <li>Support AIX with gcc and xlC; clean up code to warning-free</li>
 <li>Prefer well-known signal names to alphabetically earlier ones</li>
 <li>Fix a bug delivering ERR and EXIT pseudo-signals to traps combined
  with “set -e”, thanks Clint Pachl and Otto Moerbeek for the hint</li>
</ul>
<p>In mksh R29g we MFCd the following changes:</p><ul>
 <li>Some optimisations from above; no longer execute foreign objects</li>
 <li>Improvements in checking for __attribute__, multi-idstring support,
  signals, types, arc4random.c; disable -fno-tree-vrp and -fwhole-program
  --combine; correct large file support (still kludgy but no longer buggy)</li>
</ul>
<p>Please use mksh R29f because of below modifications:</p><ul>
 <li>Fix detection of function prototypes (data declaractions were ok)</li>
 <li>Fix a regression introduced in R29e regarding the scroll bar</li>
 <li>Recommendation on <a href="#vsn">version numbering</a> changed;
  suffixes b, c, … match .2, .3, … like alphabetical numbering order</li>
</ul>
<p>Dedicated to David Ramsey and Coverity, mksh R29e unveils:</p><ul>
 <li>Don't poll in strcasestr(3) if setlocale(3) isn't used</li>
 <li>Remove some redundant or unused functions</li>
 <li>Fix a horizontal scrolling on tabcomplete bug, reported by David
  Ramsey, thanks a lot!</li>
 <li>Fix the utf8bom-3 regression test on MirBSD-current</li>
 <li>Some workarounds around problems found by Coverity Scan, mostly
  issues with Scan, but the changes help gcc to optimise better</li>
 <li>Fix a null pointer dereference in error path, mis-use of strchr(3)
  to search for a NUL byte, and two possible out-of-bounds array
  accesses, found by Coverity Scan, many thanks!</li>
 <li>Optimise <tt>dot.mkshrc</tt> further</li>
 <li>Fix a cursor mis-positioning on backspace bug, reported by David
  Ramsey again, thanks!</li>
 <li>Fix a scrollbar mis-display on delete bug, reported by David Ramsey</li>
 <li>Fix a scrollbar mis-display on insertion bug, discovered while
  fixing the above bug</li>
 <li>Correct displaying of scrollbar on delete, with help from dramsey</li>
</ul>
<p>Portability improvements in mksh R29d contain:</p><ul>
 <li>Unbreak testsuite on Mac OSX (whose brain-dead file system does
  non-standard Unicode decomposing and normalisation on filenames,
  thus rendering ANOTHER of our tests unusable *sigh*)</li>
 <li>Port to AIX, thanks to Kurt Telep</li>
 <li>Minor fixes for HP-UX, thanks to HP Testdrive Programme</li>
 <li>size optimisation if utf-8 is assumed to be always on</li>
 <li>Do not scan for and use “-fwhole-program --combine” because it's the
  cause of at least http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=408850
  and breakage with FORTIFY_SOURCE on SuSE; thanks to Pascal Bleser (yaloki),
  Marcus Rückert (darix), Martin Zobel-Helas, Steve Langasek (vorlon) for
  tracking this bug down in two different places; Debian #421518</li>
 <li>small manual page fixes</li>
 <li>copy $PATH from Build.sh to test.sh; thanks to a test account on Sun
  Solaris 11 donated by Julian Wiesener (yofuh) I was able to verify that
  you want to prefix $PATH with <tt>/usr/xpg4/bin</tt> because the other
  tools (<tt>/usr/bin</tt>, <tt>/usr/ccs</tt>, et al.) suck major arse…</li>
 <li>Note: the SuSE package in the Buildservice was created by darix (without
  my knowledge), is maintained by loki now</li>
 <li>Note: the PDF manual page is now PDF 1.3 (Acrobat 4.x) again</li>
</ul>
<p>Minor bugfixes in mksh R29c – you might want it:</p><ul>
 <li>Regression fix: mksh has some kind of “encoded string” format;
  use wdcopy() not str_save() to duplicate this; affects formatting of
  an error message (and below item) only though</li>
 <li>Bugfix: pdksh has an out-of-bounds memory access; the area of code
  has been touched by OpenBSD developers but the problem not fixed by
  them; some optimisations turned this (for the error message formatting
  of the above item) into a memory corruption bug that was <em>only</em>
  triggering an actual issue on Debian GNU/Linux experimental on IA-64
  with some beta version of GNU glibc; add an appropriate bounds check</li>
 <li>Add mirtoconf check for “large file support” needed on some obscure
  platforms; requested by bsiegert@, idea from GNU autoconf (thanks)</li>
 <li>Add zsh workaround to Build.sh (just to be on the safe side; zsh
  isn't bourne sh or posix sh compatible, but I didn't find any severe
  problems with using it to build mksh yet, it's a weird shell though)</li>
 <li>If execve(2) fails with ENOEXEC, try and parse a shebang line
  ourselves, in case the kernel can do less than we do, unless MKSH_SMALL</li>
 <li>Strip off and ignore an UTF-8 Byte Order Mark (U+FEFF, 0xEF 0xBB 0xBF)
  at the beginning of input (file, -c option, stdin, interactive, eval)
  and when processing shebang lines and enable utf8 mode if encountered</li>
 <li>Enhancements to the <tt>dot.mkshrc</tt> file, whose status (in MirBSD
  itself) is now upgraded from “sample file for portable mksh to show off to
  other OSes” to “used as skeleton file in the default installation” – gets
  us rid of duplicating this stuff in /etc/profile (MirBSD native) a̲n̲d̲ makes
  sure that users of portable mksh also have the latest goodies</li>
 <li>When doing shebang parsing, accept not only LF and NUL but also CR as
  markers for end of the (first) line</li>
 <li>If executing fails, tell the user what exactly failed, too</li>
</ul>
<p>Immediately upgrade to mksh R29b please:</p><ul>
 <li>Bugfix: display UTF-8 control characters (U+0080..U+009F, i.e.
  everything with a wcwidth(3) of -1) the same as ASCII control
  characters (U+0001..U+001F), i.e. with a ctrl caret followed by
  its value XOR U+0040; subsequently treat their width as 2;
  fix crash (CPU hog in spinning loop) on meta-tab+backspace</li>
 <li>Fix setlocale description in manual page</li>
 <li>in the utf-8 mode, invalid multibytes are now handled more strictly:<ul>
   <li>if it's in x_literal() (“quote” / ^V) mode, it's accepted like now</li>
   <li>if it's a mb sequence start, it's rejected with a beep</li>
   <li>if it's a mb continuation, the whole sequence is silently rejected</li>
  </ul>
  This makes command line editing when accidentally hitting, e.g. with
  my mircvs://contrib/samples/dot.Xmodmap layout, Mode_switch-x much
  more robust.</li>
 <li>remove unused utf_width() macro</li>
 <li>if $CC supports -fstack-protector-all, add it to CFLAGS</li>
 <li>shut up some more gcc 4.1.2 warnings</li>
 <li>if $CC supports -fno-tree-vrp and is subject to the <a
  href="http://gcc.gnu.org/bugzilla/show_bug.cgi?id=30785">null pointer
  test optimised away</a> bug, use -fno-tree-vrp to work around it</li>
 <li>in Build.sh, simplify a.out / a.exe (Cygwin) issues</li>
 <li>shrink the manual page to 39 pages sized DIN A4 when built as PS/PDF</li>
 <li>fix a typo in the manual page</li>
</ul>
<p>Please upgrade to mksh R29 due to the following changes:</p><ul>
 <li>Fix portability of regression tests using fgrep(1), twice</li>
 <li>Fix description of $RANDOM in manual page</li>
 <li>Fix build under OpenSolaris Build 47 (reported in IRC)</li>
 <li>Use easier __RCSID() stuff from MirOS #9-current</li>
 <li>Don't shebang with spaces in test.sh creation</li>
 <li>Remove -fno-strength-reduce from default CFLAGS, the compiler bug
  was fixed between gcc 2.7.2 and gcc 2.7.2.1&#8230;</li>
 <li>Avoid unaligned memory access causing SIGBUS on IA-64 on Debian</li>
 <li>Convert to autoconf-style check for function and header file existence
  of &lt;sys/param.h&gt;, arc4random(3), arc4random_push(3),
  setlocale(3) and LC_CTYPE, nl_langinfo(3) and CODESET, getmode(3) and
  setmode(3), strcasestr(3), and strlcpy(3)</li>
 <li>Add <tt>set -o utf8-hack</tt> aka <tt>mksh -U</tt> which
  changes the Emacs editing mode to an experimental CESU-8 aware
  multibyte mode (not implemented using wide chars unless internally
  needed; does not require OS support); check setlocale(LC_CTYPE, "")
  and nl_langinfo(CODESET) if found to auto-enable utf-8 mode
  in interactive shells</li>
 <li>Simplify and clean up code; try to remove or replace function calls
  by smaller equivalents; spot a few non-fatal off-by-one errors</li>
 <li>If Build.sh is called with <tt>-DMKSH_SMALL</tt> in the CPPFLAGS
  environment variable, the built-in mknod(8) will not be included,
  and other functionality and verbose usage messages will be excluded;
  some macros will be turned into functions to save space and to check
  if the utf8-hack should be enabled, nl_langinfo(3) is not called.
  The -T option to mksh(1) and persistent history are not supported.</li>
 <li>Hand-optimise the code to be small, even in the normal build</li>
 <li>Unbreak the -d option to <tt>Build.sh</tt></li>
 <li>Check for <tt>cc</tt> options -Wno-error, -fwhole-program --combine,
  and (if MKSH_SMALL) -fno-inline and use them if they don't fail</li>
 <li>The autoconf-style (&#8220;mirtoconf&#8221;) checks have been enhanced,
  improved and be made more verbose by default</li>
 <li>Rewrite a few functions both to save space and to simplify/unify
  the code; also spotted a few bugs in existing (inherited) code</li>
 <li>Fix format string mistakes and wrong function and data prototypes</li>
 <li>Correct zero-padding for right-justified strings; add regression test</li>
 <li>EXECSHELL is now ${EXECSHELL:-/bin/sh} again</li>
 <li>Remove duplicate code if feasible; rewrite remaining code to solve
  all use cases, or use standard library functions such as qsort(3);
  rework the ctypes and chtypes stuff, get rid of libc/ctype.h</li>
 <li>Change the eaccess() code to not use setreuid(2) and friends, like
  OpenBSD ksh and apparently pdksh. I'm not too sure about the implications,
  except that they only affect setuid shell scripts.</li>
 <li>Use setresuid(2) and friends, and setgroups(2) and &lt;grp.h&gt; instead
  of seteuid(2), setuid(2) etc. on operating systems that support them</li>
 <li>Work around (i.e. remove) all but two <tt>-Wcast-qual</tt> issues</li>
 <li>Work around a bug in the GNU implementation of the Berkeley mdoc macros
  which comes with GNU groff (only visible in MirOS with groff -mgdoc, but
  shows on other operating systems), discovered by crib in IRC</li>
 <li><tt>$RANDOM</tt> is always an unsigned 15-bit decimal integer, for all
  Korn shell derivates; idea from twkm in IRC</li>
 <li>Improve/correct description of typeset command in manpage, and
  implementation of <tt>typeset -p</tt> in mksh</li>
 <li>Remove the non-standard emacs-usemeta and vi-show8 shell options,
  assume the user either has a 7-bit environment, an 8-bit clean terminal,
  or a UTF-8 environment (preferred), and the dummy sh option</li>
 <li>Build.sh fix for conservative (old) versions of gcc; help Debian</li>
 <li>Compute user-given ulimit value times ulimit unit as an rlim_t value,
  not as long value; catches some 32 bit overflows on 32 bit platforms
  due to a missing cast</li>
 <li>Fix some typos in the manual page</li>
 <li>Build.sh add notes for old and non-gcc compilers (TODO)</li>
 <li>Upgrade licence to latest template (revision 1.20)</li>
 <li>Fix reverse logic error in strcasecmp(3) vs strcasestr(3) issue</li>
 <li>Enhance sample ~/.mkshrc</li>
 <li>Prevent segfaults when setlocale(3) or nl_langinfo(3) return NULL</li>
 <li>Use RLIMIT_AS if RLIMIT_VMEM is not found</li>
 <li>Don't expand <tt>~foo/</tt> if MKSH_SMALL, spares getpwnam(3) call</li>
 <li>Fix and autoconfify signal list generation</li>
 <li>Build.sh now uses $TARGET_OS as "uname -s" output for cross builds</li>
 <li>Set flag for regression tests that can't succeed if MKSH_SMALL</li>
 <li>Don't even check for setlocale(3) if MKSH_SMALL, unless overridden
  by user / build environment</li>
 <li>Scan for C Preprocessor, use $CPP if $CC -E fails</li>
 <li>Fix possible nil pointer dereferences and signal name mismatches</li>
 <li>Scan for __attribute__((...)) and -std=gnu99 (req'd on Solaris 10)</li>
 <li>Correct $LDSTATIC logic, unbreak -d, don't let the user override
  (or need to) $SRCS, $sigseen</li>
 <li>Simplify TIOCGWINSZ handling, no need to catch SIGWINCH any more;
  window size changes are processed after input line editing ends (i.e.
  the lines are entered or <tt>ESC #</tt> (emacs mode) is pressed) and
  at startup; ^L (redraw) can't change window size on the fly</li>
 <li>Add -fwrapv to standard CFLAGS, just to be safe, like with when I
  added -fno-strict-aliasing; this is pending a bug fix in gcc, see <a
  href="http://gcc.gnu.org/bugzilla/show_bug.cgi?id=30477">PR#30477</a></li>
 <li>autoconfify compiler flags, c preprocessor</li>
 <li>add option to avoid pulling in getpwnam(3) in !MKSH_SMALL</li>
 <li>scan for certain headers, types; improve portability</li>
 <li>speed up autoconfiguration process in failure case</li>
 <li>finally fix static vs dynamic linking issues</li>
 <li>fix manpage (.Nm macro) glitch with GNU nroff 1.15</li>
 <li>improve auto-detection of which regression tests are valid</li>
 <li>mention failure to revoke(2) is possibly insecure</li>
 <li>if MKSH_SMALL, don't include -T support and don't scan
  for revoke() function</li>
 <li>new #ifdef MKSH_NEED_MKNOD to embed mknod(8) even if
  MKSH_SMALL is enabled</li>
 <li>do not scan for revoke() on GNU/Linux since it always fails</li>
 <li>simplify GNU/Linux CPPFLAGS and use them for GNU/HURD and
  GNU/kFreeBSD (tested on Debian experimental, thanks to the
  ftbfs.de autobuilder and Michael "azeem" Banck)</li>
 <li>fix the 'bind' (no args) builtin output</li>
 <li>new #ifdef MKSH_ASSUME_UTF8 to not check setlocale() and
  nl_langinfo(CODESET) if we want to always enable the utf-8
  command line editing mode</li>
 <li>tabcomplete a newline to singlequote+newline+singlequote
  instead of backslash+newline which is eaten; thanks to
  Thomas E. "TGEN" Spanjaard for noticing</li>
 <li>remove shebang line from check.pl which isn't +x anyway</li>
 <li>fix 'hd' alias in dot.mkshrc example to not run off
  an ANSI standard 80 column screen; simplify</li>
 <li>integrate MKSH_NEED_MKNOD and MKSH_ASSUME_UTF8 with Build.sh</li>
 <li>Work around Solaris /usr/ucb/tr, Solaris /usr/xpg4/bin/tr,
  Minix 3 /usr/bin/tr, and SUSv3 deficiencies</li>
 <li>Fix compilation on more platforms (Interix, Cygwin, Linux 2.0 libc5,
  Debian GNU/kFreeBSD, Debian GNU/HURD, &#8230;)</li>
 <li>Use autoconfiguration for persistent history stuff</li>
 <li>Fix the code (add "const" in like 1001 places) to be able to
  build without <tt>-Wno-cast-qual</tt> (hope it's safe now)</li>
 <li>Optionally use const-debugging versions of strchr(3), strstr(3),
  to work around deficiencies in ANSI C</li>
 <li>The above directly led to our own strcasestr(3) implementation
  for OSes which don't have it</li>
 <li>Optimise <tt>dot.mkshrc</tt> macros</li>
 <li>Let <tt>dot.mkshrc</tt> not return failure early</li>
 <li>Remove shadowing warnings for more OSes</li>
 <li>Support old ash(1) versions in Build.sh</li>
 <li>Support use of <tt>_NSIG</tt> for <tt>NSIG</tt></li>
 <li>Optimise ctags(1) generation</li>
</ul>
<p>Upgrading to mksh R28 with these changes is highly recommended:</p><ul>
 <li>For these who build software as root, the regression testsuite
  has been adapted to pass when using a priviledgued shell. You have
  been warned, though. Do not compile software as root.</li>
 <li>Fix some more <tt>-Wchar-subscripts</tt> on NetBSD&reg;</li>
 <li>Adjust manual page to the fact that mksh can be used as
  <tt>/bin/sh</tt> although it's not specifically designed to</li>
 <li>Simplify mdoc/nroff macro load in manual page</li>
 <li>Add sample file: <tt>dot.mkshrc</tt></li>
 <li>Correct and enhance book citation list in the manual page</li>
 <li>Bring back the "version" editing command in both emacs and
  vi modes, at <tt>ESC ^V</tt> like AT&amp;T ksh93r+</li>
 <li>Fix typo which resulted in the wrong names for signals being
  printed (error codes were used instead) on GNU/Linux, Solaris
  and GNU/Cygwin. Ease changing signame/siglist sources.</li>
 <li>Some more code cleanup and redundancy removal</li>
 <li>Merge a few OpenBSD changes, yielding better multiline prompt
  support and textual improvements in the manual page</li>
 <li>Adjust $PS1 sizing, printing, and redrawal routines
  for mksh behaviour and single- and multiline prompts</li>
 <li>Unbreak build process on Cygwin, fix manpage generation</li>
 <li>For the AT&amp;T $PS1 hack (second char = CR), do not
  output the delimiting characters any more, even if they
  are printable &ndash; fixes platforms without non-printable
  characters (Interix, Cygwin) and prompt size calculation</li>
 <li>Calculate length of prompt in lines and columns-of-last-line
  instead of using some tricks to skip the beginning of the prompt,
  resulting in correct redrawing of prompts with ANSI colour codes</li>
 <li>Correct displaying of prompts spanning more than one line
  and/or with embedded newlines or carriage returns; correct
  documentation of $PS1 and the redraw editing command</li>
 <li>Change one of the testsuite "expected failure" tests from bug
  to feature &ndash; it might actually be required by make(1)</li>
 <li>Enable to bind key sequences which consist of the usual optional
  one or two pr&aelig;fices and the control character, as well as an
  optional trailing tilde (if the trailing character is not a tilde,
  it's processed as usual, but processing of the editing command is
  postponed until after the trailing character has been read)</li>
 <li>Bind the NetBSD&reg; wscons (vt220 / wsvt25), GNU screen and
  XFree86&reg; (xterm-xfree86) &quot;home&quot;, &quot;end&quot;
  and &quot;delete&quot; keys to ^A, ^E and ^D, respectively, except
  that &quot;delete&quot; does not act as logoff switch</li>
 <li>Correct <tt>Test.sh</tt> shebang line</li>
 <li>Make sure ^T is bound to 'transpose' as documented
  (bug spotted by hondza)</li>
 <li>Remove the 'stuff' and 'stuff-reset' editing commands</li>
 <li>Correct the manual page regarding the 'abort' command, its
  interaction with 'search-history' and how to exit the latter</li>
 <li>Bring back "set -o posix" turning off 'braceexpand'</li>
 <li>Mention IRC channel <tt>#mksh</tt>/Freenode in manual page</li>
 <li>Merge <tt>gensigs.sh</tt> into <tt>Build.sh</tt>, eliminating
  the need for <tt>$SHELL</tt> and making it more robust to broken
  user shells such as zsh, use the mksh just built for <tt>Test.sh</tt>;
  simplify CPPFLAGS and reduce size of generated table</li>
 <li>Run the signal name generator only if needed</li>
 <li>Use the -c option to GNU nroff, always</li>
 <li>Make the &quot;all commands of a pipeline are executed in a
  subshell&quot; issue a dependable mksh feature</li>
 <li>Improve regression test comments and a few tests</li>
 <li>If $RANDOM is generated from arc4random(3), display at
  most 31 bits of it like nbsh(1), instead of only 15 bits.</li>
 <li>Rename the regression test script from Test.sh to test.sh</li>
 <li>Improve Build.sh output regarding other files than the binary</li>
 <li>Mention <tt>#ksh</tt>/Freenode in the manual page, since its
  founder (twkm) said it's okay and on-topic as well</li>
 <li>Fix persistent history, add regression test</li>
 <li>Check for arc4random(3) and arc4random_push(3) by using
  the compiler instead of hardcoding OSes which have and which
  don't, because that's not always true</li>
 <li>Fix some regression tests (based upon user feedback too)</li>
</ul>
<p>We recommended mksh <b>R27e</b> to be used:</p><ul>
 <li>Allow <tt>Test.sh</tt> to be passed parameters (-v)</li>
 <li>Fix all <tt>-Wchar-subscripts</tt> on Solaris/sparc64
  and NetBSD&reg;/alpha and remove <tt>-Wno-char-subscripts</tt>
  from Build.sh</li>
 <li>Correct date in version and manual page</li>
</ul>
<p>What became of mksh <b>R27d</b> in the meanwhile?</p><ul>
 <li>Changes for easier crossbuildability</li>
 <li>Honour $CPPFLAGS in gensigs.sh</li>
 <li>Only source ${ENV:-~/.mkshrc} for interactive (FTALKING) shells</li>
 <li>There's a chance that non-MirOS systems have arc4random_push(3)
  at some time in the future, so make it configurable.</li>
</ul>
<p>Featuring mksh <b>R27c</b> with these changes:</p><ul>
 <li>emacs-usemeta now behaves like vi-show8 (be careful with 0x80-0x9F)</li>
 <li>Portability cleanup and speed-up; refine pr&aelig;processor defns</li>
 <li>GNU groff compatible manual page</li>
 <li>Fixes for Solaris 10 support</li>
 <li>Add <tt>~/.mkshrc</tt> as $ENV feature (see manual page)</li>
 <li>Illustrate interactive shell tricks ($PS1) in manual page</li>
 <li>Enhance testsuite</li>
 <li>Incorporate some more code cleanup by OpenBSD</li>
 <li>Reference the O'Reilly books in the manual page</li>
 <li>R27c: fix packaging errors of previous versions</li>
</ul>
<p>Changes in the minor version <b>R26c</b>, relative to R26b:</p><ul>
 <li>Code cleanup by OpenBSD</li>
 <li>Documentation enhancements</li>
 <li>Fix gcc4 warnings in portable mksh</li>
</ul>
<p>Changes in the minor version <b>R26b</b>, relative to R26:</p><ul>
 <li>Makeup changes to copyright file (change comment leader)</li>
 <li>Sync licence with MirOS template (disclaimer changed a little)</li>
 <li>When building, generate a <tt>./Test.sh</tt> on the fly which
  can be used instead of having to copy and paste a long line to run
  the regression test suite (still no way to run ifs.sh as we cannot
  distribute it, though).</li>
 <li>Add a few programming tricks to the manual page</li>
 <li>Fix abuse of unquoted characters in the manual page</li>
 <li>(no actual source code changes)</li>
</ul>
<p>New major version <b>R26</b> changed this, relative to R25b:</p><ul>
 <li>Change the behaviour of <tt>\"</tt> in here documents to
  adhere SUSv3 (inspired by OpenBSD, most code by tg@)</li>
</ul>
<p>New minor version <b>R25b</b> contains these changes:</p><ul>
 <li><tt>arc4random_push(3)</tt> does not exist on older MirOS
  systems; fixes build on MirOS #7quater</li>
 <li>Add GNU Cygwin to the list of supported platforms</li>
</ul>
<p>New major version <b>R25</b> contains these changes:</p><ul>
 <li>Some manual page fixes and updates</li>
 <li>On window resizing, the COLUMNS and LINES variables are updated
  automatically, not only after the next command (from OpenBSD)</li>
 <li>Fix some redraw problem (from OpenBSD)</li>
 <li>Allow &lt; and &gt; for test and [, not only [[</li>
 <li>If an array index is out of bounds, tell which one (from OpenBSD)</li>
 <li>Add mknod(8) for pipes (user/root) and devices (root only) as a
  shell builtin &ndash; idea and some of the code from OpenBSD</li>
 <li>Improve compatibility with Solaris, GNU/Linux, Darwin, Interix</li>
 <li>Prevent redefinition of __rcsid string on systems without __RCSID
  macro (found by Han Boetes)</li>
 <li>Remove the need to manually specify -d on some OSes which need it</li>
 <li>Add a compiler flag to reduce some spurious Solaris-only warnings</li>
</ul>
<p>R24c is another clean-up release, with no change to KSH_VERSION.</p><ul>
 <li>Document stance on quoting policy in here documents</li>
 <li>More fixes for GCC 4 warnings</li>
</ul>
<p>R24b is a minor clean-up relase, recommended especially on Darwin.</p><ul>
 <li>please GCC 4 with the usual crazy set of warning flags</li>
 <li>remove 'version' editor binding and remap emacs ^V to quote-meta ('literal')</li>
 <li>use open(2) instead of creat(3), from OpenBSD</li>
 <li>[bsiegert] fix order of includes</li>
 <li>some code simplification; no explicit LFS needed any more</li>
</ul>
<p>R24 is an <b>important bug fix</b> release and the new required
 minimum version to be installed for MirMake. Changes are:
</p><ul>
 <li>GNU/Cygwin is now supported but not officially tested</li>
 <li>DragonFly BSD is now supported and officially tested</li>
 <li>FreeBSD should work as a side effect of the above</li>
 <li>On NetBSD, arc4random(3)
  can now be used if it exists</li>
 <li>no longer look at argv[0] to determine if restricted shell</li>
 <li>changes to $EDITOR and $VISUAL no longer affect the current
  editing mode</li>
 <li>emacs on, emacs-usemeta off is now the default editing mode</li>
 <li>the special "posix" and "sh" modes are gone</li>
 <li>code, test suites and documentation have been cleaned up a little</li>
 <li>Korn's bizarre /dev/fd hack is now no longer supported</li>
 <li>undo fix for Debian PR #71256 which turned to be bogus and break make(1)</li>
 <li>fix compilation and invocation of test suite with whitespace in the
  pathnames for real, this time</li>
 <li>the distfile is now signed using gzsig(1)</li>
</ul>
<p>R23 comes with an overhauled build system providing more flags for
 easier configuration, a bug-fix if the relative path to $0 contained
 a space, and does not need h2ph(1) to
 build some headers any more. Also, the code has cleaned up a bit and
 some manual page glitches were corrected. Some of these changes
 originated by Han Boetes, a few came via the OpenBSD project.</p>
<p>R22d is the first version which works if source or build directory
 contain spaces in the pathname. It also allows building without
 bothering to pre-format the manual page.</p>
<p>R22c contains some compile time warning fixes on non-MirOS platforms.</p>
<p>R22b contains an important fix regarding the srand(3) initialisation logic and a
 portability fix for NetBSD.</p>
<p>R22 is the result of three different kinds of work: integrating diffs
 from Debian's pdksh package, as needed, including fixing bugs and of
 course testing and fixing docs; fixing the dreaded emacs-mode filename
 with brackets (hello AONE); much cleanup and polishing. Also, the new
 codebase has been tested on a fair number of systems now, with more to
 follow (maybe even new, currently unsupported, platforms).</p>
<p>R20b contains some minor arc4random and build fixes against R20.</p>
<p>R21 has been a three-way integration work from OpenBSD-current's ksh,
 MirOS-current's ksh and portable mksh R20. This is the first release
 to come without autoconf'd script; it is much smaller and installs
 both faster and easier. Several bugs have been fixed, the testsuite
 has been enhanced and the code was cleaned up largely. pdksh lookalikeness
 was largely dropped, and support for octal and sedecimal (hexadecadic)
 numbers via prefixing with <em>0</em> or <em>0x</em> has been added.
 <strong>This is an experimental release; it is not <i>yet</i> supported
 e.g. by MirMake – make(1) – or other tools</strong> but this
 will follow soon. MirbsdKsh R21 is to be the only shell available on
 MirOS #9.</p>
<p>R20 integrated an experimental bugfix from millert@openbsd and shuffled
 some code around. OS/2 support vanished, and the rest of the code shrank
 and was optimised. This is the first version since v1.11 to work on SFU
 (Interix) 3.5 as-is. The upgrade to R20 is <em>highly</em> recommended.
 Note: the mksh R20 distfile has changed from before Dec 14, 16:00.</p>
<p>R19 changes back a bugfix from R18 which caused a regression (from
 OpenBSD) and changed behaviour to match ksh88 on Solaris (from OpenBSD).</p>
<p>v1.18 (R18) fixes some core dump bugs and is a recommended update.</p>
<p>v1.17 comes out with the final MirOS licence template applied, but not
 yet OSI approved (it's not our fault though). There are regression fixes
 and bug fixes; IFS field splitting now works as documented. This version
 is a major improvement both over v1.16 and OpenBSD /bin/ksh, so please
 use it and report possible bugs.</p>
<p>v1.16 IS A BETA VERSION, use at your own risk. This version comes with
 a code cleanup session (for compilation with -Wall -Werror -W -pedantic
 and in preparation for doing an indent(1)
 whack over the source; any volunteers?) and some new features (with -T
 it spawns on a different tty than you're on - cool for single user mode)
 and code removed (the mailbox checking functionality, since everyone sane
 uses UW-IMAPD to access his MBX format folder using IMAPS, port 993, even
 to localhost). The code is also ANSIfied and protoised, in preparation for
 style(9) aka KNF.</p>
<p>There were no v1.13, v1.14, and v1.15 was never released as portable
 version. MirbsdKsh version numbers were pretty much RCS IDs at the
 time of writing this paragraph.</p>
<p>v1.12 fixes the manpages and minor stuff, as well as a signalling bug
 and the inability to build without gcc installed as gcc. It also
 adds installation hints for various operating systems.</p>
<p>v1.11 is a minor update to v1.10 with a few build and style fixes only.</p>

<h2 id="vsn">Recommendations on version numbering</h2>
<p>mksh by default uses a version numbering scheme that uses full integers,
 prefixed by a capital letter R significing “Release”. If minor updates are
 required or requested, a lower-case letter from the standard latin alphabet
 will be appended, starting at ‘b’ and ending at ‘z’ (but usually way before
 or at ‘i’). If a packaging system cannot handle version numbers such as
 <tt>mksh-R29b</tt> (source) → <tt>mksh-R29b-1</tt>, <tt>mksh-R29bp1</tt>
 (binary), packagers OUGHT TO map this to a numerical system as follows:
 <tt>mksh-29.2-1</tt>, <tt>mksh-29.2.1</tt>, <tt>mksh-29.2nb0</tt>, depending
 on the packaging-system local policy for build numbers / patchlevels.</p>
<p>Schemes to AVOID are <tt>mirbsdksh-1.29b</tt>, <tt>mksh-2.9.2</tt>, or
 worse. Please adhere to our recommendations so that users are able to locate
 mksh in their operation environment of choice.</p>

<h3 id="editor">/bin/ed</h3>
<p>While we’re at it – recommendations for packagers – there is another set
 of do’s and dont’s: location of the UNIX® standard text editor. As outlined
 in traditional unixoid operating system standards, manifested into POSIX,
 and – for these three-letter words that aren’t Unix, no matter which of the
 kernels they use in their variety of so-called distributions – the <a
 href="http://www.pathname.com/fhs/pub/fhs-2.3.html#SPECIFICOPTIONS2">FHS</a>
 (FSSTND): ed lives in <tt>/bin/ed</tt>, period.</p>
<p>Patching mksh’s code to look for ed in ANY other location is a MUST NOT.</p>

<h2 id="plans">Future Plans</h2><ul>
<li><a href="mksh.htm#plans">newer plans</a></li>
<li>bash-style multiline command line editing, as an option (the current
 horizontally scrolled one is finally (with R28) bug-free even with
 multiline and very long prompts optionally with embedded newlines,
 and more suitable for small terminals) ‣ not portable w/o curses</li>
<li>Ensure arithmetics are properly bound to <tt>mksh_ari_t</tt> and
 <tt>mksh_uari_t</tt> and offer switching to 64 bit, including as
 array index type, as a compile time option;
 seeing as some systems (DEC?) may not have a 64 bit type
 ‣ partially done with lksh</li>
<li>Adding <tt>goto</tt> and <tt>label</tt> keywords/commands</li>
<li>Can not [[ or (( yield the inode of a file, if we don’t get
 a stat(1) builtin? (For hashes by file.) Maybe make a builtin
 that expands <tt>struct stat</tt> into an associative array?</li>
<li>Adding builtins <tt>fstat</tt>, <tt>lstat</tt>, <tt>traverse</tt>, …</li>
<li>for a b in …; do (like make(1) does)</li>
<li>${foo:S/bar/baz/g} and maybe ${foo:C/bar/baz/x} via regex(3)</li>
<li>A sensible website</li>
<li>Real Unicode command line editing code</li>
<li>Real Unicode internal op – ${foo:2:3} now works with MirOS OPTU-8
 but having internal representation being MirOS OPTU-16 would help in
 the long term</li>
<li><tt>/etc/mkshrc</tt> (maybe only if ~/.mkshrc does not exist,
 with similar rules; ENV=/ could be the magic "default" value;
 maybe go through $ENV -&gt; ~/.mkshrc -&gt; /etc/mkshrc by both
 existence and being &gt;0 bytes... ‣ probably rejected</li>
</ul>
EOF
mws_putfooter
exit 0

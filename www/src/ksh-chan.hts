# This file is part of the website of The MirOS Project, which is
# copyrighted material, please read the LICENCE file for details.

mws_setname hosted/ksh-chan "The #ksh on Freenode page"
mws_setheadline 'Channel page for #ksh'
mws_putheader '$MirOS: www/src/ksh-chan.hts,v 1.45 2013/02/24 14:35:27 tg Exp $'
mws_content <<'EOF'
<h2 id="toc">Table of contents</h2>
EOF
mws_maketoc
mws_content <<'EOF'
<h2 id="chan">Channel information</h2>
<p>The <tt>#ksh</tt> channel on the <a href="http://freenode.net/">Freenode
 PDPC</a> IRC network is dedicated to the Korn Shell in all its variations,
 primarily the current AT&amp;T Korn Shell ksh93, but others, such as mksh,
 pdksh, MKS ksh, AT&amp;T ksh88, and various OS vendors’ Korn Shell variants
 are also considered on topic.</p>
<p>The channel founder is <tt>twkm</tt>. This webpage is maintained by <a
 href="mailto:tg@mirbsd.org"><tt>mirabilos</tt></a>.</p>
<p>To connect, please point your favourite IRC client to either the generic
 server round-robin <tt>irc.freenode.net</tt> or one of the more specific
 ones listed on the <a href="http://freenode.net/">Freenode website</a>, such
 as <tt>irc.eu.freenode.net</tt> or <tt>irc.ipv6.freenode.net</tt>, or, of
 course, a specific server like <tt>calkins.freenode.net</tt> (IPv6, Italy)
 or <tt>kornbluth.freenode.net</tt> (IPv4, Germany). The port to use is 6697
 (or 7000 or 7070) if you can do <a
 href="http://ubuntu-tutorials.com/2010/01/30/accessing-freenode-irc-network-via-ssl-secure-connection/">SSL</a>,
 6667 otherwise (discouraged).
 Tor users can connect to <tt>mejokbp2brhw4omd.onion</tt> (anonymous hidden
 Tor service) or <tt>p4fsi4ockecnea7l.onion</tt> (nick/pass authenticated,
 see the website for details).</p>

<h2 id="meta">Guidelines</h2>
<p>Don’t ask to ask, just ask. If someone knows an answer to your question,
 he/she will likely answer, otherwise not. Stay around for a (possibly long)
 time after asking, since people may not be awake yet (due to different time
 zones) or currently at work and not able to answer immediately. Honour the
 Netiquette. <a href="http://catb.org/~esr/faqs/smart-questions.html">Ask
 questions the smart way.</a> Do not spam the channel; rather use so-called
 “nopaste” sites to put your lines there and only paste the link you get and
 a short summary to the channel.</p>
<h3 id="nopaste">Known “nopaste” sites</h3>
<ul>
 <li><a href="http://sprunge.us/">http://sprunge.us/</a> – pipe stuff into:<pre>
	sprunge() {
		curl -F "sprunge=&lt;-" http://sprunge.us
	}
  </pre></li>
 <li><a href="http://sial.org/pbot/ksh/">http://sial.org/pbot/ksh/</a></li>
 <li><a href="http://nopaste.snit.ch/">http://nopaste.snit.ch/</a></li>
 <li><a href="http://paste.pocoo.org/">http://paste.pocoo.org/</a></li>
</ul>

<h2 id="vsns">Korn Shell versions</h2>
<p>This information is current as of: 2013-02-24 (24 February 2013)</p>
<p><a href="http://www.kornshell.com/">AT&amp;T Korn Shell</a>: latest is
 ksh93v- (alpha) dated 2013-02-22 (22 February 2013) and ksh93u+ (stable)
 dated 2012-08-01; actively developed</p>
<p><a href="@@RELPATH@@mksh.htm">MirBSD Korn Shell</a>: latest is
 mksh R44, dated 2013-03-05 (5 March 2013) and, in the oldstable bugfix
 series, mksh R41c, dated 2013-02-15 (15 February 2013); link to active <a
 href="@@RELPATH@@mksh.htm#clog">development trunk changelog</a></p>
<p><a href="http://www.cs.mun.ca/~michael/pdksh/">Public Domain Korn
 Shell</a>: latest is pdksh-5.2.14 dated 1999-07-13 (13 July 1999)</p>

<h2 id="refs">Links</h2>
EOF

#DEPEND data/ksh-chan.inc
sources=ksh-chan

integer notimesort=1
integer parser_usedate=0

#DEPEND mk/parser
. "$TOP"/mk/parser

integer entryp=0
while (( entryp < entries )); do
	ent=${ei_indir[entryp++]}
	[[ -n ${e_title[ent]} ]] || continue
	print "<div class=\"wlentry\"><div class=\"wltitle\">"
	if [[ -n ${e_link[ent]} ]]; then
		print "  <h2 class=\"wlentry\"><a" \
		    "href=\"${e_link[ent]}\">${e_title[ent]}</a></h2>"
	else
		print "  <h2 class=\"wlentry\">${e_title[ent]}</h2>"
	fi
	[[ -n ${e_isbn[ent]} ]] && print '  <div class="wlsubtitle">'ISBN: \
	    "${e_isbn[ent]}</div>"
	if [[ -z ${e_block[ent]} ]]; then
		beg="<p>"
		end="</p>"
	else
		beg=
		end=
	fi
	print " </div>$beg"
	print "${ei_body[ent]}"
	print "$end</div>"
done | mws_content

mws_content <<'EOF'
<hr />
<p>This page is hosted on the website of The MirOS Project, but not
 a part of it. However, mksh(1) is. Use memoserv on Freenode for
 sending “mirabilos” updates to this webpage.</p>
EOF
mws_putfooter
exit 0

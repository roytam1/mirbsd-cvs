# $MirOS: www/src/mksh.hts,v 1.1 2007/06/09 23:29:56 tg Exp $
#-
# This file is part of the website of The MirOS Project, which is
# copyrighted material, please read the LICENCE file for details.

mws_setname subprojects/mksh "mksh – the MirBSD Korn Shell"
mws_putheader '$MirOS: www/src/mksh.hts,v 1.1 2007/06/09 23:29:56 tg Exp $'
mws_content <<'EOF'
<h1>mksh(1) R29</h1>
<p>This is the website of the MirBSD™ Korn Shell, an actively developed free
 implementation of the Korn Shell programming language and a successor to the
 Public Domain Korn Shell (pdksh).</p>
<p>This page is always accessible via a redirection at <a
 href="http://mirbsd.de/mksh"><tt>http://mirbsd.de/mksh</tt></a>, which is
 the canonical homepage URI, and in case the webserver is unreachable, <a
 href="http://mirbsd.de/mksh-fornow">the backup page</a> will provide basic
 information. The <a href="http://directory.fsf.org/mksh.html">FSF/UNESCO
 directory of Free Software</a> lists mksh, too.</p>

<h2 id="toc">Table of Contents</h2><ul>
 <li><a href="#prefetch">Introduction</a> and Licence</li>
 <li><a href="#irc">Support</a> (IRC, manual page, mailing lists, …)</li>
 <li><a href="#build">Installation</a></li>
 <li>Inclusion in <a href="#otheros">operating systems</a></li>
 <li><a href="#contrib">comparision</a> with other shells</li>
 <li><a href="#regress">Testsuite Results</a></li>
 <li><a href="#vsn">on version numbers</a> – for packagers</li>
 <li><a href="#plans">future plans</a></li>
 <li><a href="#clog">ChangeLog</a></li>
</ul>

<h2 id="prefetch">Introduction</h2>
<p>The current version of mksh is <strong>mksh R29f</strong> from
 <em>26 May 2007</em>.</p>
<p>What is mksh(1)? – Short answer: The MirBSD Korn Shell. Okay, but what
 exactly does it do, or why another shell? These questions will be answered
 <a href="#contrib">below</a> for the people interested. Right now, you only
 need to know that mksh is a <a href="http://www.debian.org/social_contract#guidelines">DFSG</a>-free
 and <a href="http://www.opensource.org/docs/osd">OSD</a>-compliant
 successor to pdksh, developed as part of <a href="http://mirbsd.de/">the
 MirOS Project</a> as native bourne/POSIX/korn shell for MirOS BSD, but also
 to be readily available under other UNIX®-like operating systems.</p>
<p>The source code for mksh is available at the MirOS Project mirrors as well
 as these of other operating system projects due to <a href="#otheros">being
 included</a> in these; however, we do not provide binaries. Find <a
 href="#build">instructions to build and install mksh</a> below, or ask your
 operating environment vendor to package and include mksh; we provide
 assistance for this task if asked. <em>Licencing</em> permits this as long
 as due credit is given to the authors and contributors and the copyright
 notices are not removed in their entirety; modifying is allowed (but if
 the result is still called mksh, it's discouraged; talk with us if you
 feel you have to modify mksh). The individual licences used are the MirOS
 licence, 2-clause and 3-clause UCB licences and the ISC licence; <a
 href="/cvs.cgi/src/bin/mksh/copyright?rev=HEAD">full terms</a> are
 available via CVSweb. pdksh originally was public domain, with a few
 exceptions, but these files are not part of mksh R21 or up. The mksh(1) author
 (mirabilos) acknowledges the contributions of these people who dedicated pdksh
 to the public, and asserts a collective copyright on the code.</p>
<p>To compile mksh, you will need a bourne or POSIX shell (Solaris
 <tt>/bin/sh</tt> is enough, and the Z shell should work), a C compiler (at
 the moment, only the one from the <a href="http://gcc.gnu.org/">GNU Compiler
 Collection</a> works, but we're attempting to change this), system and C
 library header files and the standard C runtime. You will also need a set of
 standard UNIX® tools on a supported operating system: any recent BSD; Darwin,
 Apple Mac OSX; Interix (Microsoft® Services for Unix 3.5, maybe Subsystem for
 Unix Applications); GNU/Cygwin; GNU/Linux (libc5, glibc, and uClibc systems
 are tested), Debian GNU/kFreeBSD or GNU/HURD; Sun Solaris (8, 9, 10, 11),
 OpenSolaris; some AIX; HP-UX 11i<br />To run the regression test suite, you
 will need a recent Perl with POSIX.pm as well as <tt><a
 href="#editor">/bin</a>/ed</tt> (whose installation is strongly suggested
 anyway, because it's the standard <tt>FCEDIT</tt> history editor), as well
 as a controlling terminal (usually <tt>/dev/tty</tt> or provided from
 script(1) or GNU screen).</p>
<p>To use mksh, you only need the C runtime (and any supplemental libraries
 the binary was linked against) and, optionally, <tt>/bin/ed</tt> – for
 interactive use, a controlling terminal is highly recommended because job
 control does not work without one.</p>
<p>To make full use of mksh(1)'s interactive features, it is recommended to
 copy the <tt>dot.mkshrc</tt> file from the source distribution as
 <tt>~/.mkshrc</tt> into the user's home directory and let the user adjust
 it to suit his needs. The sample file configures a few aliases and shell
 functions as well as a sensible prompt (<tt>$PS1</tt>).</p>

<h2 id="irc">Support</h2>
<p>We provide an online manual page in <a
 href="http://www.mirbsd.org/cman/man1/mksh.htm">HTML</a> and <a
 href="http://www.mirbsd.org/MirOS/dist/mir/mksh/mksh.pdf">PDF</a> format.
 Reading books about Korn Shells in general is recommended as further help,
 but beware of the <a href="#contrib">differences</a> to other shells.</p>
<p>If you require additional assistance or want to discuss bugs, features
 or enhancements, write to the <a href="mailto:miros-discuss@mirbsd.org">mailing
 list</a> (or <a href="mailto:postmaster@mirbsd.org">subscribe</a> to it).
 The mailing list can be reached <a href="nntp://news.gmane.org/gmane.os.miros.general">via
 NNTP</a> or at the <a href="http://marc.info/?l=miros-discuss">MARC web
 archive</a> (or GMane Loom) as well.
 Joining the IRC channel at <a href="http://freenode.net/">Freenode</a>
 (irc.freenode.net:6667) <tt>#!/bin/mksh</tt> (no joke, this is really the
 channel's name) and <tt>#ksh</tt> (where you must distinguish AT&amp;T ksh from
 mksh though) is recommended as well.</p>

<h2 id="build">Installation</h2>
<p>Skip to the section about being <a href="#otheros">included in operating
 environments</a> unless you really want to compile mksh from source yourself
 or create a package for your operating system of choice.</p>
<p>First off, you have to download the source code from any of the mirrors
 listed below, or any other mirror you know of. Official source code
 distributions are a cpio(1) compressed “old-style” (portable octal) archive,
 compressed with gzip(1) (zlib's deflate algorithm) and digitally signed with
 gzsig(1) using the MirOS Project's <a href="/gzsigkey.cer">current signature
 key</a>. Please verify the signature <em>as well as</em> the hashes and/or
 checksums below, so you're sure the content is intact and the version number
 on the archive is correct. If you require source code in tar(1)'s “ustar”
 format, check the Debian Project for availability, although they often do
 not carry the latest version. The pax(1) utility (the POSIX Archiver) can
 extract from the CPIO distfile and is available even on a stock Microsoft®
 Windows® installation.</p>
<h3 id="mirrors">Known Mirrors</h3><ul>
 <li><a href="http://www.mirbsd.org/MirOS/dist/mir/mksh/mksh-R29f.cpio.gz">http://www.mirbsd.org/MirOS/dist/mir/mksh/mksh-R29f.cpio.gz</a></li>
 <li><a href="http://pub.allbsd.org/MirOS/dist/mir/mksh/mksh-R29f.cpio.gz">http://pub.allbsd.org/MirOS/dist/mir/mksh/mksh-R29f.cpio.gz</a></li>
</ul>
<h3 id="hashes">Checksums and Hashes</h3><ul>
 <li>RMD160 (mksh-R29f.cpio.gz) = eddf9b3292d50171d8b9d6429279f0eb42a4b9ff</li>
 <li>TIGER (mksh-R29f.cpio.gz) = 5b21adea37e42274bd692518ddd4dedcff5f65e6f113a90b</li>
 <li>2910491928 240805 /MirOS/dist/mir/mksh/mksh-R29f.cpio.gz</li>
 <li>MD5 (mksh-R29f.cpio.gz) = 83b4ca84faa1a1ea4cf6db6eb41a0384</li>
</ul>

<h3 id="decomp">Decompression</h3>
<p>Use any of the following syntaxes to extract the distfile; you'll get the
 idea soon. Some web browsers (prominently, Mozilla® and its derivates as well
 as Microsoft® Internet Explorer®) already inflate the distfile during
 download but do not remove the “.gz” extension; replace “gzip -dc” (gzcat)
 with “cat” if that happens for you.</p>
<p>The first example is using BSD paxtar (MirOS BSD, OpenBSD, NetBSD®), or
 “bsdtar” (DragonFly); the second and third use cpio(1) or pax(1) and are
 for most operating systems; the fourth is for Debian.</p><ul>
<li>$ tar xzf mksh-R29f.cpio.gz &amp;&amp; cd mksh</li>
<li>$ gzip -dc mksh-R29f.cpio.gz | cpio -mid &amp;&amp; cd mksh</li>
<li>$ gzip -dc mksh-R29f.cpio.gz | pax -r &amp;&amp; cd mksh</li>
<li>$ tar xzf mksh_29.6.orig.tar.gz &amp;&amp; cd mksh-29.6</li>
</ul>

<h3 id="compile">Compilation</h3>
<p>Now you're in the source code directory; <tt>Build.sh</tt> does all the
 magic for you. In theory, invoking the command<br />
 <tt>% /bin/sh ./Build.sh</tt><br />
 should work. Relative paths can be used too, for example, instead of cd(1)ing
 to the source directory, you could've done<br />
 <tt>% mkdir build; cd build; /bin/sh ../mksh/Build.sh</tt></p>
<p>The build script requires a bourne shell (Solaris <tt>/bin/sh</tt> – the
 Heirloom sh hasn't been tested yet), korn shell (ksh, ksh88, ksh93, pdksh,
 mksh, oksh), POSIX shell (<tt>/usr/xpg4/bin/sh</tt>), or a super-set (GNU
 bash) to work; the Z Shell could work too, but the C shell (csh, tcsh) won't.
 Accepted arguments are:</p><ul>
<li><tt>-d</tt> (R29 and below): build dynamically, don't try to link with
 <tt>-static</tt> by default on architectures that support it</li>
<li><tt>-nd</tt> (R29 and below): build statically, always try to link with
 <tt>-static</tt> even on systems with nsswitch/PAM</li>
<li><tt>-q</tt> (all versions): output almost nothing</li>
<li><tt>-Q</tt> (R30 and up): be (only) a little less verbose</li>
<li><tt>-r</tt> (all versions): don't try to build a pre-formatted version
 of the manual page using nroff(1) if found</li>
</ul>
<p>The build script also honours the following environment variables:</p><ul>
<li><tt>CC</tt> (gcc) – the C compiler used</li>
<li><tt>CPP</tt> ($CC -E -) – the C præprocessor used</li>
<li><tt>CFLAGS</tt> (-O2 / -xO2; on HP-UX/IA64: -O2 -mlp64) – optimiser and
 other compiler flags used</li>
<li><tt>CPPFLAGS</tt> (no default) – additional cpp(1) flags</li>
<li><tt>LDFLAGS</tt> (set on AIX for libcrypt) – additional CCLD flags</li>
<li><tt>LIBS</tt> (-lcrypt on Interix; empty otherwise) – additional
 libraries to pull in</li>
<li><tt>NOWARN</tt> (-Wno-error / -errwarn=%none) – $CC option to disable
 bailing out at errors; used during mirtoconf checks</li>
<li><tt>NROFF</tt> (nroff; “nroff -c” with GNU groff) – the manual page
 processor used unless <tt>-r</tt> is given</li>
<li><tt>TARGET_OS</tt> (uname -s || uname) – the operating system to compile
 for; set this during cross compilation; valid: AIX CYGWIN* Darwin DragonFly
 FreeBSD GNU (HURD) GNU/kFreeBSD HP-UX Interix Linux Minix (not yet) MirBSD
 NetBSD OpenBSD Plan9 (not yet) SunOS</li>
</ul>
<p>If <tt>CPPFLAGS</tt> contain any of the following definitions, the resulting
 binary will be compiled with a specific flavour:</p><ul>
<li><tt>-DMKSH_SMALL</tt> – build a really small mksh(1), e.g. for embedded
 systems</li>
<li><tt>-DMKSH_ASSUME_UTF8</tt> – do not use setlocale(3) or
 nl_langinfo(CODESET); assume the terminal is always in UTF-8 mode</li>
<li><tt>-DMKSH_NEED_MKNOD</tt> – if MKSH_SMALL is set, do not omit the mknod(8)
 builtin functionality from the binary</li>
<li><tt>-DMKSH_NOPWNAM</tt> – if MKSH_SMALL is not set, still omit getpwnam(3)
 calls in order to not pull in the nsswitch or PAM libraries</li>
</ul>
<p>You can override certain mirtoconf checks by setting environment variables
 like <tt>HAVE_REVOKE=0</tt> (default for Linux) – if these are set to 0 or 1,
 the values are used; if unset, the values are probed.</p>

<h4 id="oespec">Operating Environment specific notes</h4>

<h5 id="oe_ack">Compiler: ACK</h5>
<p>Support for <a href="http://www.cs.vu.nl/ack/">ACK on Minix 3</a> will be
 added after mksh works on Minix 3 with GCC. Support for <a
 href="http://tack.sourceforge.net/">other ACK versions</a> or targets can
 be user-contributed.</p>

<h5 id="oe_gcc">Compiler: GCC</h5>
<p>The GNU C Compiler 2.7.2.3, egcs (gcc 2.95) and the GNU Compiler Collection
 (gcc 3.x, 4.x) are known to work, but not all versions work on all targets.
 Specific C flags, known extensions, etc. are autoprobed; cross-compilation
 works fine. Use of gcc 4.x is discouraged because of several dangerous changes
 in how the optimiser works; it is possible to work around their trading off
 reliability for benchmark-only speed increases, but because mksh developers
 do not use gcc 4.x this will have to be user-contributed.</p>

<h5 id="oe_sun">Compiler: SUNpro</h5>
<p>Support for the <a href="http://developer.sun.com/sunstudio">SUN Studio
 12</a> compiler appeared in mksh R30; other versions
 might be supported as well. More testing needed.</p>
<p>The C Præprocessor of SUNpro is not able to generate a list of signal names
 if the operating system does not provide them; “kill -l” output will look
 weird on, for example, GNU/Linux.</p>

<h5 id="oe_aix">OS: AIX</h5>
<p>AIX support is experimental and almost untested.</p>
<p>If passing custom LDFLAGS, don't forget the export symbols required for
 using libcrypt. If passing custom LIBS, don't forget <tt>-lcrypt</tt>.</p>

<h5 id="oe_hurd">OS: GNU/HURD</h5>
<p>This operating system is supported but not well tested.</p>

<h5 id="oe_linux">OS: GNU/Linux</h5>
<p>While POSIX does not apply to “GNU's Not Unix”, the <a
 href="http://www.pathname.com/fhs/pub/fhs-2.3.html#SPECIFICOPTIONS2">FHS</a>
 (ex-FSSTND) does; please convince your distributor to move ed to /bin/ed if
 not already done. Manual page installation paths are not standardised in
 older distributions either.</p>
<p>We didn't test dietlibc yet, but uClibc works; libc5 on 2.0.36 too.</p>

<h5 id="oe_hpux">OS: HP-UX</h5>
<p>HP-UX support is experimental and not well tested.</p>
<p>Users might have to play around with stty(1).</p>
<p>If passing custom CFLAGS, don't forget <tt>-mlp64</tt> on Itanium.</p>

<h5 id="oe_interix">OS: Interix</h5>
<p>If passing custom LIBS, don't forget to add <tt>-lcrypt</tt> or any other
 library providing arc4random(3).</p>
<p>mksh can replace /bin/ksh</p>

<h5 id="oe_minix">OS: Minix</h5>
<p>Minix 3 is not supported yet – we were able to create an executable, but
 it did not run properly due to job control issues, similar to Plan 9.
 Minix 1 and Minix 2 will never be supported due to size constraints on
 16-bit platforms, unless a user contributes code.</p>

<h5 id="oe_plan9">OS: Plan 9</h5>
<p>Plan 9 is not supported yet – we were able to create an executable, but
 it did not return to the prompt after running a non-builtin command; this
 is job control issues, and patches are welcome.</p>
<p>Due to the unavailability of ttys, job control will never be supported.</p>
<p>The APE (ANSI'n'POSIX Environment) is required to build mksh; I don't
 remember which compiler I used, but I think it was GCC.</p>

<h5 id="oe_openbsd">OS: OpenBSD</h5>
<p>The setlocale(3) call in OpenBSD's libc is broken and will always return
 non-UTF8 even if run within an uxterm (xterm(1)) which comes with OpenBSD's
 base installation. Use a different setlocale library function like <a
 href="/cvs.cgi/contrib/code/Snippets/setlocale.c?rev=HEAD">this one</a>
 and pass its filename as $LIBS to <tt>Build.sh</tt>.</p>

<h5 id="oe_solaris">OS: Solaris</h5>
<p>Tonnerre LOMBARD reports it's not possible to use mksh as login shell
 with the graphical login manager on some OpenSolaris beta version.</p>
<p>Solaris does not come with Berkeley mdoc macros for nroff, so using
 the HTML or PDF versions of the manual pages or pregenerating a catman
 page on another OS is required.</p>

<h3 id="postbuild">After compiling</h3>
<p>The <tt>Build.sh</tt> script generates an executable (“mksh”, except on
 GNU/Cygwin, where it is called “mksh.exe”), a shell script to use the newly
 built mksh to run the regression test suite (“test.sh”), and (unless the
 <tt>-r</tt> option was given) a pre-formatted manual page (“mksh.cat1”).
 It also lists installation instructions unless <tt>-q</tt> or <tt>-Q</tt>
 were provided. Now it's the time to run<br /><tt>% ./test.sh -v</tt><br />
 in order to see if the shell works.</p>
<p>To actually install mksh, copy the binary to some place in $PATH, i.e.
 /bin/mksh, $HOME/.bin/mksh, /usr/local/bin/mksh, or whatever your packaging
 system wants; strip it and run chmod 555 on it. (This can easily be achieved
 with install(1) – on Solaris, this is /usr/ucb/install not /usr/bin/install –
 with the arguments -c, -s, -m 555, and -o/-g.) Also append its installation
 path to <tt>/etc/shells</tt>, install the <tt>dot.mkshrc</tt> file (usually
 alongside with the copyright file and other documentation), copy it to
 <tt>/etc/skel/.mkshrc</tt> if your operating environment has this means to
 include default dotfiles; install either the catman page (mksh.cat1) to,
 for example, /usr/share/man/cat1/mksh.0, or the mdoc page (mksh.1) to the
 standard location (/usr/share/man/man1/ or /usr/man/man1/ or whatever your
 operating environment requires). The manual page requires the Berkeley mdoc
 macros (either the BSD or the GNU groff version) to be installed during
 formatting time.</p>

<h2 id="otheros">Inclusion in other operating systems</h2><ul>
<li><a href="http://crux.nu/">Crux GNU/Linux</a> has an mksh port contributed by
 <a href="http://www.xs4all.nl/~hanb/software/crux/han/mksh/">Han Boetes</a>.</li>
<li><a href="http://www.debian.org/">Debian</a> GNU/Linux, GNU/HURD and
 GNU/kFreeBSD have an <a href="http://packages.debian.org/mksh">mksh package</a>
 maintained by the MirOS Project and uploaded (sponsored) by Bastian “waldi”
 Blank; the debconf questions were taken from dash.</li>
<li><a href="http://www.gentoo.org/">Gentoo GNU/Linux</a> has an mksh <a
 href="http://sources.gentoo.org/viewcvs.py/gentoo-x86/app-shells/mksh/">ebuild</a>
 created by Hanno Böck.</li>
<li><a href="http://finkproject.org/">Fink</a> delivers an <a
 href="http://pdb.finkproject.org/pdb/package.php/mirbsdksh">package called
 “mirbsdksh”</a> from Andreas “gecko2” Gockel; the latest version shall be
 called “mksh” proper.</li>
<li><a href="http://www.sourcemage.org/">SMGL</a> (Sourcemage GNU/Linux) has an
 <a href="http://distro.ibiblio.org/pub/linux/distributions/sourcemage/codex/test/shell-term-fm/mksh/">mksh
 spell</a> in their grimoire, developed by the MirOS Project together with
 Daniel “morfic” Goller.</li>
<li>In the <a href="https://www.freewrt.org/trac/">FreeWRT Embedded GNU/Linux
 Appliance Development Kit (meta distribution)</a>, the <a
 href="https://www.freewrt.org/svn/trunk/freewrt/package/mksh/">mksh
 package</a> is maintained by us.</li>
<li><a href="http://openwrt.org/">OpenWrt Embedded GNU/Linux Distribution</a>
 also <a href="https://dev.openwrt.org/browser/packages/utils/mksh">provides
 mksh</a> on ADSL/WLAN routers thanks to Felix “nbd” Fietkau.</li>
<li><a href="http://www.ubuntu.com/">Ubuntu GNU/Linux</a>, <a
 href="http://www.gnusolaris.org/gswiki">Nexenta OS</a> (GNU/Solaris), the <a
 href="http://grml.org/">grml</a> (and grml64) Live-CD, and other Debian
 derivates also have an mksh package; Knoppix, SIDUX, and grml-small do
 <em>not</em> contain or offer mksh.</li>
<li>The <a href="http://en.opensuse.org/Build_Service">OpenSuSE Build
 Service</a> provides an mksh package inside the <a
 href="http://software.opensuse.org/download/shells/">shells repo</a>,
 thanks to Pascal “loki” Bleser and Marcus “darix” Rückert; the RPMs are
 available for various instances of SuSE, OpenSuSE and Redhat/Fedora Core
 as well as as SRPM (source RPM). There used to be a repository by <a
 href="http://ftp.skynet.be/pub/suser-guru/rpm/packages/System/mksh/">loki</a>
 in the past. An <a href="http://www.mirbsd.org/MirOS/dist/mir/mksh/ports/mksh-29f-1.src.rpm">inofficial
 <em>portable</em> SRPM</a> (created on Debian) is available as well.</li>
<li><a href="http://www.archlinux.org/">Arch GNU/Linux</a> users can install
 an <a href="http://aur.archlinux.org/packages.php?do_Details=1&amp;ID=3431">mksh
 package</a> by Daniel “homsn” Hommel.</li>
<li><a href="http://www.freebsd.org/">FreeBSD®</a> Ports (for FreeBSD, very old
 <a href="http://www.dragonflybsd.org/">DragonFly BSD</a> versions and <a
 href="http://www.desktopbsd.net/">DesktopBSD</a>) also have a <a
 href="http://cvsweb.freebsd.org/ports/shells/mksh/">port</a> created by
 Andreas “ankon” Kohn and kept up to date by Martin “miwi” Wilke. It is
 unknown if this applies to <a href="http://www.pcbsd.org/">PC-BSD</a> too,
 but there's no mksh PBI (yet?).</li>
<li><a href="http://www.pkgsrc.org/">NetBSD® pkgsrc®</a> (native also on recent
 DragonFly BSD; available for many other operating systems as well) has a <a
 href="http://cvsweb.netbsd.org/bsdweb.cgi/pkgsrc/shells/mksh/">package</a>
 created by the MirOS Project and kept up to date by Jörg Sonnenberger.</li>
<li>The MirPorts Framework brings mksh to OpenBSD, Mac OSX and Interix as
 well as older MirOS BSD versions, which have mksh as native Korn Shell.</li>
<li><a href="http://www.openbsd.org/">OpenBSD</a> ports do <em>not</em>
 package mksh, but an <a href="http://www.mirbsd.org/MirOS/dist/mir/mksh/ports/mksh-obsdport.tgz">inofficial
 port</a> is available.</li>
<li>ChinaLinux mirrors (and apparently packages) mksh.</li>
<li>Some US-American Apple Users' Group packages mksh.</li>
<li>There are probably many more, please drop us a note!</li>
</ul>
<p>These packages are not official and have not always been tested by mksh
 developers; please keep this in mind.</p>

<h2 id="contrib">Other Shells and more</h2>
<p>mksh is a successor of pdksh but not affiliated with the pdksh
 developers or contributors. mksh is not affiliated with the AT&amp;T
 Korn Shell, its past or present owners, other than that both attempt
 to implement the Korn Shell programming language.</p>

<h3 id="co-diffs">Differences</h3>
<p>mksh is a direct descendant from the OpenBSD <tt>/bin/ksh</tt> and
 contains all of its bug fixes and enhancements <strong>except</strong>
 the “GNU bash-like <tt>$PS1</tt>” changes. The DeliLinux developer who
 is responsible for packaging oksh for GNU/Linux should instead use mksh
 and port that diff over (be careful to not break the fixes to the command
 line editing modes, these are subtilely broken in OpenBSD). Even better,
 the OpenBSD people should not only commit a port of mksh but replace their
 ksh with it (optionally retaining that GNU bash-like $PS1 stuff). The
 <tt>set -o emacs-usemeta</tt> command is no longer needed because the
 emacs editing mode has been changed for Unicode/UTF-8 mode, which adds a
 new <tt>set -o utf8-hack</tt> mode. The <tt>set -o sh</tt> command has
 been completely removed, <tt>set -o posix</tt> merely turns off brace
 expansion as side effect. There is no limit (well, 2³¹ probably) on
 array sizes any more. Many bugs and security holes have been closed in
 mksh and are still in oksh and OpenBSD ksh. The user interface has much
 less bugs and surprises; emacs editing mode is enabled by default.</p>
<p>mksh is the heir of pdksh and contains all the latest fixes from upstream
 (so ca. 1995) and Debian, except a change which breaks (at least) BSD make
 due to different errorlevel (return/exit code) handling. See above for other
 differences. The code really has been cleaned up and no longer contains any
 material under licences more restrictive than the BSD licence.</p>
<p>AT&amp;T ksh88 and ksh93 compare to mksh substantially, but share no code;
 the user interface is slightly different especially for ksh88; many editing
 commands work (only slightly) differently as well. mksh implements many, but
 by far not all, ksh93 features, but most ksh88 features. No floating point.
 The last command of a pipeline is executed in a subshell.</p>
<p>mksh can do many things GNU bash can't, for example better arrays, the
 ksh Co-processes, etc. but is much faster and smaller. In contrast to bash,
 mksh is still being actively developed (bash almost only receives small
 changes or weird stuff like programmable tab completion). GNU bash's array
 initialiser syntax is not yet supported. We don't aim at being fully bash
 compatible, but some of the surprises for converts will be removed.</p>
<p>The Z shell (zsh) isn't even remotely ksh compatible in its “emulate ksh”
 operation mode, and we don't compare to it.</p>
<p>mksh is <em>mostly</em> bourne shell compatible (but ^ as alias for | is
 not supported, like most modern shells). mksh is also POSIX sh compatible.
 Some constructs are not supported, for example<br />
 <tt>((foo; bar) 2>&amp;1 || baz)</tt><br />which has to be rewritten as<br />
 <tt>( (foo; bar) 2>&amp;1 || baz)</tt><br />because ((…)) is shell arithmetics;
 you cannot define a <tt>stop()</tt> function without unaliasing “stop”
 first (which is a predefined alias in all Korn shells), and brace expansion
 is turned on by default; etc.</p>

<h3 id="co-hints">Hints and other useful stuff</h3>
<p>mksh does not write a history file by default any longer; set the
 environent variable <tt>HISTFILE</tt> in <tt>~/.mkshrc</tt> (or the
 profile) if you want this. The history file format of mksh (and oksh
 and pdksh) differs from that of other shells, so you might want to
 use a construct like<br /><tt>case $KSH_VERSION in<br />
 *MIRBSD\ KSH*) export HISTFILE=~/.mksh-history ;;<br />
 *PD\ KDH*MirOS*) export HISTFILE=~/.oldmksh-history ;;<br />
 *PD\ KSH*) export HISTFILE=~/.pdoroksh-history ;;<br />
 ?*) export HISTFILE=~/.ksh-history ;;<br />
 *) export HISTFILE=~/.nonksh-history ;;<br />
 esac</tt><br />to avoid them overwriting each others' history file.</p>
<p>Very old sample: <a href="/cvs.cgi/contrib/samples/etc_profile">this</a></p>

<h2 id="regress">Official Testing</h2>
<p>The MirOS Project has tested mksh on the following operating systems,
 asked people to test, and hunted mksh down in these packaging systems:</p>
<ul>
 <li>mksh R29d<ul>
  <li>Darwin 8.9.0 Mac OSX 10.4 (powerpc)</li>
  <li>AIX 5.3 ML05 – thanks Gurft</li>
  <li>Solaris 5.10 Generic_118833-36 (sun4u) 32-bit, 64-bit</li>
 </ul></li>
 <li>mksh R29c<ul>
  <li>MirOS #10-beta (i386 gcc3.4.6)</li>
  <li>Solaris 8 (sun4u gcc3.4.3) both without and with -m64</li>
  <li>DragonFly 1.9-dev (i386 gcc3.4.6)</li>
  <li>NetBSD 3.0-stable (i386 gcc3.3.3)</li>
  <li>Cygwin 1.5.24-2 (i386 gcc3.4.4 win2k)</li>
  <li>Interix 3.5 (i386 gcc3.3 win2k)</li>
  <li>OpenBSD 4.0 (sparc64 gcc3.3.5)</li>
  <li>Debian etch (i386, ia64, amd64 gcc4.1.1-21)</li>
  <li>FreeBSD 6.1 (i386, ia64 gcc3.4.4)</li>
  <li>HP-UX 11i B.11.11 (PA-RISC gcc3.4.2) <em>no regression test run</em></li>
  <li>HP-UX 11i v2 B.11.23 (ia64 gcc3.4.3)</li>
  <li>– tests by third parties –</li>
  <li>Solaris 10 (sun4us gcc4.0.3 "gccfss") 32-bit, 64-bit – thanks Ankon</li>
 </ul></li>
 <li>mksh R29 &ndash; release candidate<ul>
  <li>MirOS #7-stable (sparc gcc2.95), #9-current (i386 gcc3.4.6)</li>
  <li>Linux 2.0 (i386 libc5 gcc2.7.2.3), 2.4 (mipsel uClibc gcc3.4.4),
   2.6 (i386 glibc gcc4.1.2pre, s390x glibc gcc4.1.2pre)</li>
  <li>Solaris 8 (sun4u gcc3.4.3)</li>
  <li>Mac OSX 10.4 [I think] (macppc gcc4.0.2apple)</li>
  <li>NetBSD 3.0-stable (i386 gcc3.3.3)</li>
  <li>DragonFly 1.9-dev (i386 gcc3.4.6)</li>
  <li>OpenBSD 4.0 (sparc64 gcc3.3.5)</li>
  <li>Cygwin 1.5.19(0.150/4/2) 2006-01-20 13:28 (i386 gcc3.4.4 win2k)</li>
  <li>Interix 3.5 (i386 gcc3.3 win2k)</li>
 </ul></li>
 <li>mksh-2007-02-18<ul>
  <li>MirOS #9uAC (i386, gcc 3.4.6+SSP), as part of base system, as part
   of installer, run with stand-alone Build.sh</li>
  <li>Debian 4.0-experimental (i386, kfreebsd-amd64, kfreebsd-i386),
   gcc 4.1.1-21 (4.1.2-prerelease), autobuilder via Debian rules</li>
  <li>Debian 4.0-testing (i386, 2.6.16-2-686, gcc 4.1.1-21), manually via
   Debian rules)</li>
  <li>Solaris 8 (sun4u), both -m32 and -m64 (gcc 3.4.3) via Build.sh</li>
  <li>FreeWRT GNU/Linux trunk (mipsel, gcc 3.4.4), via ADK</li>
 </ul></li>
 <li>mksh-current<ul>
  <li>OpenSolaris Build 47</li>
  <li>Linux td156 2.6.8-3-mckinley-smp #1 SMP Sat Jul 15 11:48:36 UTC 2006 ia64 GNU/Linux</li>
 </ul></li>
 <li>mksh R28<ul>
  <li>MirOS BSD #9-stable (i386)</li>
  <li>MirOS BSD #7-stable (sparc)</li>
  <li>Solaris 8 (sun4u) SUNW,Ultra-60</li>
  <li>NetBSD 3.0_STABLE (i386)</li>
  <li>DragonFly BSD 1.3-Preview (i386)</li>
  <li>DragonFly BSD 1.7-DEVELOPMENT (i386 SMP)</li>
  <li>Debian GNU/Linux 3.1-testing 2.6.16-2-686 (i386)</li>
  <li>Debian GNU/Linux 3.1-testing 2.6.17-2-vserver-s390x (s390x)</li>
  <li>Debian GNU/Linux 3.1-stable 2.4.27-2-k7 (i386)</li>
  <li>Darwin 8.7.0 Mac OSX 10.4 (powerpc)</li>
  <li>Debian GNU/Linux 3.1-unstable (all architectures except ia64) &ndash; debianised</li>
  <li>OpenBSD 3.9 (sparc64) &ndash; via contributed port</li>
  <li>Debian GNU/Linux 3.1-stable 2.4.27-2-k7 (i386) &ndash; via an experimental pkgsrc&reg; package</li>
  <li>CYGWIN_NT-5.0 1.5.19(0.150/4/2) 2006-01-20 13:28 (i386) &ndash; testsuite not run</li>
  <li>Interix SFU 3.5 (Windows&reg; 2000 Pro) SP-8.0.1969.1 (i386) &ndash; testsuite not run</li>
  <li>NetBSD 3.0 (mac68k) &ndash; tested by Jonathan "ciruZ" Schleifer</li>
  <li>Darwin 8.7.1 Mac OSX 10.4 (i386) &ndash; tested by Angelo Laub</li>
  <li>Solaris 8 (sun4m) SUNW,SPARCstation-5 &ndash; tested by Angelo Laub</li>
  <li>FreeWRT GNU/Linux SVN 2.4-BRCM (mipsel) &ndash; part of FreeWRT: testsuite not run</li>
  <li>FreeBSD (unknown) &ndash; part of FreeBSD Ports: not tried</li>
  <li>Gentoo GNU/Linux (i386 powerpc) &ndash; part of Portage: not tried</li>
  <li>CRUX GNU/Linux (i386) &ndash; via Han Boetes' repository: not tested</li>
  <li>Sourcemage GNU/Linux (amd64) &ndash; via test grimoire: not tried</li>
  <li>generic pkgsrc&reg; &ndash; not tested; ONLY_FOR_PLATFORMS not honoured</li>
 </ul></li>
 <li><p style="margin-bottom:0px;">Attention: NetBSD 1.6.1/pmax (for example
   on a DECstation 5000/260) does not come with a <em>stdbool.h</em> &ndash;
   simply write one yourself (not required for mksh R29 and up):</p>
  <div style="border:4px ridge blue; margin:0px 24px 0px 24px; padding:12px;">
   <pre>
	typedef int bool;
	#define true 1
	#define false 0
   </pre>
  </div><p style="margin-top:0px;">This is pretty simple but enough for mksh.</p>
 </li>
 <li>mksh R28&szlig;<ul>
  <li>NetBSD 1.6.1 (pmax)</li>
   <!-- missing:
  <li>MirOS BSD #9-stable (sparc)</li>
  <li>Solaris 10 (?) &ndash; tested by Tonnerre Lombard</li>
  <li>Mac OSX Panther (powerpc) &ndash; not tested, via Fink</li>
  <li>Plan 9 POSIX Environment</li>
   -->
 </ul></li>
 <li>mksh R27e<ul>
  <!-- li>Solaris 8 (sparc64): works (testsuite and usage on the shell
   account; please do not distribute the binaries)</li>
  <li>Generic GNU/Linux information: on most distributions, the testsuite
   succeeds without trouble after installing ed(1). We must build a dynamic
   executable because otherwise it dlopen(3)s at runtime the exact versions
   of the shared libraries available at build time and stuff might break, so
   do not distribute binaries, they are distribution- and buildhost-specific.
   Manual page generation usually succeeds with recent versions of GNU groff,
   but the place to install them is not unified.</li>
  <li>CRUX GNU/Linux (i386): works (package by Han Boetes who even uses mksh
   as /bin/sh and tells everyone to ditch bash)</li>
  <li>Available under FreeBSD as ports/shells/mksh</li -->
  <li>Ubuntu GNU/Linux (amd64 i386 powerpc): part of &quot;edgy universe&quot;</li>
 </ul></li>
 <li>mksh R27d<ul>
  <li>There is a DragonFly pkgsrc in
   preparation, I wonder why they haven't been committed yet.</li>
  <li>Has been verified to build on NetBSD/alpha.</li>
 </ul></li>
 <li>mksh R27c<ul>
  <li>Solaris 10: Tonnerre says it passes test suite. His X login
   manager crashes when using mksh as default shell (also under
   GNU/Linux for him, can't reproduce), and scp(1) seems to fail.</li>
  <li>An mksh package exists in the Fink package manager for Mac OSX.</li>
 </ul></li>
 <li>mksh R26c<ul>
  <li>Windows&reg; 2000 / Interix (SFU 3.5): works, no testsuite (perl
   too old); can be used to replace system shell except for its I18N
   and Win32 features.</li>
  <li>NetBSD&reg; 1.6.1/pmax: I have replaced the standard shell
   with mksh with good success and only one testsuite failure
   in <em>heredoc-tmpfile-8</em>. On NetBSD&reg; 1.5/pmax this
   trick does not work because the system scripts are not compatible
   with the Korn shell.</li>
  <li>Gentoo GNU/Linux (ppc, x86): an official ebuild exists.</li>
 </ul></li>
 <li>mksh R25b<ul>
  <li>MirOS #7: works well</li>
  <li>GNU/Cygwin: builds, testsuite succeeds, basic usage.</li>
 </ul></li>
 <li>mksh R25<ul>
  <li>NetBSD&reg; 2.0.2/i386: works well</li>
  <li>DragonFly BSD: Portable mksh builds; the test suite succeeds.</li>
  <li>Mac OSX Tiger: The testsuite works, and it can be used to play around.
   Apple does not install the tools needed for a static build.</li>
  <li>Nexenta OS (i386): part of &quot;elatte&quot; GNU/Solaris</li>
  <li>Ubuntu GNU/Linux (amd64 i386 powerpc): part of &quot;dapper universe&quot;</li>
 </ul></li>
 <li>mksh R24<ul>
  <li>Mac OSX Panther: I don't see a difference to Tiger.</li>
 </ul></li>
</ul>

<h2 id="vsn">Recommendations on version numbering</h2>
<p>mksh by default uses a version numbering scheme that uses full integers,
 prefixed by a capital letter R significing “Release”. If minor updates are
 required or requested, a lower-case letter from the standard latin alphabet
 will be appended, starting at ‘b’ and ending at ‘z’ (but usually way before
 or at ‘i’). If a packaging system cannot handle version numbers such as
 <tt>mksh-R29b</tt> (source) -&gt; <tt>mksh-R29b-1</tt>, <tt>mksh-R29bp1</tt>
 (binary), packagers OUGHT TO map this to a numerical system as follows:
 <tt>mksh-29.2-1</tt>, <tt>mksh-29.2.1</tt>, <tt>mksh-29.2nb0</tt>, depending
 on the packaging-system local policy for build numbers / patchlevels.</p>
<p>Schemes to AVOID are <tt>mirbsdksh-1.29b</tt>, <tt>mksh-2.9.2</tt>, or
 worse. Please adhere to our recommendations so that users are able to locate
 mksh in their operation environment of choice.</p>

<h3 id="editor">/bin/ed</h3>
<p>While we're at it – recommendations for packagers – there is another set
 of do's and dont's: location of the UNIX® standard text editor. As outlined
 in traditional unixoid operating system standards, manifested into POSIX,
 and – for these three-letter words that aren't Unix, no matter which of the
 kernels they use in their variety of so-called distributions – the <a
 href="http://www.pathname.com/fhs/pub/fhs-2.3.html#SPECIFICOPTIONS2">FHS</a>
 (FSSTND): ed lives in <tt>/bin/ed</tt>, period.</p>
<p>Patching mksh's to look for ed in ANY other location is a MUST NOT.</p>

<h2 id="plans">Future Plans</h2><ul>
<li>bash-style multiline command line editing, as an option (the current
 horizontally scrolled one is finally (with R28) bug-free even with
 multiline and very long prompts optionally with embedded newlines,
 and more suitable for small terminals)</li>
<li>I'd like to switch the internal integer type to 64 bits
 signed (any takers?). This includes 2^64-1 (not 2^31-1) as
 maximum valid array index; typeset -i&lt;number&gt; is unsigned.</li>
<li>Adding <tt>goto</tt> and <tt>label</tt> keywords/commands.</li>
<li>Adding builtins <tt>realpath</tt>, <tt>fstat</tt>, <tt>lstat</tt>,
 <tt>traverse</tt>.</li>
<li>for a b in …; do (like make(1) does)</li>
<li>A sensible website</li>
<li>Build on more platforms</li>
<li>Build with platforms' native tools</li>
<li>bash-style <a
 href="http://article.gmane.org/gmane.os.miros.general/5580">array
 initialisation</a> (mapping <tt>x=(a b c)</tt> to <tt>set -A
 x -- a b c</tt>)</li>
</ul>

<h2 id="clog">Recent Changes</h2>
<p>Changes in the current (unreleased) development version:</p><ul>
 <li>Begin porting mksh to the <a href="http://9fans.net/">Plan 9</a>
  ANSI'n'POSIX Environment (not finished)</li>
 <li>Plan porting mksh to <a href="http://www.minix3.org/">Minix 3</a>
  (not finished yet)</li>
 <li>Begin work on building on Solaris with Sun's compiler (contributed
  by Jupp “cnuke” Söntgen) – not public, not finished yet</li>
 <li>No longer build a statically linked shell by default; do not try,
  do not provide any means; user has to use LDFLAGS instead.</li>
 <li>Remove some probably dead mirtoconf checks</li>
 <li>Remove commented out <tt>-fwhole-program --combine</tt> check and
  still active <tt>-fno-tree-vrp</tt> bug workaround thing, the latter
  because the bug seems to only appear for functions that also exist as
  a builtin (which was declared with the nonnull attribute)</li>
 <li>Fix a long-standing typo, 10x moritz@obsd</li>
 <li>Make mksh compilable with SUNpro 12 (inside compat_linux(8)) for
  real, both targetting a Linux binary – Total failed: 12 (11 unexpected) –
  and a native MirOS BSD binary – which works more than just fine…</li>
 <li>Prefer more common signal names (SIGCHLD) over uncommon ones (SIGCLD)</li>
 <li>Quieten gcc and support SUNpro 5.8 on Solaris 10 on sparc64</li>
 <li>Optimise signal handling and detection; enable compilers whose
  præprocessor doesn't have <tt>-dD</tt> to generate list of signals</li>
 <li>Optimise mirtoconf meta-checks for persistent history etc.</li>
 <li>Fix a bug preventing manual page generation on Solaris</li>
 <li>Add support for the Intel® C Compiler and quieten it a little; fix a few
  minor buglets (mostly type conversion) its too verbose warnings show, as
  well as some errno ab-/mis-use</li>
 <li>Remove support for honouring the <tt>CPP</tt> environment variable;
  <tt>$CC -E -</tt> is simply used instead in the places where <tt>$CPP</tt>
  was used previously, because that was used in other places already</li>
 <li>If a file called <tt>arc4random.c</tt> is lying around in the source
  directory at mirtoconf time, scan for <tt>&lt;sys/sysctl.h&gt;</tt> and
  use the file if arc4random(3) isn't found otherwise. From Debian.</li>
 <li>If the basename of argv[0] starts with “sh”, activate FPOSIX.</li>
 <li>If FPOSIX, don't pre-define any aliases (like integer) to benefit
  operating environments that never heard of the great Korn Shell…</li>
 <li>#if defined(MKSH_SMALL) || defined(MKSH_NOVI) disable the vi
  editing mode.</li>
 <li>Don't try to execute ELF, a.out, COFF, gzip or MZ binaries.</li>
</ul>
<p>Please use mksh R29f because of below modifications:</p><ul>
 <li>Fix detection of function prototypes (data declaractions were ok)</li>
 <li>Fix a regression introduced in R29e regarding the scroll bar</li>
 <li>Recommendation on <a href="#vsn">version numbering</a> changed;
  suffixes b, c, … match .2, .3, … like alphabetical numbering order</li>
</ul>
<p>Dedicated to David Ramsey and Coverity, mksh R29e unveils:</p><ul>
 <li>Don't poll in strcasestr(3) if setlocale(3) isn't used</li>
 <li>Remove some redundant or unused functions</li>
 <li>Fix a horizontal scrolling on tabcomplete bug, reported by David
  Ramsey, thanks a lot!</li>
 <li>Fix the utf8bom-3 regression test on MirBSD-current</li>
 <li>Some workarounds around problems found by Coverity Scan, mostly
  issues with Scan, but the changes help gcc to optimise better</li>
 <li>Fix a null pointer dereference in error path, mis-use of strchr(3)
  to search for a NUL byte, and two possible out-of-bounds array
  accesses, found by Coverity Scan, many thanks!</li>
 <li>Optimise <tt>dot.mkshrc</tt> further</li>
 <li>Fix a cursor mis-positioning on backspace bug, reported by David
  Ramsey again, thanks!</li>
 <li>Fix a scrollbar mis-display on delete bug, reported by David Ramsey</li>
 <li>Fix a scrollbar mis-display on insertion bug, discovered while
  fixing the above bug</li>
 <li>Correct displaying of scrollbar on delete, with help from dramsey</li>
</ul>
<p>Portability improvements in mksh R29d contain:</p><ul>
 <li>Unbreak testsuite on Mac OSX (whose brain-dead file system does
  non-standard Unicode decomposing and normalisation on filenames,
  thus rendering ANOTHER of our tests unusable *sigh*)</li>
 <li>Port to AIX, thanks to Kurt Telep</li>
 <li>Minor fixes for HP-UX, thanks to HP Testdrive Programme</li>
 <li>size optimisation if utf-8 is assumed to be always on</li>
 <li>Do not scan for and use “-fwhole-program --combine” because it's the
  cause of at least http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=408850
  and breakage with FORTIFY_SOURCE on SuSE; thanks to Pascal Bleser (yaloki),
  Marcus Rückert (darix), Martin Zobel-Helas, Steve Langasek (vorlon) for
  tracking this bug down in two different places; Closes: Debian #421518</li>
 <li>small manual page fixes</li>
 <li>copy $PATH from Build.sh to test.sh; thanks to a test account on Sun
  Solaris 11 donated by Julian Wiesener (yofuh) I was able to verify that
  you want to prefix $PATH with <tt>/usr/xpg4/bin</tt> because the other
  tools (<tt>/usr/bin</tt>, <tt>/usr/ccs</tt>, et al.) suck major arse…</li>
 <li>Note: the SuSE package in the Buildservice was created by darix (without
  my knowledge), is maintained by loki now</li>
 <li>Note: the PDF manual page is now PDF 1.3 (Acrobat 4.x) again</li>
</ul>
<p>Minor bugfixes in mksh R29c – you might want it:</p><ul>
 <li>Regression fix: mksh has some kind of “encoded string” format;
  use wdcopy() not str_save() to duplicate this; affects formatting of
  an error message (and below item) only though</li>
 <li>Bugfix: pdksh has an out-of-bounds memory access; the area of code
  has been touched by OpenBSD developers but the problem not fixed by
  them; some optimisations turned this (for the error message formatting
  of the above item) into a memory corruption bug that was <em>only</em>
  triggering an actual issue on Debian GNU/Linux experimental on IA-64
  with some beta version of GNU glibc; add an appropriate bounds check</li>
 <li>Add mirtoconf check for “large file support” needed on some obscure
  platforms; requested by bsiegert@, idea from GNU autoconf (thanks)</li>
 <li>Add zsh workaround to Build.sh (just to be on the safe side; zsh
  isn't bourne sh or posix sh compatible, but I didn't find any severe
  problems with using it to build mksh yet, it's a weird shell though)</li>
 <li>If execve(2) fails with ENOEXEC, try and parse a shebang line
  ourselves, in case the kernel can do less than we do, unless MKSH_SMALL</li>
 <li>Strip off and ignore an UTF-8 Byte Order Mark (U+FEFF, 0xEF 0xBB 0xBF)
  at the beginning of input (file, -c option, stdin, interactive, eval)
  and when processing shebang lines and enable utf8 mode if encountered</li>
 <li>Enhancements to the <tt>dot.mkshrc</tt> file, whose status (in MirBSD
  itself) is now upgraded from “sample file for portable mksh to show off to
  other OSes” to “used as skeleton file in the default installation” – gets
  us rid of duplicating this stuff in /etc/profile (MirBSD native) a̲n̲d̲ makes
  sure that users of portable mksh also have the latest goodies</li>
 <li>When doing shebang parsing, accept not only LF and NUL but also CR as
  markers for end of the (first) line</li>
 <li>If executing fails, tell the user what exactly failed, too</li>
</ul>
<p>Immediately upgrade to mksh R29b please:</p><ul>
 <li>Bugfix: display UTF-8 control characters (U+0080..U+009F, i.e.
  everything with a wcwidth(3) of -1) the same as ASCII control
  characters (U+0001..U+001F), i.e. with a ctrl caret followed by
  its value XOR U+0040; subsequently treat their width as 2;
  fix crash (CPU hog in spinning loop) on meta-tab+backspace</li>
 <li>Fix setlocale description in manual page</li>
 <li>in the utf-8 mode, invalid multibytes are now handled more strictly:<ul>
   <li>if it's in x_literal() (“quote” / ^V) mode, it's accepted like now</li>
   <li>if it's a mb sequence start, it's rejected with a beep</li>
   <li>if it's a mb continuation, the whole sequence is silently rejected</li>
  </ul>
  This makes command line editing when accidentally hitting, e.g. with
  my mircvs://contrib/samples/dot.Xmodmap layout, Mode_switch-x much
  more robust.</li>
 <li>remove unused utf_width() macro</li>
 <li>if $CC supports -fstack-protector-all, add it to CFLAGS</li>
 <li>shut up some more gcc 4.1.2 warnings</li>
 <li>if $CC supports -fno-tree-vrp and is subject to the <a
  href="http://gcc.gnu.org/bugzilla/show_bug.cgi?id=30785">null pointer
  test optimised away</a> bug, use -fno-tree-vrp to work around it</li>
 <li>in Build.sh, simplify a.out / a.exe (Cygwin) issues</li>
 <li>shrink the manual page to 39 pages sized DIN A4 when built as PS/PDF</li>
 <li>fix a typo in the manual page</li>
</ul>
<p>Please upgrade to mksh R29 due to the following changes:</p><ul>
 <li>Fix portability of regression tests using fgrep(1), twice</li>
 <li>Fix description of $RANDOM in manual page</li>
 <li>Fix build under OpenSolaris Build 47 (reported in IRC)</li>
 <li>Use easier __RCSID() stuff from MirOS #9-current</li>
 <li>Don't shebang with spaces in test.sh creation</li>
 <li>Remove -fno-strength-reduce from default CFLAGS, the compiler bug
  was fixed between gcc 2.7.2 and gcc 2.7.2.1&#8230;</li>
 <li>Avoid unaligned memory access causing SIGBUS on IA-64 on Debian</li>
 <li>Convert to autoconf-style check for function and header file existence
  of &lt;sys/param.h&gt;, arc4random(3), arc4random_push(3),
  setlocale(3) and LC_CTYPE, nl_langinfo(3) and CODESET, getmode(3) and
  setmode(3), strcasestr(3), and strlcpy(3)</li>
 <li>Add <tt>set -o utf8-hack</tt> aka <tt>mksh -U</tt> which
  changes the Emacs editing mode to an experimental CESU-8 aware
  multibyte mode (not implemented using wide chars unless internally
  needed; does not require OS support); check setlocale(LC_CTYPE, "")
  and nl_langinfo(CODESET) if found to auto-enable utf-8 mode
  in interactive shells</li>
 <li>Simplify and clean up code; try to remove or replace function calls
  by smaller equivalents; spot a few non-fatal off-by-one errors</li>
 <li>If Build.sh is called with <tt>-DMKSH_SMALL</tt> in the CPPFLAGS
  environment variable, the built-in mknod(8) will not be included,
  and other functionality and verbose usage messages will be excluded;
  some macros will be turned into functions to save space and to check
  if the utf8-hack should be enabled, nl_langinfo(3) is not called.
  The -T option to mksh(1) and persistent history are not supported.</li>
 <li>Hand-optimise the code to be small, even in the normal build</li>
 <li>Unbreak the -d option to <tt>Build.sh</tt></li>
 <li>Check for <tt>cc</tt> options -Wno-error, -fwhole-program --combine,
  and (if MKSH_SMALL) -fno-inline and use them if they don't fail</li>
 <li>The autoconf-style (&#8220;mirtoconf&#8221;) checks have been enhanced,
  improved and be made more verbose by default</li>
 <li>Rewrite a few functions both to save space and to simplify/unify
  the code; also spotted a few bugs in existing (inherited) code</li>
 <li>Fix format string mistakes and wrong function and data prototypes</li>
 <li>Correct zero-padding for right-justified strings; add regression test</li>
 <li>EXECSHELL is now ${EXECSHELL:-/bin/sh} again</li>
 <li>Remove duplicate code if feasible; rewrite remaining code to solve
  all use cases, or use standard library functions such as qsort(3);
  rework the ctypes and chtypes stuff, get rid of libc/ctype.h</li>
 <li>Change the eaccess() code to not use setreuid(2) and friends, like
  OpenBSD ksh and apparently pdksh. I'm not too sure about the implications,
  except that they only affect setuid shell scripts.</li>
 <li>Use setresuid(2) and friends, and setgroups(3) and &lt;grp.h&gt; instead
  of seteuid(2), setuid(2) etc. on operating systems that support them</li>
 <li>Work around (i.e. remove) all but two <tt>-Wcast-qual</tt> issues</li>
 <li>Work around a bug in the GNU implementation of the Berkeley mdoc macros
  which comes with GNU groff (only visible in MirOS with groff -mgdoc, but
  shows on other operating systems), discovered by crib in IRC</li>
 <li><tt>$RANDOM</tt> is always an unsigned 15-bit decimal integer, for all
  Korn shell derivates; idea from twkm in IRC</li>
 <li>Improve/correct description of typeset command in manpage, and
  implementation of <tt>typeset -p</tt> in mksh</li>
 <li>Remove the non-standard emacs-usemeta and vi-show8 shell options,
  assume the user either has a 7-bit environment, an 8-bit clean terminal,
  or a UTF-8 environment (preferred), and the dummy sh option</li>
 <li>Build.sh fix for conservative (old) versions of gcc; help Debian</li>
 <li>Compute user-given ulimit value times ulimit unit as an rlim_t value,
  not as long value; catches some 32 bit overflows on 32 bit platforms
  due to a missing cast</li>
 <li>Fix some typos in the manual page</li>
 <li>Build.sh add notes for old and non-gcc compilers (TODO)</li>
 <li>Upgrade licence to latest template (revision 1.20)</li>
 <li>Fix reverse logic error in strcasecmp(3) vs strcasestr(3) issue</li>
 <li>Enhance sample ~/.mkshrc</li>
 <li>Prevent segfaults when setlocale(3) or nl_langinfo(3) return NULL</li>
 <li>Use RLIMIT_AS if RLIMIT_VMEM is not found</li>
 <li>Don't expand <tt>~foo/</tt> if MKSH_SMALL, spares getpwnam(3) call</li>
 <li>Fix and autoconfify signal list generation</li>
 <li>Build.sh now uses $TARGET_OS as "uname -s" output for cross builds</li>
 <li>Set flag for regression tests that can't succeed if MKSH_SMALL</li>
 <li>Don't even check for setlocale(3) if MKSH_SMALL, unless overridden
  by user / build environment</li>
 <li>Scan for C Preprocessor, use $CPP if $CC -E fails</li>
 <li>Fix possible nil pointer dereferences and signal name mismatches</li>
 <li>Scan for __attribute__((...)) and -std=gnu99 (req'd on Solaris 10)</li>
 <li>Correct $LDSTATIC logic, unbreak -d, don't let the user override
  (or need to) $SRCS, $sigseen</li>
 <li>Simplify TIOCGWINSZ handling, no need to catch SIGWINCH any more;
  window size changes are processed after input line editing ends (i.e.
  the lines are entered or <tt>ESC #</tt> (emacs mode) is pressed) and
  at startup; ^L (redraw) can't change window size on the fly</li>
 <li>Add -fwrapv to standard CFLAGS, just to be safe, like with when I
  added -fno-strict-aliasing; this is pending a bug fix in gcc, see <a
  href="http://gcc.gnu.org/bugzilla/show_bug.cgi?id=30477">PR#30477</a></li>
 <li>autoconfify compiler flags, c preprocessor</li>
 <li>add option to avoid pulling in getpwnam(3) in !MKSH_SMALL</li>
 <li>scan for certain headers, types; improve portability</li>
 <li>speed up autoconfiguration process in failure case</li>
 <li>finally fix static vs dynamic linking issues</li>
 <li>fix manpage (.Nm macro) glitch with GNU nroff 1.15</li>
 <li>improve auto-detection of which regression tests are valid</li>
 <li>mention failure to revoke(2) is possibly insecure</li>
 <li>if MKSH_SMALL, don't include -T support and don't scan
  for revoke() function</li>
 <li>new #ifdef MKSH_NEED_MKNOD to embed mknod(8) even if
  MKSH_SMALL is enabled</li>
 <li>do not scan for revoke() on GNU/Linux since it always fails</li>
 <li>simplify GNU/Linux CPPFLAGS and use them for GNU/HURD and
  GNU/kFreeBSD (tested on Debian experimental, thanks to the
  ftbfs.de autobuilder and Michael "azeem" Banck)</li>
 <li>fix the 'bind' (no args) builtin output</li>
 <li>new #ifdef MKSH_ASSUME_UTF8 to not check setlocale() and
  nl_langinfo(CODESET) if we want to always enable the utf-8
  command line editing mode</li>
 <li>tabcomplete a newline to singlequote+newline+singlequote
  instead of backslash+newline which is eaten; thanks to
  Thomas E. "TGEN" Spanjaard for noticing</li>
 <li>remove shebang line from check.pl which isn't +x anyway</li>
 <li>fix 'hd' alias in dot.mkshrc example to not run off
  an ANSI standard 80 column screen; simplify</li>
 <li>integrate MKSH_NEED_MKNOD and MKSH_ASSUME_UTF8 with Build.sh</li>
 <li>Work around Solaris /usr/ucb/tr, Solaris /usr/xpg4/bin/tr,
  Minix 3 /usr/bin/tr, and SUSv3 deficiencies</li>
 <li>Fix compilation on more platforms (Interix, Cygwin, Linux 2.0 libc5,
  Debian GNU/kFreeBSD, Debian GNU/HURD, &#8230;)</li>
 <li>Use autoconfiguration for persistent history stuff</li>
 <li>Fix the code (add "const" in like 1001 places) to be able to
  build without <tt>-Wno-cast-qual</tt> (hope it's safe now)</li>
 <li>Optionally use const-debugging versions of strchr(3), strstr(3),
  to work around deficiencies in ANSI C</li>
 <li>The above directly led to our own strcasestr(3) implementation
  for OSes which don't have it</li>
 <li>Optimise <tt>dot.mkshrc</tt> macros</li>
 <li>Let <tt>dot.mkshrc</tt> not return failure early</li>
 <li>Remove shadowing warnings for more OSes</li>
 <li>Support old ash(1) versions in Build.sh</li>
 <li>Support use of <tt>_NSIG</tt> for <tt>NSIG</tt></li>
 <li>Optimise ctags(1) generation</li>
</ul>
<p>Upgrading to mksh R28 with these changes is highly recommended:</p><ul>
 <li>For these who build software as root, the regression testsuite
  has been adapted to pass when using a priviledgued shell. You have
  been warned, though. Do not compile software as root.</li>
 <li>Fix some more <tt>-Wchar-subscripts</tt> on NetBSD&reg;</li>
 <li>Adjust manual page to the fact that mksh can be used as
  <tt>/bin/sh</tt> although it's not specifically designed to</li>
 <li>Simplify mdoc/nroff macro load in manual page</li>
 <li>Add sample file: <tt>dot.mkshrc</tt></li>
 <li>Correct and enhance book citation list in the manual page</li>
 <li>Bring back the "version" editing command in both emacs and
  vi modes, at <tt>ESC ^V</tt> like AT&amp;T ksh93r+</li>
 <li>Fix typo which resulted in the wrong names for signals being
  printed (error codes were used instead) on GNU/Linux, Solaris
  and GNU/Cygwin. Ease changing signame/siglist sources.</li>
 <li>Some more code cleanup and redundancy removal</li>
 <li>Merge a few OpenBSD changes, yielding better multiline prompt
  support and textual improvements in the manual page</li>
 <li>Adjust $PS1 sizing, printing, and redrawal routines
  for mksh behaviour and single- and multiline prompts</li>
 <li>Unbreak build process on Cygwin, fix manpage generation</li>
 <li>For the AT&amp;T $PS1 hack (second char = CR), do not
  output the delimiting characters any more, even if they
  are printable &ndash; fixes platforms without non-printable
  characters (Interix, Cygwin) and prompt size calculation</li>
 <li>Calculate length of prompt in lines and columns-of-last-line
  instead of using some tricks to skip the beginning of the prompt,
  resulting in correct redrawing of prompts with ANSI colour codes</li>
 <li>Correct displaying of prompts spanning more than one line
  and/or with embedded newlines or carriage returns; correct
  documentation of $PS1 and the redraw editing command</li>
 <li>Change one of the testsuite "expected failure" tests from bug
  to feature &ndash; it might actually be required by make(1)</li>
 <li>Enable to bind key sequences which consist of the usual optional
  one or two pr&aelig;fices and the control character, as well as an
  optional trailing tilde (if the trailing character is not a tilde,
  it's processed as usual, but processing of the editing command is
  postponed until after the trailing character has been read)</li>
 <li>Bind the NetBSD&reg; wscons (vt220 / wsvt25), GNU screen and
  XFree86&reg; (xterm-xfree86) &quot;home&quot;, &quot;end&quot;
  and &quot;delete&quot; keys to ^A, ^E and ^D, respectively, except
  that &quot;delete&quot; does not act as logoff switch</li>
 <li>Correct <tt>Test.sh</tt> shebang line</li>
 <li>Make sure ^T is bound to 'transpose' as documented
  (bug spotted by hondza)</li>
 <li>Remove the 'stuff' and 'stuff-reset' editing commands</li>
 <li>Correct the manual page regarding the 'abort' command, its
  interaction with 'search-history' and how to exit the latter</li>
 <li>Bring back "set -o posix" turning off 'braceexpand'</li>
 <li>Mention IRC channel <tt>#mksh</tt>/Freenode in manual page</li>
 <li>Merge <tt>gensigs.sh</tt> into <tt>Build.sh</tt>, eliminating
  the need for <tt>$SHELL</tt> and making it more robust to broken
  user shells such as zsh, use the mksh just built for <tt>Test.sh</tt>;
  simplify CPPFLAGS and reduce size of generated table</li>
 <li>Run the signal name generator only if needed</li>
 <li>Use the -c option to GNU nroff, always</li>
 <li>Make the &quot;last command of a pipeline is executed in a
  subshell&quot; issue a dependable mksh feature</li>
 <li>Improve regression test comments and a few tests</li>
 <li>If $RANDOM is generated from arc4random(3), display at
  most 31 bits of it like nbsh(1), instead of only 15 bits.</li>
 <li>Rename the regression test script from Test.sh to test.sh</li>
 <li>Improve Build.sh output regarding other files than the binary</li>
 <li>Mention <tt>#ksh</tt>/Freenode in the manual page, since its
  founder (twkm) said it's okay and on-topic as well</li>
 <li>Fix persistent history, add regression test</li>
 <li>Check for arc4random(3) and arc4random_push(3) by using
  the compiler instead of hardcoding OSes which have and which
  don't, because that's not always true</li>
 <li>Fix some regression tests (based upon user feedback too)</li>
</ul>
<p>We recommended mksh <b>R27e</b> to be used:</p><ul>
 <li>Allow <tt>Test.sh</tt> to be passed parameters (-v)</li>
 <li>Fix all <tt>-Wchar-subscripts</tt> on Solaris/sparc64
  and NetBSD&reg;/alpha and remove <tt>-Wno-char-subscripts</tt>
  from Build.sh</li>
 <li>Correct date in version and manual page</li>
</ul>
<p>What became of mksh <b>R27d</b> in the meanwhile?</p><ul>
 <li>Changes for easier crossbuildability</li>
 <li>Honour $CPPFLAGS in gensigs.sh</li>
 <li>Only source ${ENV:-~/.mkshrc} for interactive (FTALKING) shells</li>
 <li>There's a chance that non-MirOS systems have arc4random_push(3)
  at some time in the future, so make it configurable.</li>
</ul>
<p>Featuring mksh <b>R27c</b> with these changes:</p><ul>
 <li>emacs-usemeta now behaves like vi-show8 (be careful with 0x80-0x9F)</li>
 <li>Portability cleanup and speed-up; refine pr&aelig;processor defns</li>
 <li>GNU groff compatible manual page</li>
 <li>Fixes for Solaris 10 support</li>
 <li>Add <tt>~/.mkshrc</tt> as $ENV feature (see manual page)</li>
 <li>Illustrate interactive shell tricks ($PS1) in manual page</li>
 <li>Enhance testsuite</li>
 <li>Incorporate some more code cleanup by OpenBSD</li>
 <li>Reference the O'Reilly books in the manual page</li>
 <li>R27c: fix packaging errors of previous versions</li>
</ul>
<p>Changes in the minor version <b>R26c</b>, relative to R26b:</p><ul>
 <li>Code cleanup by OpenBSD</li>
 <li>Documentation enhancements</li>
 <li>Fix gcc4 warnings in portable mksh</li>
</ul>
<p>Changes in the minor version <b>R26b</b>, relative to R26:</p><ul>
 <li>Makeup changes to copyright file (change comment leader)</li>
 <li>Sync licence with MirOS template (disclaimer changed a little)</li>
 <li>When building, generate a <tt>./Test.sh</tt> on the fly which
  can be used instead of having to copy and paste a long line to run
  the regression test suite (still no way to run ifs.sh as we cannot
  distribute it, though).</li>
 <li>Add a few programming tricks to the manual page</li>
 <li>Fix abuse of unquoted characters in the manual page</li>
 <li>(no actual source code changes)</li>
</ul>
<p>New major version <b>R26</b> changed this, relative to R25b:</p><ul>
 <li>Change the behaviour of <tt>\"</tt> in here documents to
  adhere SUSv3 (inspired by OpenBSD, most code by tg@)</li>
</ul>
<p>New minor version <b>R25b</b> contains these changes:</p><ul>
 <li><tt>arc4random_push(3)</tt> does not exist on older MirOS
  systems; fixes build on MirOS #7quater</li>
 <li>Add GNU Cygwin to the list of supported platforms</li>
</ul>
<p>New major version <b>R25</b> contains these changes:</p><ul>
 <li>Some manual page fixes and updates</li>
 <li>On window resizing, the COLUMNS and LINES variables are updated
  automatically, not only after the next command (from OpenBSD)</li>
 <li>Fix some redraw problem (from OpenBSD)</li>
 <li>Allow &lt; and &gt; for test and [, not only [[</li>
 <li>If an array index is out of bounds, tell which one (from OpenBSD)</li>
 <li>Add mknod(8) for pipes (user/root) and devices (root only) as a
  shell builtin &ndash; idea and some of the code from OpenBSD</li>
 <li>Improve compatibility with Solaris, GNU/Linux, Darwin, Interix</li>
 <li>Prevent redefinition of __rcsid string on systems without __RCSID
  macro (found by Han Boetes)</li>
 <li>Remove the need to manually specify -d on some OSes which need it</li>
 <li>Add a compiler flag to reduce some spurious Solaris-only warnings</li>
</ul>
<p>R24c is another clean-up release, with no change to KSH_VERSION.</p><ul>
 <li>Document stance on quoting policy in here documents</li>
 <li>More fixes for GCC 4 warnings</li>
</ul>
<p>R24b is a minor clean-up relase, recommended especially on Darwin.</p><ul>
 <li>please GCC 4 with the usual crazy set of warning flags</li>
 <li>remove 'version' editor binding and remap emacs ^V to quote-meta ('literal')</li>
 <li>use open(2) instead of creat(3), from OpenBSD</li>
 <li>fix order of includes</li>
 <li>some code simplification; no explicit LFS needed any more</li>
</ul>
<p>R24 is an <b>important bug fix</b> release and the new required
 minimum version to be installed for MirMake. Changes are:
</p><ul>
 <li>GNU/Cygwin is now supported but not officially tested</li>
 <li>DragonFly BSD is now supported and officially tested</li>
 <li>FreeBSD should work as a side effect of the above</li>
 <li>On NetBSD, arc4random(3)
  can now be used if it exists</li>
 <li>no longer look at argv[0] to determine if restricted shell</li>
 <li>changes to $EDITOR and $VISUAL no longer affect the current
  editing mode</li>
 <li>emacs on, emacs-usemeta off is now the default editing mode</li>
 <li>the special "posix" and "sh" modes are gone</li>
 <li>code, test suites and documentation have been cleaned up a little</li>
 <li>Korn's bizarre /dev/fd hack is now no longer supported</li>
 <li>undo fix for Debian PR #71256 which turned to be bogus and break make(1)</li>
 <li>fix compilation and invocation of test suite with whitespace in the
  pathnames for real, this time</li>
 <li>the distfile is now signed using gzsig(1)</li>
</ul>
<p>R23 comes with an overhauled build system providing more flags for
 easier configuration, a bug-fix if the relative path to $0 contained
 a space, and does not need h2ph(1) to
 build some headers any more. Also, the code has cleaned up a bit and
 some manual page glitches were corrected. Some of these changes
 originated by Han Boetes, a few came via the OpenBSD project.</p>
<p>R22d is the first version which works if source or build directory
 contain spaces in the pathname. It also allows building without
 bothering to pre-format the manual page.</p>
<p>R22c contains some compile time warning fixes on non-MirOS platforms.</p>
<p>R22b contains an important fix regarding the srand(3) initialisation logic and a
 portability fix for NetBSD.</p>
<p>R22 is the result of three different kinds of work: integrating diffs
 from Debian's pdksh package, as needed, including fixing bugs and of
 course testing and fixing docs; fixing the dreaded emacs-mode filename
 with brackets (hello AONE); much cleanup and polishing. Also, the new
 codebase has been tested on a fair number of systems now, with more to
 follow (maybe even new, currently unsupported, platforms).</p>
<p>R20b contains some minor arc4random and build fixes against R20.</p>
<p>R21 has been a three-way integration work from OpenBSD-current's ksh,
 MirOS-current's ksh and portable mksh R20. This is the first release
 to come without autoconf'd script; it is much smaller and installs
 both faster and easier. Several bugs have been fixed, the testsuite
 has been enhanced and the code was cleaned up largely. pdksh lookalikeness
 was largely dropped, and support for octal and sedecimal (hexadecadic)
 numbers via prefixing with <em>0</em> or <em>0x</em> has been added.
 <strong>This is an experimental release; it is not <i>yet</i> supported
 e.g. by MirMake – make(1) – or other tools</strong> but this
 will follow soon. MirbsdKsh R21 is to be the only shell available on
 MirOS #9.</p>
<p>R20 integrated an experimental bugfix from millert@openbsd and shuffled
 some code around. OS/2 support vanished, and the rest of the code shrank
 and was optimised. This is the first version since v1.11 to work on SFU
 (Interix) 3.5 as-is. The upgrade to R20 is <em>highly</em> recommended.
 Note: the mksh R20 distfile has changed from before Dec 14, 16:00.</p>
<p>R19 changes back a bugfix from R18 which caused a regression (from
 OpenBSD) and changed behaviour to match ksh88 on Solaris (from OpenBSD).</p>
<p>v1.18 (R18) fixes some core dump bugs and is a recommended update.</p>
<p>v1.17 comes out with the final MirOS licence template applied, but not
 yet OSI approved (it's not our fault though). There are regression fixes
 and bug fixes; IFS field splitting now works as documented. This version
 is a major improvement both over v1.16 and OpenBSD /bin/ksh, so please
 use it and report possible bugs.</p>
<p>v1.16 IS A BETA VERSION, use at your own risk. This version comes with
 a code cleanup session (for compilation with -Wall -Werror -W -pedantic
 and in preparation for doing an indent(1)
 whack over the source; any volunteers?) and some new features (with -T
 it spawns on a different tty than you're on - cool for single user mode)
 and code removed (the mailbox checking functionality, since everyone sane
 uses UW-IMAPD to access his MBX format folder using IMAPS, port 993, even
 to localhost). The code is also ANSIfied and protoised, in preparation for
 style(9) aka KNF.</p>
<p>There were no v1.13, v1.14, and v1.15 was never released as portable
 version. MirbsdKsh version numbers were pretty much RCS IDs at the
 time of writing this paragraph.</p>
<p>v1.12 fixes the manpages and minor stuff, as well as a signalling bug
 and the inability to build without gcc installed as gcc. It also
 adds installation hints for various operating systems.</p>
<p>v1.11 is a minor update to v1.10 with a few build and style fixes only.</p>
EOF
mws_putfooter
exit 0

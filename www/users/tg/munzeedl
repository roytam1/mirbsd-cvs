#!/bin/mksh
# $MirOS: www/users/tg/munzeedl,v 1.3 2014/12/04 23:07:31 tg Exp $
#-
# Copyright © 2014, 2015
#	mirabilos <tg@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un‐
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person’s immediate fault when using the work as intended.
#-
# Known issues:
# - edit first line of output then run that through mksh
# - intermixing with caches is… challenging… at right places, insert
#   「(( ++curfinds ))」 lines
# - not even FTC can be scanned for, so nTF is always unset (or “0”,
#   but, these you got to do manually)

user=mirabilos
num=${1:-0}
[[ $num = +([0-9]) ]] || exit 1

cd "$(dirname "$0")"

set -A dates
set -A pointses
set -A ids
set -A names
i=0

n=-1
hasmore=1
while (( hasmore )); do
	(( ++n )) && sleep 3
	ftp -4 -o munzeedl.tmp https://www.munzee.com/m/$user/captures/$n/ >&2
	<munzeedl.tmp sed $'s/<section>/\\\n/g' | \
	    perl -ne 'print "$3|$4|$5|$1|$2\n" if ($_ =~ m,^.*<a class="munzee-id" href="/(m/[^"]*)/">([^<]*)</a>.*data-captured-at="(2[0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9])T([^"]*)".*<div class="stat"> <div class="number"> ([0-9]+) .*$,);' |&
	hasmore=0
	while IFS=\| read -pr date time points id name; do
		hasmore=1
		dates[i]=${date:8:2}.${date:5:2}.${date::4},$time
		pointses[i]=$points
		ids[i]=$id
		name=${name##+([	 ])}
		names[i++]=${name%%+([	 ])}
		print -ru2 "D: $date $points $id \"$name\""
	done
	(( hasmore = ((num && (i >= num)) ? 0 : hasmore) ))
done
rm -f munzeedl.tmp

print -ru2 Generating output...
print curfinds=0 >munzeedl.out
while (( i-- )); do
	cat <<-EOF
		print -r -- "ID: \$((++curfinds))"
		# ${dates[i]#*,}
		cat <<'EOI'
			Date: ${dates[i]%%,*}
			Waypoint: ${ids[i]}
			Title: ${names[i]}
			Points: ${pointses[i]}
			----
		EOI
EOF
done >>munzeedl.out

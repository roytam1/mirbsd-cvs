<!-- PageID: about -->
<small class="rcsid">$MirOS: www/content/YWJvdXQ_.inc,v 1.11 2006/07/30 20:33:09 bsiegert Exp $</small>

<p>On this page:</p>

<ul>
 <li><a href="#mirbsd">MirOS BSD</a></li>
 <ul>
  <li><a href="#why">Why not just use OpenBSD?</a></li>
  <li><a href="#livecd">Live CD</a></li>
  <li><a href="#licence">Licencing information</a></li>
 </ul>
 <li><a href="#mirports">MirPorts</a></li>
 <ul>
  <li><a href="#whymirports">Why use MirPorts?</a></li>
 </ul>
</ul>

<h1 id="mirbsd">MirOS BSD</h1>

<p>MirOS is available as a BSD flavour which originated
 as an OpenBSD patchkit, but has grown very much on its own, though
 still being synchronised with the ongoing development of OpenBSD,
 thus inheriting most of its good security history. This variant is
 also called &quot;MirBSD&quot;, but the usage of that word to denote
 MirOS BSD (plus MirPorts) is deprecated.</p>

<p>A very good general overview about MirOS BSD and MirPorts is available
 from our <a href="http://www.allbsd.de/src/Flyer/MirOS/">information
 flyers</a>, which are available in English, German, and French. They are
 distributed on various events by ourselves and/or the <a
 href="http://www.allbsd.de/">AllBSD</a> team.</p>

<p>MirOS started after some differences in opinion between Theo de Raadt,
 the OpenBSD project leader, and Thorsten Glaser, who is now our lead
 developer. The main maintainer of MirPorts is BennySiegert. There are
 several more persons working as contributors on the project.</p>

<h2 id="why">Why not just use OpenBSD?</h2>

<!-- most of these are copied verbatim from the English flyer, need
to elaborate more -->

<!-- look at http://www.mirbsd.org/?wlog-8#e20060301 -->

<p>MirOS BSD often anticipates bigger changes in OpenBSD and includes them
 before OpenBSD itself. For example, ELF on i386 and support for gcc3 were
 available in MirOS first. Controversial decisions are often made
 differently from OpenBSD; for instance, there won't be any support for SMP
 in MirOS.</p>

<p>The most important differences to OpenBSD are:</p>

<ul>
 <li>Completely rewritten bootloader and boot manager without an 8 GiB limit
  and with Soekris support</li>
 <li>Slim base system (without NIS, Kerberos, Bind, i18n, BSD games, etc.),
  Bind and the BSDgames being available as a port</li>
 <li>Binary security updates for stable releases</li>
 <li>ISDN support</li>
 <li>IPv6 support in the web server software</li>
 <li>wtf, a database of acronyms</li>
 <li>Some of the GNUtools (like gzip and *roff) were replaced by original
  UNIX&trade; code released by Caldera (SCO) under a BSD licence</li>
 <li>Based on OpenBSD (-current and older releases)</li>
 <li>64-bit time handling routines (time_t)</li>
 <li>Correct handling of leap seconds</li>
 <li>Full GCC 3.4 support: C, C++, Pascal, Objective-C</li>
 <li>Current versions of the GNU developer toolchain (rcs, binutils, gdb,
  texinfo, lynx etc.)</li>
 <li>GNU CVS 1.12 with custom extensions</li>
 <li>Uses "MirBSD" as its uname</li>
 <li>Binary compatibility with OpenBSD and MirOS #7 via emulation</li>
 <li>Improved random number generator</li>
 <li>Uses sv4cpio with/without CRC instead of tar archives as its package
  format; support for new formats in cpio</li>
</ul>

<h2 id="livecd">Live CD</h2>

<p>In snapshots of MirOS, the installation CD is also a live CD.  That means
 that you can boot a full MirOS system (although without any ports installed)
 from the CD. For special cases, you can also use dd(1) to write the image (or
 the mini-ISO, <tt>cdrom8.iso</tt>) to your hard disk and install from there.
 Attention: All data on the hard disk will be lost.</p>

<p>Releases do not contain the live CD as we cannot (yet) make it dual-bootable
 for the i386 and sparc architecture.</p>

<h2 id="licence">Licencing information</h2>

<p>For the full copyright statement of MirOS, please refer to the
 <a href="/cvs.cgi/src/share/doc/legal/">1stREAD and LICENCE</a>
 files and the <a href="/LICENCE">website licence</a>.
 We prefer new code and documentation to be placed under our
 <a href="/MirOS-Licence">licence template</a> which is compliant to the
 Open Source Definition and conforms to the Debian Free Software
 Guidelines. (Don't be scared by the length of the template, the actual
 licence stops after the first *- followed by instructions only, and
 is way below 1 Kibibyte.)</p>

<h1 id="mirports">MirPorts</h1>

<p>MirPorts&mdash;a derivative of the OpenBSD ports tree&mdash;is our solution
 for installing additional software packages not contained in the base
 system.</p>

<p>Using MirPorts is straightforward. After the first checkout or after
 updates, <tt>make setup</tt> in /usr/ports automatically installs the
 package tools and configuration. The ports themselves are in subdirectories,
 sorted by category. Just executing <tt>mmake install</tt> in such a directory
 will download the source code, compile it, create a binary package and install
 it. Dependencies are automatically installed when necessary. Some ports exist
 in several "flavours", e.g. with or without X support.</p>

<p>Many ports removed for political reasons in OpenBSD (e.g. all the DJB
 software or the Flash Plugin) have been kept in MirPorts and can continue
 being used. We also want to be a place for unofficial or rejected OpenBSD
 ports.</p>

<p>MirPorts does not use the package tools from OpenBSD, which are written in
 Perl, but continues to maintain the previous C-based tools. New features are
 in-place package upgrades and installing your own MirPorts instance as a
 non-root user.</p>

<h2 id="whymirports">Why use MirPorts</h2>

<p><b>Support for multiple platforms.</b> &nbsp; Out of the box, MirPorts has
 support for the following operating systems:</p>

<ul>
 <li>MirOS BSD (-stable and -current)</li>
 <li>OpenBSD (-stable and -current)</li>
 <li>Mac OS X (10.4 and newer) / Darwin</li>
 <li>Interix / SFU 3.5</li>
</ul>

<p>Even on stable releases, using the newest MirPorts version is
 recommended.</p>

<p>The support for Darwin and Interix is still fairly new. On Darwin, MirPorts
 is usable, Interix support is in the alpha stage. Both the BSD build system
 and the autotools/libtool infrastructure has been ported and support shared
 libraries on this platform. Our mid-term goal is to provide at least a part of
 the MirOS base system as a port or a package.</p>

<p>For all platforms, we are still searching for developers as well as testers
 to build packages and to submit bug reports to the developers.</p>

<p><b>MirLibtool.</b> &nbsp; GNU Libtool is used by many packages to build shared
 libraries in a portable way. However, there are many problems with
 it&mdash;for example, it breaks when no C++ compiler is installed. Therefore,
 MirPorts contains a modified version nicknamed MirLibtool.</p>

<p>MirLibtool is based on GNU libtool 1.5. It is compatible with all versions
 of autotools. The MirPorts infrastructure installs it automatically whenever a
 port uses autoconf to recreate its configure script.</p>

<small class="rcsid">$MirOS: www/content/aXB2Ni1zaXh4cw__.inc,v 1.6 2004/11/12 17:54:22 tg Exp $</small>
<p class="admin">ATTN: Candidate for moving into MirWiki!</p>
<h1>IPv6 with SixXS and MirOS</h1>

<h3>Introduction</h3>
<p>Recently, the <tt>ipng.org.uk</tt> tunnel broker went down, and, looking
 for alternatives, most of the MirOS team and our friends has decided to go
 and use the <a href="https://noc.sixxs.net/main/">SixXS</a> tunnel broker.</p>
<p>Because this is not an advertising article, I'd like to point out that
 <a href="http://www.freenet6.net/">Freenet6</a> (see MirPorts) and <a
 href="http://xs26.net/">XS26</a> are other large public TSPs.</p>

<h3>Setting up a handle</h3>
<p>Most people who are experimenting with IPv6 just need a 6BONE handle,
 but the MirOS developers have gotten RIPE (European) handles because
 they are using IPv6 productively. Asian users should go to APNIC,
 American users to ARIN, latino-americanos to LACNIC instead.</p>
<p>The set-up procedure is pretty much the same for all these NICs, with
 6BONE using the RIPE format for entries, but not requiring a MNTNER.</p>
<p>If you are going to register a RIPE handle, you must let a person
 maintain it - that is, if you ever need to change it, the maintainer
 person has to PGP sign the change request, so nobody can play around
 with your handle. Maintainers are people with knowledge and work in
 the NOC area, so not everybody can (or should, for that matter), be their
 own MNTNER. Jeroen Massar of SixXS points out nicely that you should
 just &quot;ask your friendly LIR&quot; (local internet registry); if
 you don't know one, ask a server hoster or ISP nearby. Both MirOS
 developers are admins enough to be RIPE NCC MNTNERs.</p>
<p>In order to get a handle, first retrieve the form to fill out using</p>
<pre>$ whois -h whois.ripe.net -- -t\ person</pre><p> (for a person object,
 which is what you are going to create)<br />Then email the filled out
 person object, including the MNT-BY attribute, to your friendly maintainer,
 or, if you are not going to have it maintained from the very beginning, to
 the <a href="mailto:auto-dbm@ripe.net">RIPE NCC</a> or <a
 href="mailto:auto-dbm@whois.6bone.net">6BONE</a> database backend.</p>

<h4>What if you're stuck or want to know more?</h4>
<p>Detailed help for the RIPE whois database is at the <a
 href="http://www.ripe.net/ripe/docs/databaseref-manual.html">RIPE NCC
 database reference manual</a>; this site at <a
 href="http://eng.hexago.com/6bone/registry/">Hexago (former
 Viag&eacute;nie)</a> is a nice interface to the <a
 href="http://www.6bone.net/RIPE-registry.html">6BONE registry</a>.</p>

<h3>Registering with SixXS</h3>
<p>Registering is a fairly simple process. Just go to the <a
 href="https://noc.sixxs.net/signup/">SixXS website</a>
 and enter your whois handle, password and a <b>good</b> reason why you
 want an IPv6 tunnel and can't get a native upstream.</p>

<h3>Getting your tunnel</h3>
<p>Log in at <a href="https://noc.sixxs.net/home/">SixXS $HOME</a> and
 ask for a heartbeat tunnel if you're on dial-up, or for a standard
 tunnel if you're on a dedicated line. A week later, you've got enough
 credits to get your own subnet.</p>

<h2>Software</h2>
<h3>Setting up the heartbeat client</h3>
<p>Well... since you're already using the MirOS, you should know how
 to use MirPorts to install the <tt>net/sixxs-heartbeat</tt> client.
 As for the configuration file; it's got a good sample.<br />Note:
 we might write our own heartbeat d&aelig;mon once the protocol is
 finished.</p>

<h3>Some configuration work</h3>
<p>I've got these lines in my <tt>/etc/ppp/ip-up</tt> which is called
 either by <tt>pppd(8)</tt> (if I'm on modem) or <tt>ppp(8)</tt> (if
 I'm on ISDN or PPPoE-ADSL):</p><pre>
ps ax|grep sixxs|grep -v grep|while read pid rest; do
        kill $pid
done
ifconfig gif0 up
nice -n -1 /usr/local/sbin/sixxs-heartbeatd /etc/ppp/heartbeat.conf
route add -inet6 default fe80::%gif0 -mtu 1280
</pre><p>These lines are needed to initialize an <em>unnumbered</em>
 tunnel, in contrast to a <em>numbered</em> tunnel you <b>need</b> if
 you don't yet have a subnet. <strong>Please</strong> note that the
 SixXS staff does <b>not</b> want me to advertise the usage of
 unnumbered tunnels, or to use it at all.</p>

<h3>Further setup</h3>
<h4>Numbered tunnels without subnet</h4>
<p>Simply configure an IP address to the gif0 interface before setting
 the route to it. This looks as follows:</p><pre>ps ax|grep sixxs|grep -v grep|while read pid rest; do
        kill $pid
done
ifconfig gif0 up
nice -n -1 /usr/local/sbin/sixxs-heartbeatd /etc/ppp/heartbeat.conf
ifconfig gif0 inet6 2001:6f8:900:<em>XXXX</em>::2 \
    2001:6f8:900:<em>XXXX</em>::1 prefixlen 128 alias
route add -inet6 default 2001:6f8:900:<em>XXXX</em>::1 -mtu 1280
</pre>

<h4>Numbered tunnels with subnet</h4>
<p>SixXS wants you to do this. As for the tunnel configuration, see
 above - for the subnet configuration, see below. You must not add
 the <tt>pf.conf(5)</tt> entry below.</p>

<h4>Unnumbered tunnels with subnet</h4>
<p>You will need a line like the following in your <tt>pf.conf(5)</tt>
 unless you're fine with SixXS thinking you've got 100% packet loss
 (and eventually shutting down your tunnel):</p><pre>
rdr on gif0 inet6 from any to 2001:6f8:900:<em>XXXX</em>::2  -> 2001:6f8:<em>YYYY</em>:1::1
</pre><p>The first of these addresses is your assigned <em>tunnel</em>
 space, whereas the second address is the one the router got assigned
 on one of the local networks. (The interface must be always up and
 working.)<br />Please note that you <strong>should not use the very
 first subnet</strong>, i.e. <tt>2001:6f8:YYYY:0::/64</tt>, nor the
 last (replace 0 by FFFF), on IPv6 - you've got 65534 other subnets
 for physical lines to use.</p>
<p>You will also need to set up your router for each of the physical
 interfaces on which a subnet is delegated to:</p>
<pre># /etc/hostname.fxp0
inet 192.168.0.1 0xFFFFFF00 192.168.0.255
inet6 2001:6f8:YYYY:1::1 64
inet6 2001:6f8:YYYY:1:: 64 anycast
</pre><p>This is just an example - it could look differently. As per
 RFC, a <strong>subnet router must listen on the anycast address which
 has the network address it routes on, and the host part set all zero</strong>,
 which is the last line in the above example.</p>
<pre># /etc/rtadvd.conf
fxp0:\
        :mtu#1280:addr="2001:6f8:YYYY:1::":prefixlen#64:
</pre><p>I'm still waiting for SixXS to reply to me, telling what their
 maximum supported MTU is - until then, I'm using the minimum supported,
 which would be 1280 (IPv6 does not work on lower MTUs).<br />You have
 to start <tt>rtadvd(8)</tt> via <tt>/etc/rc.conf.local</tt> and enable
 the IPv6 routing in <tt>/etc/sysctl.conf</tt> - but then, you're a
 professional MirOS admin, aren't you?</p>

<h3>Firewalling considerations</h3>
<p>At the very least, you must pass &quot;inet proto 41&quot; on the
 outgoing interface (basically tun0 or ppp0) and inet6 traffic,
 including icmp6 (for SixXS' ping requests), on the gif0 interface.
 If something does not work, there are two dings to do at once:</p><ol>
<li>Sync the clock: rdate -ncv[a] ptbtime2.ptb.de</li>
<li>Shut off the firewall: pfctl -d</li></ol>

<h3>Conclusions</h3>
<p>djbdns is IPv6 capable, you need the no_ipv4 flavour installed
 parallely to the default one if you need IPv6 transport support
 (as opposed to IPv6 RR support, i.e. IN AAAA). Our resolver seems
 to not be IPv6-transport capable, or at least I haven't got an
 entry like <tt>nameserver ::1</tt> in <tt>resolv.conf(5)</tt> to
 work. Bind9 looks like it could support IPv6, too.</p>
<p>Lynx and Apache are both IPv6 capable, so just adding<br />
 <tt>::1     localhost6</tt><br />to <tt>/etc/hosts</tt> and
 typing <tt>$ lynx localhost6</tt> should work if you started
 Apache. You can, after enabling the tunnel, test from outside
 and to outside (herc.v6.66h.42h.de for example), too. The SixXS
 site also displays which transport you are using.</p>
<p>We still can't support IPv4-mapped addresses (that is, listening
 to [::] (the IN6ADDR_ANY) does not get the d&aelig;mon IPv4
 connections. Jun-ichiro itojun Hagino of OpenBSD thinks this is
 a great idea, but we do not - so if someone is skilled enough to
 patch that behaviour back into the MirOS BSD kernel, you're welcome.</p>
<p>IRC via IPv6 is cool. Just don't spam with your reverse DNS.</p>

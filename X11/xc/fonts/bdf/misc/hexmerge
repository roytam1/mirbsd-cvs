#!/bin/mksh
# $MirOS$
#-
# Merge GNU Unifont on top of fixed-misc

nl=$'\n'

function merge_hw {
	typeset -Uui16 -Z5 q

	q=0x${code: j*2:2}
	(( odd |= (q & 1) ))
	cs+=${q#16#}00$nl
}

function merge_fw {
	typeset -Uui16 -Z9 q

	q=0x${code: j*4:4}
	(( odd |= (q & 1) ))
	(( q <<= 7 ))
	cs+=${q#16#}$nl
}

exec >hexmerge.log

for sz in hw fw; do
case $sz {
(hw)
	fm=9x18.bdf
	gu=unifont.h08
	of=9x18m.bdf
	l=$'SWIDTH 540 0\nDWIDTH 9 0\nBBX 9 18 0 -4\n'
	nulls=0000
	print Doing halfwidth.
	;;
(fw)
	fm=18x18ko.bdf
	gu=unifont.h16
	of=18x18m.bdf
	l=$'SWIDTH 1080 0\nDWIDTH 18 0\nBBX 18 18 0 -3\n'
	nulls=000000
	print Doing fullwidth.
	;;
}

set -A glyphs

typeset -i10 ce
typeset -Uui16 -Z7 cx
while IFS=: read i code comment; do
	(( cx = ce = 0x$i ))
	cs="STARTCHAR uni${cx#16#}${nl}ENCODING $ce$nl${l}BITMAP$nl$nulls$nl"
	odd=0
	j=-1
	while (( ++j < 16 )); do
		eval merge_$sz
	done
	glyphs[ce]=$cs$nulls${nl}ENDCHAR
	(( odd )) && print Odd $i:$code
done <$gu

exec <$fm >$of

while IFS= read -r line; do
	[[ $line = 'CHARS '* ]] && break
	print -r -- "$line"
done

while IFS= read -r line; do
	[[ $line = ENDFONT ]] && break
	read code i
	if [[ $code != ENCODING || $i != +([0-9]) ]]; then
		print -ru2 "Syntax error $fm: $code $i"
		exit 1
	fi
	code="$line$nl$code $i"
	while IFS= read -r line; do
		code+=$nl$line
		[[ $line = ENDCHAR ]] && break
	done
	glyphs[i]=$code
done

print CHARS ${#glyphs[*]}

for ce in ${!glyphs[*]}; do
	print -r -- "${glyphs[ce]}"
done

print ENDFONT

exec >>hexmerge.log
done
print Done.
sed -n '/^Odd /s///p' hexmerge.log | ../../bin/hexdraw >hexmerge.odd
exit 0

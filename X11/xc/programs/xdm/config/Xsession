#!/bin/mksh
# $MirSecuCron$
# $MirOS: X11/xc/programs/xdm/config/Xsession,v 1.15 2013/10/30 21:52:00 tg Exp $
#
# $Xorg: Xsession,v 1.4 2000/08/17 19:54:17 cpqbld Exp $
#
#
#
#
# $XFree86: xc/programs/xdm/config/Xsession,v 1.3 2001/01/17 23:45:24 dawes Exp $

# redirect errors to a file in user's home directory if we can
for errfile in "$HOME/.xsession-errors" "${TMPDIR-/tmp}/xses-$USER" "/tmp/xses-$USER"
do
	case "$errfile" in
	/tmp/* | /var/tmp/*)
		errfile=$(mktemp ${errfile}.XXXXXXXXXX) || break;
		;;
	esac
	if ( cp /dev/null "$errfile" 2> /dev/null )
	then
		chmod 600 "$errfile"
		exec > "$errfile" 2>&1
		break
	fi
done

# make this a "login shell"
for profile in /etc/profile $HOME/.profile; do
	test -r "$profile" && . "$profile"
done

# if we have private ssh key(s), start ssh-agent and add the key(s)
test -f $HOME/.etc/ssh/id_rsa && if test -x /usr/bin/ssh-agent; then
	eval $(/usr/bin/ssh-agent -s)
	ssh-add $HOME/.etc/ssh/id_rsa </dev/null
fi

do_exit() {
	if [ -n "$SSH_AGENT_PID" ]; then
		ssh-add -D </dev/null
		eval $(ssh-agent -s -k)
	fi
	exit
}

case $# in
1)
	case $1 in
	failsafe)
		xterm -geometry 80x24-0-0
		do_exit
		;;
	esac
esac

#  The startup script is not intended to have arguments.

startup=$HOME/.xsession

if [ -s "$startup" ]; then
	if [ -x "$startup" ]; then
		"$startup"
	else
		/bin/mksh "$startup"
	fi
else
	userresources=$HOME/.Xresources
	usermodmap=$HOME/.Xmodmap
	sysresources=/etc/X11/xdm/Xresources
	sysmodmap=/etc/X11/xdm/Xmodmap

	if [ -f $sysresources ]; then
		xrdb $sysresources
	fi

	if [ -f $sysmodmap ]; then
		xmodmap $sysmodmap
	fi

	if [ -f $userresources ]; then
		xrdb $userresources
	fi

	if [ -f $usermodmap ]; then
		xmodmap $usermodmap
	fi

	xclock -render -update 1 -geometry 50x50-1+1 &
	#xconsole -iconic &
	#xterm -geometry 80x24+0+0 &
	(
		# standard window manager
		whence -p twm >/dev/null && exec twm
		# shouldn't be the default
		whence -p evilwm >/dev/null && exec evilwm
		# last resort
		exec xterm
	)
fi
do_exit

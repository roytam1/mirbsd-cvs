# $MirOS: src/etc/profile,v 1.1.7.1 2005/03/06 16:33:39 tg Exp $

[ -s "${HOME}/.profile.preinit" ] && . ${HOME}/.profile.preinit

[ -n "$BASH_VERSION" ] && alias print='echo -e'
umask 022
[ -z "$TERM" ] && if test -x /usr/bin/tset; then
	MIROS=$(ulimit -c 0; /usr/bin/tset -sQ \?vt220)
	if [ -z "$MIROS" ]; then
		export TERM=vt100
	else
		eval $MIROS
	fi
else
	export TERM=vt220
fi
case "${TERM}:${COLORTERM}" in
interix:*|screen:*|wsvt*|xterm*)
	export COLORTERM=1
	;;
*:NO|vt*)
	unset COLORTERM
	;;
esac

if [ -x /usr/bin/id ]; then
	USER_ID="$(ulimit -c 0; /usr/bin/id -u 2>/dev/null)"
	[ -z "$USER_ID" ] && USER_ID=0
else
	USER_ID=0
fi
[ -z "$HOME" ] && HOME=/root
export USER_ID HOME
if [ -z "$USER" ]; then
	export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/root/.etc/bin:/usr/local/bin
	unset COLORTERM
elif [ $USER_ID -eq 0 ]; then
	export PATH=/root/.etc/bin:/usr/sbin:/sbin:/usr/bin:/bin:/usr/X11R6/bin:/usr/local/bin:/usr/games
else
	export PATH=~/.etc/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/X11R6/bin:/usr/local/bin:/usr/games
fi
export PS1='SINGLE:${PWD} # '
export CVSUMASK=002 BROWSER=/usr/bin/lynx
export IRCSERVER=irc6.oftc.net
export IRCNAME="MirOS packages a kernel, userland and the attitude"
HOSTNAME="$(ulimit -c 0; hostname -s 2>/dev/null)"
OSNAME="$(ulimit -c 0; uname -s 2>/dev/null)"
export HOSTNAME="${HOSTNAME:-noFQDN}" OSNAME="${OSNAME:-unknown}"
EDITOR="$(whence -p jupp 2>/dev/null)" || \
    EDITOR="$(whence -p jstar 2>/dev/null)" || \
    EDITOR=/usr/local/bin/jupp
[ -x "$EDITOR" ] || EDITOR=ed; export EDITOR
MIROS=
[ "$OSTYPE" = "linux-gnu" -o "$OSTYPE" = "Linux" ] && MIROS="-linux"
if [ -n "$KSH_VERSION" ]; then
	set +o sh +o vi +o posix
	[[ ${COLUMNS:-1} -le 1 ]] && export COLUMNS=80
	[ -n "$USER" ] && \
	    PS1='${USER}@'"${HOSTNAME}"':$(local _PWD_TEMP="$PWD";
	    local _PWD_TEMP2=
	    while (( (${#_PWD_TEMP2} + ${#_PWD_TEMP}) > (COLUMNS / 3))); do
		if [[ $_PWD_TEMP = *@(/)* ]]; then
			_PWD_TEMP2=".../"
			_PWD_TEMP="${_PWD_TEMP#*/}";
		else
			_PWD_TEMP2="..."
			_PWD_TEMP="${_PWD_TEMP#?????}";
		fi; done;
	    print "${_PWD_TEMP2}${_PWD_TEMP}")'"$(if [ $USER_ID -eq 0 ]; then
	    print ' # '; else print ' $ '; fi)"
	alias ls='/bin/ls -F'
	export PS1 MIROS=ksh$MIROS
elif [ -n "$BASH_VERSION" ]; then
	[ x"$TERM" = x"screen" ] && \
		export X_COLOUR="${X_COLOUR}"'[5;34;40m\]screen:\[[0m'
	if [ "$OSTYPE" = "linux-gnu" -o "$OSTYPE" = "Linux" ]; then
		PS1='\['"${X_COLOUR}"'[1;31m\]Linux!\[[0m\]\u@\h:\w \$ '
		alias ls='/bin/ls -F --color'
	else
		PS1='\['"${X_COLOUR}"'[34m\]bash!\[[0m\]\u@\h:\w \$ '
		alias ls='/bin/ls -F'
	fi
	[ -n "$NOCOLOURPROMPT" ] && PS1=${MIROS}':\u@\h:\w \$ '
	export PS1 MIROS=bash$MIROS
else
	export MIROS=ash$MIROS
fi
alias la='ls -a'
[ $USER_ID -eq 0 ] && alias l=la || alias l=ls
alias ll='l -l'
alias lo='ll -o'
alias cls='print -n \\033c'
function bye		# cu ;-)
{
	[ "$1" = k ] && ssh-agent -k
	M='\033c'
	[ $? -ne 0 ] && M='\033c Warning: ssh-agent returned error!\n'
	print -n -- "$M"
	exit
	logout
}
function ggs		# Google Search
{
	${BROWSER:-lynx} "http://www.google.com/search?hl=la&num=100&safe=off&q=$*"
}
function ggr		# Google GRoups
{
	${BROWSER:-lynx} "http://groups.google.com/groups?hl=la&num=100&safe=off&as_umsgid=$*"
}
function ge		# German English
{
	${BROWSER:-lynx} "http://dict.leo.org/?search=$*"
}
function ulynx		# uxterm lynx (UTF-8)
{
	lynx -display_charset utf8 "$@"
}
function klynx		# kterm lynx (EUC-JP)
{
	( sleep 1; cls; print -n 'Press Ctrl-L!' ) 2>/dev/null &
	lynx -display_charset euc-jp "$@"
}
function loadimage	# call xloadimage by URI
{
	for fi in "$@"; do
		if [ -e "$fi" ]; then
			xloadimage "$fi"
		else
			ftp -mo - "$fi" | xloadimage stdin
		fi
	done
}
function Lstripcom	# strip comments from file
{
	local _line

	set -o noglob
	cat "$@" | while read _line; do
		_line=${_line%%#*}
		[[ -n $_line ]] && print -r -- $_line
	done
	set +o noglob
}
function Lretrocfg	# retrieve kernel config file
{
	strings -n4 ${1:-/bsd} | sed -n 's/^=CF=//p'
}
[ -x /emul/linux/bin/bash ] && alias lx='/emul/linux/bin/bash --login'
unset HISTFILE
set -o emacs
set +o emacs-usemeta 2>/dev/null
USER_NAME=_nonexistent
[ -x /usr/bin/id ] && USER_NAME=$(id -un 2>/dev/null)
if [ -O /tmp/.ssh-agent/$USER_NAME ]; then
	# If the agent is not running, remove stale files
	[ ! -e /tmp/.ssh-agent/$USER_NAME/socket ] \
	    && rm -f /tmp/.ssh-agent/$USER_NAME/{agent,keyread}
	# Start ssh-agent if it is not already started
	if [ ! -e /tmp/.ssh-agent/$USER_NAME/agent ]; then
		ssh-agent -s -a /tmp/.ssh-agent/$USER_NAME/socket \
		    >/tmp/.ssh-agent/$USER_NAME/agent
	fi
	# Do the following only if ssh-agent is running
	if [ -e /tmp/.ssh-agent/$USER_NAME/socket ]; then
		# Read configuration file if it exists
		[ -e /tmp/.ssh-agent/$USER_NAME/agent ] \
		    && . /tmp/.ssh-agent/$USER_NAME/agent >&2
		# Read in the keys, if not already done
		if [ ! -e /tmp/.ssh-agent/$USER_NAME/keyread ]; then
			ssh-add
			touch /tmp/.ssh-agent/$USER_NAME/keyread
		fi
	fi
fi
unset USER_NAME NOSETPATH

[ -f /etc/profile.local ] && . /etc/profile.local
[ -f ~/.profile.local ] && . ~/.profile.local

# $MirOS: src/etc/profile,v 1.29 2006/08/07 17:20:31 tg Exp $
#-
umask 022
[ -z "$KSH_VERSION" ] && alias print='echo -e'
[ -s "$HOME/.profile.preinit" ] && . $HOME/.profile.preinit

[ -z "$TERM" -o x"$TERM" = x"unknown" ] && if [ -x /usr/bin/tset ]; then
	x=$(ulimit -c 0; /usr/bin/tset -sQ \?vt220)
	TERM=vt100
	eval $x
else
	TERM=vt220
fi
case "${TERM}:$COLORTERM" in
*:NO|ansi-nt*|vt*|xterm-r6:*)
	unset COLORTERM
	;;
interix:*|screen:*|wsvt*|xterm*)
	COLORTERM=1; export COLORTERM
	;;
esac

[ -z "$HOME" ] && HOME=/root
PS1='$PWD $ '
PSX='# '
USER_ID=
[ -x /usr/bin/id ] && USER_ID=$(ulimit -c 0; /usr/bin/id -u 2>/dev/null)
[ -z "$USER_ID" ] && USER_ID=0
if [ -z "$USER" ]; then
	PATH=/sbin:/bin:/usr/sbin:/usr/bin:/root/.etc/bin:/usr/local/bin:/usr/mpkg/bin
	PS1='SINGLE:$PWD # '
	unset COLORTERM
elif [ $USER_ID -eq 0 ]; then
	PATH=/root/.etc/bin:/usr/sbin:/sbin:/usr/bin:/bin:/usr/X11R6/bin:/usr/local/bin:/usr/mpkg/bin
else
	PATH=~/.etc/bin:/usr/local/bin:/usr/mpkg/bin:/usr/bin:/bin:/usr/X11R6/bin:/usr/sbin:/sbin:/usr/mpkg/sbin:/usr/games
	PSX='$ '
fi
export PATH
BROWSER=/usr/bin/lynx
CVSUMASK=002
EDITOR=/bin/ed
unset HISTFILE
HOSTNAME=$(ulimit -c 0; hostname -s 2>/dev/null)
IRCNAME="MirOS packages a kernel, userland and the attitude"
IRCSERVER=irc4.mirbsd.org	# irc.mirbsd.org supports IPv4 and IPv6 though
IRCPORT=6666			# irc*.mirbsd.org support SSL on port 6668 too
OSNAME=$(ulimit -c 0; uname -s 2>/dev/null)
OSNAME=${OSNAME:-unknown}
PAGER=/usr/bin/less
PS1=$PSX
if [ -n "$KSH_VERSION" ]; then
	PS1='$(((rv=$?)) && print $rv\|)${USER:=$(id -un)}@${HOSTNAME:=nil}:$(
		local pfx=~ wd=${PWD:-$(pwd)}
		[[ ${wd#$pfx} = $wd || $pfx = ?(/) ]] || wd=\~${wd#$pfx}
		pfx=; let n="( (n = ${COLUMNS:-80} / 3) < 7 ? 7 : n)"
		while (( (${#pfx} + ${#wd}) > n )); do
			if [[ $wd = */* ]]; then
				pfx=.../
				wd="${wd#*/}"
			else
				pfx=...
				wd="${wd#?????}"
			fi
		done
		print -r -- "$pfx$wd")'" $PSX"
	_shellok=1
elif [ -n "$BASH_VERSION" ]; then
	set -o emacs
	shopt -s extglob
	[[ $TERM = screen ]] && \
		X_COLOUR=$X_COLOUR'[1;36;40m\]screen:\['
	if [[ $OSTYPE = linux-gnu || $OSTYPE = Linux ]]; then
		# compat_linux(8)
		PS1='\['$X_COLOUR'[31m\]Linux!\[[0m\]\u@\h:\w \$ '
		alias ls='/bin/ls --color'
	else
		# native via ports
		PS1='\['$X_COLOUR'[34m\]bash!\[[0m\]\u@\h:\w \$ '
	fi
	[[ -n $NOCOLOURPROMPT || -z $COLORTERM ]] && PS1='bash:\u@\h:\w \$ '
	_shellok=1
fi
export BROWSER CVSUMASK EDITOR HOME HOSTNAME IRCNAME IRCPORT IRCSERVER
export OSNAME PAGER PS1 TERM USER USER_ID
unset NOCOLOURPROMPT PSX x
alias cls='print -n \\033c'
alias la='ls -Fa'
test $USER_ID -eq 0 && alias l=la || alias l='ls -F'
alias ll='l -l'
alias lo='la -lo'
test x"$_shellok" = x"1" || return
unset _shellok
[[ -x /emul/linux/bin/bash ]] && alias lx='/emul/linux/bin/bash --login'
function bye
{
	[[ $1 = k ]] && ssh-agent -k
	local M='\033c'
	[ $? -ne 0 ] && M='\033c Warning: ssh-agent returned error!\n'
	print -n -- "$M"
	exit
	logout
}
function ge		# German English
{
	${BROWSER:-lynx} "http://dict.leo.org/?search=$*"
}
function ulynx		# uxterm lynx (UTF-8)
{
	lynx -display_charset utf8 "$@"
}
function klynx		# kterm lynx (EUC-JP)
{
	( sleep 1; cls; print -n 'Press Ctrl-L!' ) 2>/dev/null &
	lynx -display_charset euc-jp "$@"
}
function Lstripcom	# strip comments (and whitespace) from file/stdin
{
	local _line
	set -o noglob
	cat "$@" |&
	while read -p _line; do
		_line=${_line%%#*}
		[[ -n $_line ]] && print -r -- $_line
	done
	set +o noglob
}

if [ -O /tmp/ssh-agent/$USER_ID ]; then
	# If the agent is not running, remove stale files
	[[ ! -e /tmp/ssh-agent/$USER_ID/socket ]] \
	    && rm -f /tmp/ssh-agent/$USER_ID/{agent,keyread} \
	    ~/.etc/ssh/.{ctl,pid}.*
	# Start ssh-agent if it is not already started
	if [[ ! -e /tmp/ssh-agent/$USER_ID/agent ]]; then
		ssh-agent -s -a /tmp/ssh-agent/$USER_ID/socket \
		    >/tmp/ssh-agent/$USER_ID/agent
	fi
	# Do the following only if ssh-agent is running
	if [[ -e /tmp/ssh-agent/$USER_ID/socket ]]; then
		# Read configuration file if it exists
		[[ -e /tmp/ssh-agent/$USER_ID/agent ]] \
		    && . /tmp/ssh-agent/$USER_ID/agent >&2
		# Read in the keys, if not already done
		if [[ ! -e /tmp/ssh-agent/$USER_ID/keyread ]]; then
			ssh-add
			touch /tmp/ssh-agent/$USER_ID/keyread
		fi
	fi
fi

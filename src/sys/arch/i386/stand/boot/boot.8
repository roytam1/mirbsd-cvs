.\"	$MirOS: src/sys/arch/i386/stand/boot/boot.8,v 1.11 2009/01/02 02:44:26 tg Exp $
.\"	$OpenBSD: boot.8,v 1.47 2007/05/31 19:20:03 jmc Exp $
.\"
.\" Copyright (c) 1997-2001 Michael Shalayeff
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
.\" THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\"
.Dd $Mdocdate: January 2 2009 $
.Dt BOOT 8 i386
.Os
.Sh NAME
.Nm boot ,
.Nm boot.cfg
.Nd
i386-specific second-stage bootstrap
.Sh DESCRIPTION
The main purpose of this program is to load the system kernel while dealing
with the downfalls of the PC BIOS architecture, as well as with problems
arising during an El Torito boot from a CD-ROM drive on broken hardware.
.Pp
By renaming it to
.Pa boot.com
and placing on a FAT filesystem, it can be called directly from the DOS
operating system (if running without a virtual memory manager such as
EMM386.SYS or Windows\(rg 386, 3.x, 9x) or from SYSLINUX (and ISOLINUX,
PXELINUX, EXTLINUX) as a module.
This provides a convenient way to load the kernel.
.Pp
As described in
.Xr boot_i386 8 ,
this program is loaded by the
.Xr bootxx 8
primary bootstrap loader if loaded from a floppy or hard disc drive.
If being loaded from CD, that action is taken directly by the BIOS.
This programme acts as an enhanced boot monitor for PC systems, providing
a common interface for the kernel to start from.
.Pp
To boot from an ISO 9660 filesystem via El Torito, set the mode to
.Dq 0 - No Emulation
and use the
.Fl B Ar 11
option to
.Pa bootxx.sh
to install the primary bootloader into the boot image sector, whose
size must be exactly 2048 bytes; use
.Xr getextent_cd9660 1
to determine where to binary-patch the filesystem image.
The load address is \fB0x07C0:0x0000\fR.
.Pp
Basic operations include:
.Pp
.Bl -bullet -compact
.It
Detecting and switching between multiple consoles.
.It
Loading kernels from any device supported by your system BIOS,
including bootable CD-ROM drives if the
.Nm
programme itself acts as a boot image.
.It
Loading kernels compressed by
.Xr gzip 1 .
.It
Passing system parameters queried from the BIOS to the kernel.
.It
Providing an interactive command line.
.El
.Pp
The sequence of its operation is as follows: initialization,
parsing the configuration file, then an interactive command line.
While at the command line you have 5 seconds to type any commands, if needed.
If time expires, the kernel will be loaded according to
the current variable settings (see the
.Nm set
command).
Each time a kernel load fails, the timeout is increased by one second.
The sequence of
.Nm
operations is as follows:
.Bl -enum
.It
Set up a protected mode environment which catches and reports processor
exceptions and provides a simple protected-mode BIOS interface.
.It
Probe for console devices, which includes the (default) PC VGA+Keyboard
console
.Pq Li pc0
and up to four serial consoles
.Pf ( Li com0
through
.Li com3 )
connected to the serial ports.
Display messages to the default console about the devices found.
.It
Detect memory.
Conventional memory is detected by querying the BIOS.
Extended memory is detected by probing page-by-page through the address
space, rather than asking the BIOS; many BIOS's cannot report larger than
64M of memory.
All memory found is reported to the default console device.
.It
Probe for APM support in the BIOS.
Display a message if support is present.
.It
If the file
.Pa /boot.cfg
exists on the filesystem
.Nm
was loaded from, open and parse it.
This file may contain any commands
.Nm
accepts at the interactive prompt.
Though default settings usually suffice, they can be changed here.
.Pp
.Pa boot.cfg
processing can be skipped by holding down either Control key as
.Nm
starts.
.It
The header line
.Pp
.Dl >> MirBSD boot mmnn
.Dl booting from device 80h = hd0a
.Pp
is displayed to the active console, where
.Ar x.xx
is the version number of the
.Nm
program and
.Ar 80h
is the BIOS idea of the drive
.Nm
was booted from, followed by the
.Pp
.Dl boot>
.Pp
prompt, which means you are in interactive mode and may enter commands.
There may be machine-specific output in between the greeting
message and the boot prompt.
If you do not,
.Nm
will proceed to load the kernel with the current parameters after the
timeout period has expired.
.El
.Pp
By default,
.Nm
attempts to load the kernel executable
.Pa /bsd .
If it fails to find the kernel and no alternative kernel image has
been specified, the system will be unable to boot.
.Sh COMMANDS
The following commands are accepted at the
.Nm
prompt:
.Bl -tag -width shorten
.It boot Op Ar image Op Fl acds
Boots the kernel image specified by
.Ar image
with any options given.
Image specification consists of a pair
.Ar device : Ns Ar filename ;
either or both can be omitted (`:' is not needed if both are omitted),
in which case values from
.Nm
variables will be used.
.Pp
When selecting the
.Ar device
to boot from,
.Nm
makes no distinction between SCSI and IDE type drives;
they are detected as
.Sq hd
devices.
Therefore, to boot kernel
.Pa /bsd
from slice
.Sq a
on the first hard drive
.Pq irrespective of device type ,
specify
.Dq boot hd0a:/bsd .
.Bl -tag -width _a_
.It Fl a
Causes the kernel to ask for the
.Nm root
device to use.
.It Fl c
Causes the kernel to go into
.Xr boot_config 8
before performing
.Xr autoconf 4
procedures.
.It Fl d
Causes the kernel to drop into
.Xr ddb 4
at the earliest convenient point.
.It Fl s
Causes the kernel to boot single-user.
.El
.It cat Ar file
Displays the file argument loaded from the currently active
filesystem or the one given, if any.
.It echo Op Ar args
Displays
.Ar args
on the console device.
.It help
Prints a list of available commands and machine dependent
commands, if any.
.It machine Op Ar command
Issues machine-dependent commands.
These are defined for i386 architecture:
.Bl -tag -width diskinfo
.It Nm diskinfo
Prints a list of hard disks installed on your system including:
BIOS device number, and the BIOS geometry.
.It Nm exec
Load a bootsector or supported other bootloader and execute it.
Note: MS-DOS\(rg 7.10 bootsectors currently do not work, somehow
the machine state deviates from the initial one in an incompatible way.
.Pp
Possible types are, at the moment:
.Bl -tag -width sector
.It Cm grub
GNU GRUB 0.9x
.Pa stage2
file
.br
GNU GRUB2
.Pa core.img
file
.Pp
Note: the El Torito cases seem to be exactly the same except for
the part of the loader we skip because we read in the entire file
anyway, so these variants work as well.
.It Cm sector
Boot sector or image, loaded to 0000:7C00h
.El
.It Nm label
Displays the disklabel read from the disc or faked for the
currently active device, or the device given.
.It Nm memory
If used without any arguments, this command will print out
the memory configuration as determined through BIOS routines.
Otherwise the arguments specify how to modify the
memory configuration.
They take the form of:
.Pp
.Dl [+-]<size>@<address>
.Pp
Meaning to add(+) or exempt(-) the amount of memory specified by
.Ar <size>
at the location specified by
.Ar <address> .
Both size and base address can be specified as octal,
decimal, or hexadecimal numbers, as accepted by the
.Xr strtoul 3
routine.
.Pp
Memory segments are not required to be adjacent to each other;
the only requirement is that there is real physical memory under
the range added.
The following example
adds 32M of memory right after the first 16M:
.Bd -unfilled -offset indent
machine mem +0x2000000@0x1000000
.Ed
.Pp
Another useful command is to withdraw a range
of memory from OS usage (it may have been wrongfully reported as
useful by the BIOS).
This example
effectively excludes the 15\(en16M range from the map of useful memory:
.Bd -unfilled -offset indent
machine mem -0x100000@0xf00000
.Ed
.It Nm oldbios
Turns on the so-called
.Dq Old BIOS / Soekris helper ,
which restricts
.Nm
from requesting more than one sector a time.
.It Nm regs
Prints contents of processor registers if compiled with
.Em DEBUG .
.El
.It ls Op Ar directory
Prints contents of the specified
.Ar directory
in long format including: attributes and file type, owner, group,
size, filename.
.It reboot
Reboots the machine by initiating a warm boot procedure.
.It set Op Ar varname Op Ar value
If invoked without arguments, prints a list of variables and their values.
If only
.Ar varname
is specified, displays contents of that variable.
If
.Ar varname
and
.Ar value
are both specified, sets that variable to the given value.
Variables include:
.Pp
.Bl -tag -compact -width boothow
.It Nm addr
Address at which to load the kernel.
.It Nm debug
Debug flag if
.Nm
was compiled with DEBUG defined.
.It Nm device
Boot device name (e.g.,
.Li fd0a ,
.Li hd0a ) .
.It Nm howto
Options to pass to the loaded kernel.
.It Nm image
File name containing the kernel image.
.It Nm timeout
Number of seconds boot will wait for human intervention before
booting the default kernel image.
.It Nm tty
Active console device name (e.g.,
.Li com0 ,
.Li com1 ,
.Li pc0 ) .
.El
.It stty Op Ar device Op Ar speed
Displays or sets the
.Ar speed
for a console
.Ar device .
If changing the baudrate for the currently active console,
.Nm
offers you five seconds of grace time before committing the change
to allow you to change your terminal's speed to match.
If changing speed
.Em not
for the active console, the baudrate is set for the
.Em next
time you switch to a serial console.
The baudrate value is not used for the
.Li pc0
console.
.Pp
The default baudrate is 9600bps.
.It time
Displays system time and date.
.El
.Sh FILES
.Bl -tag -width /usr/mdec/biosbootxx -compact
.It Pa /usr/mdec/bootxx
first stage bootstrap
.It Pa /usr/mdec/pxeboot
PXE bootstrap
.It Pa /boot
system bootstrap
.It Pa /boot.cfg
system bootstrap's startup file
.It Pa /bsd
kernel image
.It Pa /bsd.rd
kernel image for installation/recovery
.El
.Sh EXAMPLES
Boot the default kernel:
.Pp
.Dl boot> boot
.Pp
Remove the 5 second pause at boot-time permanently, causing
.Nm
to load the kernel immediately without prompting:
.Pp
.Dl # echo \&"boot\&" > /boot.cfg
.Pp
Use serial console.
A null modem cable should connect the specified serial port to a terminal.
Useful for debugging.
.Pp
.Dl boot> set tty com0
.Pp
Invoke the serial console at every boot:
.Pp
.Dl # echo \&"set tty com0\&" >/boot.cfg
.Pp
You can place multiple commands in one line with the
.Sq \`
character.
Most prominent use would be on machines whose serial console
is unusable from within the boot loader, but the only way to
talk to the kernel, e.g. for installation on a WRAP:
.Pp
.Dl boot> set tty com0 \` boot /bsd.rd
.Pp
Boot the kernel named
.Pa /bsd
from the second hard disk in
.Dq User Kernel Configuration
mode (see
.Xr boot_config 8 ) .
This mechanism allows for the explicit enabling and disabling of devices
during the current boot sequence, as well as the modification
of device parameters.
Once booted, such changes can be made permanent by using
.Xr config 8 Ns 's
.Fl e
option.
.Pp
.Dl boot> boot hd1a:/bsd -c
.Pp
Attention: the ISO 9660 and FAT filesystem interfaces support only
.Dq short
(i.e. MS-DOS like 8.3) file names.
.Pp
Supported filesystems are: 4.2FFS, ISO 9660, FAT12, FAT16, FAT28.
.Pp
If a disklabel cannot be read from a device, either via an MBR
partition (BIOS discs >= 0x80 only) or as Superfloppy (BIOS hard
discs only if no MBR partition can be found), one is faked.
The device size defaults to the size of an 1440 KiB floppy disc,
but if any MBR primary partitions are found which span more space,
these values are used instead.
The
.Sq c
slice is filled appropriately.
The
.Sq d ,
.Sq e ,
.Sq f
and
.Sq g
slices are filled with the four MBR primary partitions, if any.
The
.Sq a
slice is filled, in this order, with: the partition passed to
SYSLINUX in DS:SI, the first non-empty MBR partition, the whole disc.
.Sh SEE ALSO
.Xr gzip 1 ,
.Xr autoconf 4 ,
.Xr ddb 4 ,
.\"Xr biosboot 8 ,
.Xr boot_config 8 ,
.Xr boot_i386 8 ,
.Xr fdisk 8 ,
.Xr installboot 8 ,
.Xr pxeboot 8 ,
.Xr reboot 8
.Pp
RFC 1950 describes the zlib library interface.
.Pp
The official home page for the version of zlib used in this
operating system is at http://www.gzip.org/zlib/.
.Sh HISTORY
This program was written by Michael Shalayeff for
.Ox 2.1 .
The
.Nm cdboot
version appeared in
.Mx 8 .
Up to, and including,
.Ox
(all versions) and
.Mx 7 ,
the
.Nm boot.cfg
file was called
.Nm boot.conf
instead.
The change for
.Mx 8
was done to accommodate CD-ROM and MS-DOS based booting.
Starting with
.Mx 11 ,
FAT filesystems are supported, disklabels faked if none exist,
and SYSLINUX support appeared.

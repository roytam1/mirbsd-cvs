.\"	$MirOS: src/usr.bin/script/script.1,v 1.2 2007/02/13 16:48:20 tg Exp $
.\"	$OpenBSD: script.1,v 1.12 2005/06/16 12:22:46 jmc Exp $
.\"	$NetBSD: script.1,v 1.3 1994/12/21 08:55:41 jtc Exp $
.\"
.\" Copyright (c) 1980, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)script.1	8.1 (Berkeley) 6/6/93
.\"
.Dd February 13, 2007
.Dt SCRIPT 1
.Os
.Sh NAME
.Nm script
.Nd make typescript of terminal session
.Sh SYNOPSIS
.Nm script
.Op Fl al
.Op Fl L Ar replstr
.Op Fl n | Ar file
.Sh DESCRIPTION
.Nm
opens a pseudo-tty master and starts an interactive shell
which is connected to the slave tty.
If the
.Fl n
option is not given, it
makes a typescript of everything printed on your terminal.
It is useful for students who need a hardcopy record of an interactive
session as proof of an assignment, as the typescript file
can be printed out later with
.Xr lpr 1 .
It is also useful for people who log in to a
.Mx
box with a terminal that is not UTF-8 capable.
.Pp
If the argument
.Ar file
is given,
.Nm
saves all dialogue in
.Ar file .
If no file name is given, the typescript is saved in the file
.Pa typescript .
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl a
Append the output to
.Ar file
or
.Pa typescript ,
retaining the prior contents.
.It Fl L Ar replstr
Assume the terminal uses ISO-8859-1
.Pq Do latin1 Dc
encoding, and convert from and to UTF-8 for the pty.
Inconvertible characters are displayed as
.Ar replstr ,
one per column.
.It Fl l
Assume the terminal uses ISO-8859-1
.Pq Do latin1 Dc
encoding, and convert from and to UTF-8 for the pty.
Inconvertible characters are displayed as one question mark per column.
.It Fl n
Do not record a typescript.
.El
.Pp
The script ends when the forked shell exits (a control-D
.Pq Ql ^D
to exit
the Bourne shell
.Pf ( Xr sh 1 ) ,
and
.Ic exit ,
.Ic logout ,
or control-D
(if
.Va ignoreeof
is not set) for the
C-shell,
.Xr csh 1 ) .
.Nm
will exit with the status of 0 unless any of its child
processes fail.
In which case,
.Nm
will return 1.
.Pp
Certain interactive commands, such as
.Xr vi 1 ,
create garbage in the typescript file.
.Nm
works best with commands that do not manipulate the
screen; the results are meant to emulate a hardcopy terminal.
.Sh ENVIRONMENT
.Bl -tag -width SHELL
.It Ev SHELL
Name of the shell to be forked by
.Nm script .
If not set, the Bourne shell is assumed.
(Most shells set this variable automatically.)
.El
.Sh EXAMPLES
.Li $ script
.Pp
Records a typescript of an interactive session.
.Pp
.Li $ script -ln
.Pp
Runs a UTF-8 session inside an ISO-8859-1 hardware terminal.
.Pa /usr/ports/misc/screen
can do even more, but is not part of
.Mx .
.Pp
.Li $ luit -encoding 'ISO 8859-1' -- ssh remote
.Pp
Run inside the UTF-8 session, connects to a remote system
which uses ISO-8859-1 encoding and ISO 2022 shift sequences.
.Sh SEE ALSO
.Xr luit 1 ,
.Xr screen 1
.Sh HISTORY
The
.Nm
command appeared in
.Bx 3.0 .
Support for recoding between latin1 and utf-8 appeared in
.Mx 10 .
.Sh BUGS
.Nm
places
.Em everything
in the log file, including linefeeds and backspaces.
This is not what the naive user expects.
.Pp
While double-width characters are presented as two times the
.Ar replstr ,
combining characters are hidden.
.Xr xterm 1
does some sort of precomposing and then displays them together
as single character, or, as replacement if it stands \- cf.\&
.Pa /usr/src/contrib/samples/utf-8
\&\- alone.
.Nm
just doesn't display them at all.
GNU screen has a different, also slightly broken, logic and
has even worse width behaviour in that file, but replaces
unicode line-drawing characters with their ACS equivalents.

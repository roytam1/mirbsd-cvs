#!/bin/mksh
# $MirOS: src/scripts/editdiff,v 1.5 2006/02/05 17:37:25 tg Exp $
#-
# Copyright (c) 2004, 2006
#	Thorsten Glaser <tg@mirbsd.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# Advertising materials mentioning features or use of this work must
# display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a defect.

f="$1"; shift
rev="$1"
if [[ $rev = ask ]]; then
	read rev?'Revision: '
	[[ -z $rev ]] && exit 0
	shift
elif [[ -n $rev ]]; then
	shift
fi
if [[ $rev = +(-) ]]; then
	rev=
elif [[ -n $rev && $rev != -* ]]; then
	rev=-r$rev
fi
cp=
dp=
x=cp
while [[ $# -gt 0 ]]; do
	if [[ $1 = -- ]]; then
		x=dp
	elif [[ $x = cp ]]; then
		cp="$cp $1"
	else
		dp="$dp $1"
	fi
	shift
done

T=$(mktemp /tmp/editdiff.XXXXXXXXXX) || exit 1
trap 'rm -f $T ${T}.{lock,orig} ; exit 0' 0
trap 'rm -f $T ${T}.{lock,orig} ; exit 1' 1 2 3 5 13 15

eval cvs -Rq $cp diff -pau $EXTRA_DIFF $rev $dp "$f" >$T 2>&1
touch ${T}.lock

if ! patch -Rlt -o ${T}.orig "$f" $T; then
	print continue?
	read
fi
${EDITOR:-ed} $T

if [[ $T -nt ${T}.lock ]]; then
	mv "$f" "$f".orig
	patch -l -o "$f" ${T}.orig $T
	rv=$?
	if [[ ! -f "$f" ]]; then
		cp ${T}.orig "$f"
	fi
	exit $rv
fi

print Ignoring patch.
exit 0

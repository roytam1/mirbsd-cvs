#!/bin/sh
# $MirOS$
# $ekkoBSD: catman2html.sh,v 1.2 2004/03/07 03:02:53 stephen Exp $
#-
# Copyright (c) 2004
#	Thorsten "mirabile" Glaser <tg@66h.42h.de>
# Copyright (c) 2004
#	Stephen Paskaluk <sap@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.
#-
# Based upon regular expressions by:
# Copyright (c) 1995
#	Panagiotis J. Christias <christia@theseas.ntua.gr>
#-
# Routines for converting catman pages and nrcon'd papers to HTML.
# ATTENTION: this file contains embedded white-, backspace and high-
#	     bit-on control characters! Use "jupp --asis $0" to edit
# Note: this file contains magic.


# Set up

set -A do_convert_asciiexp		# clear the array
gendate=
{
	typeset -ui16 i			# hexadecimal local var
	typeset x=0			# decimal local int var
	for i in $(jot 128 128); do	# chars not in ISO_646.irv:1991
		typeset -i8 j=i		# copy in octal
		do_convert_asciiexp[x]="-e"
		let x++
		do_convert_asciiexp[x]="s/$(printf \
		    "\\${j#8#}")/\\&#x${i#16#};/g"
		let x++
	done
}


# Subroutines

do_convert()
{
	expand								\
	| sed								\
	    -e '/-$/N
{
s/\([0-9A-z][-,0-9A-z]*\)-\n\(  *\)\([0-9A-z][-,0-9A-z]*([1-9][A-z]*)\)\([^ ]*\) /\1\3\4\
\2/
}'									\
	    -e '/-$/N
{
s/\([0-9A-z][-,0-9A-z]*\)-\n\(  *\)\([0-9A-z][-,0-9A-z]*([1-9][A-z]*)\)\([^ ]*\) /\1\3\4\
\2/
}'									\
	    -e '/-$/N
{
s/\([0-9A-z][-,0-9A-z]*\)-\n\(  *\)\([0-9A-z][-,0-9A-z]*([1-9][A-z]*)\)\([^ ]*\) /\1\3\4\
\2/
}'									\
	    -e '/-$/N
{
s/\([0-9A-z][-,0-9A-z]*\)-\n\(  *\)\([0-9A-z][-,0-9A-z]*([1-9][A-z]*)\)\([^ ]*\) /\1\3\4\
\2/
}'									\
	    -e 'y#&<>#ÅÇ#'						\
									\
	    -e '/^[A-Z]/s#.##g'					\
	    -e 's#^[A-Z][ ,A-Z]*$#</pre><h2>&</h2><pre>#'		\
									\
	    -e 's#_\(.\)#<i>\1</i>#g'					\
	    -e 's#.\(.\)#<b>\1</b>#g'					\
									\
	    -e 's#</\([bi]\)><\1>##g'					\
	    -e 's#</b><b>.##g'						\
	    -e 's#</b>.<b>##g'						\
	    -e 's#.##g'						\
	    -e 's#_</i<b><</b>i>##g'					\
									\
	    -e 's#^\( \{2,3\}\)\([A-Z][ ,0-9A-z]*\)$#\1<b>\2</b>#'	\
									\
	    -e '/^   /s#\(\([0-9A-z][-.,0-9A-z]*\)(\([1-9]\)[A-z]*)\)#<a href=\"../man\3/\2.htm\">\1</a>#g' \
	    -e '/^   /s#\(<i>\([0-9A-z][-.,0-9A-z]*\)</i>(\([1-9]\)[A-z]*)\)#<a href=\"../man\3/\2.htm\">\1</a>#g' \
									\
	    -e 's#<b>+</b>\( *\)<b>o</b># \1\&bull;#'			\
	    -e 's#<b>+</b>#\&bull;#'					\
	    -e 's#</\([bi]\)><\1>##g'					\
									\
	    -e 's##\&amp;#g'						\
	    -e 's#Å#\&lt;#g'						\
	    -e 's#Ç#\&gt;#g'						\
	    ${do_convert_asciiexp[@]}					\
									\
	    -e '1s#^#<pre>#'						\
	    -e '$s#$#</pre>#'						\
	    -e 's#<pre></pre>##g'					\
	    -e 's#</pre><pre>##g'					\
	| awk								\
	   '/^$/	{ if(!blank) { print; blank=1 } }
	    /^..*$/	{ print; blank=0 }'
}

output_header()
{
	cat <<EOF
<?xml version="1.1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
 "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"><head>
 <meta http-equiv="content-type" content="text/html; charset=us-ascii" />
 <title>RTFM ${1}(${2})</title>
 <meta name="robots" content="index, follow" />
</head><body>
<h1>MirOS Manual: <a href="../man${2}/${1}.htm"><tt>${1}(${2})</tt></a></h1>
<p style="font-size:xx-small;">Generated on ${gendate} by
 \$Id$</p>
<hr />
EOF
}

output_footer()
{
	cat <<EOF
<hr />
<p>These manual pages are copyrighted by their respective writers, the
 source of which can be found at the <a href="/cvs.cgi/src/">CVSweb</a>.
 The rest is Copyright &copy; 2002-2005 <a href="http://mirbsd.de/">The
 MirOS Project</a>.</p>
<p style="font-size:x-small;">This manual page's HTML representation
 is supposed to be <a href="http://validator.w3.org/check/referer">valid
 XHTML/1.1</a>; if not, please send a bug report - diffs preferred.</p>
</body></html>
EOF
}

do_convert_page()
{
	fn=$1				# filename
	bn=${fn##*/}			# basename
	page=${bn%.0}			# manual page name
	dn=${fn%/*}			# dirname
	as=${dn##*/cat}			# archsection
	sect=${as%%/*}			# section
	tn=$2/man${sect}/${page}.htm	# target file

	print -nr -- $fn -\> ${tn}

	output_header $page $sect >$tn
	do_convert <$fn >>$tn
	output_footer >>$tn

	print
}

# convert_page /path/to/man.cat1 /targetpath
convert_page()
{
	gendate="$(date +"%F %T")"	# current time
	do_convert_page "$@"
}

# convert_all /path/to/share/man /targetpath
convert_all()
{
	gendate="$(date +"%F %T")"	# current time
	tp=${2:-$(pwd)/mbsdman}		# target basepath

	for x in $(jot 9 1); do
		mkdir -p $tp/man$x	# one per section
	done
	find ${1:-/usr/share/man}/cat* -name \*.0 | while read f; do
		do_convert_page $f $tp	# any subpages
	done
}

#!/bin/mksh
# $MirOS: src/scripts/roff2htm,v 1.19 2005/11/15 21:10:19 tg Exp $
# $ekkoBSD: catman2html.sh,v 1.2 2004/03/07 03:02:53 stephen Exp $
#-
# Copyright (c) 2004, 2005
#	Thorsten "mirabile" Glaser <tg@66h.42h.de>
# Copyright (c) 2004
#	Stephen Paskaluk <sap@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a nontrivial bug.
#-
# Parts of the regular expression set below are based upon work by:
# Copyright (c) 1995
#	Panagiotis J. Christias <christia@theseas.ntua.gr>
#-
# Routines for converting catman pages and nrcon'd papers to HTML.
# ATTENTION: this file contains embedded white-, backspace and high-
#	     bit-on control characters! Use "jupp --asis $0" to edit
# Note: this file contains magic.


# Set up

gendate=$(date +"%F %T")		# current time
set -A do_convert_asciiexp		# clear the array
{
	typeset -ui16 i			# hexadecimal local var
	typeset x=0			# decimal local int var
	for i in $(jot 128 128); do	# chars not in ISO_646.irv:1991
		typeset -i8 j=i		# copy in octal
		do_convert_asciiexp[x++]=-e
		do_convert_asciiexp[x++]="s/$(print -n \
		    "\\0${j#8#}")/\\&#x${i#16#};/g"
	done
}


# Subroutines

do_convert()
{
	set +e
	let isblank=0
	expand								\
	| sed								\
	    -e '/-$/N
{
s/\([0-9A-z][-.,0-9A-z]*\)-\n\(  *\)\([0-9A-z][-.,0-9A-z]*([1-9][A-z]*)\)\([^ ]*\) /\1\3\4\
\2/
}'									\
	    -e '/-$/N
{
s/\([0-9A-z][-.,0-9A-z]*\)-\n\(  *\)\([0-9A-z][-.,0-9A-z]*([1-9][A-z]*)\)\([^ ]*\) /\1\3\4\
\2/
}'									\
	    -e 'y#&<>#çèê#'						\
									\
	    -e '/^[A-Z]/s#.##g'					\
	    -e 's#^[A-Z][ ,A-Z0-9]*$#</pre><h2>&</h2><pre>#'		\
	    -e 's#^  \([A-Z][ ,A-Z0-9]*\)$#</pre><h3>\1</h3><pre>#'	\
									\
	    -e 's#_\(.\)#<i>\1</i>#g'					\
	    -e 's#.\(.\)#<b>\1</b>#g'					\
									\
	    -e 's#</\([bi]\)><\1>##g'					\
	    -e 's#</b><b>.##g'						\
	    -e 's#</b>.<b>##g'						\
	    -e 's#.##g'						\
	    -e 's#_</i<b><</b>i>##g'					\
									\
	    -e 's#^\( \{2,3\}\)\([A-Z][ ,0-9A-z]*\)$#\1<b>\2</b>#'	\
									\
	    -e '/^   /s#\(\([0-9A-z][-.,0-9A-z]*\)(\([1-9]\)[A-z]*)\)#<a href=\"../man\3/\2.htm\">\1</a>#g' \
	    -e '/^   /s#\(<i>\([0-9A-z][-.,0-9A-z]*\)</i>(\([1-9]\)[A-z]*)\)#<a href=\"../man\3/\2.htm\">\1</a>#g' \
									\
	    -e 's#<b>+</b>\( *\)<b>o</b># \1\&bull;#'			\
	    -e 's#<b>+</b>#\&bull;#'					\
	    -e 's#</\([bi]\)><\1>##g'					\
	    -e 's#</\([bi]\)>\([[:punct:][:space:]]*\)<\1>#\2#g'	\
	    -e 's#\([^[:punct:]]\)\([[:punct:]]*\)\(<[bi]>\)#\1\3\2#g'	\
	    -e 's#\(<i>[fh]t*p:[^<]*\)</i>/#\1/</i>#g'			\
	    -e 's#\(<i>/[^<]*\)</i>/#\1/</i>#g'				\
	    -e 's#<h3>*<b>*>#<h3>#g' -e 's#</b></h3>#</h3>#g'		\
									\
	    -e 's#ç#\&amp;#g'						\
	    -e 's#è#\&lt;#g'						\
	    -e 's#ê#\&gt;#g'						\
	    ${do_convert_asciiexp[@]}					\
									\
	    -e '1s#^#<pre>#'						\
	    -e '$s#$#</pre>#'						\
	    -e 's#<pre></pre>##g'					\
	    -e 's#</pre><pre>##g'					\
	| while IFS= read line; do
		if [[ $line = *@([!	 †])* ]]; then
			print -r -- "$line"
			let isblank=0
		elif (( isblank == 0 )); then
			print
			let isblank++
		fi
	done | unexpand -a
}

output_header()
{
	cat <<-EOF
		<?xml version="1.0"?>
		<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
		 "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
		<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"><head>
		 <meta http-equiv="content-type" content="text/html; charset=us-ascii" />
		 <title>RTFM ${1}(${2})</title>
		 <meta name="robots" content="index, follow" />
		</head><body>
		<script type="text/javascript"><!--
		 google_ad_client = "pub-0266998858986985";
		 google_ad_width = 468;
		 google_ad_height = 15;
		 google_ad_format = "468x15_0ads_al_s";
		 google_ad_channel = "9683305767";
		 google_color_border = "CCCCCC";
		 google_color_bg = "CCCCCC";
		 google_color_link = "000000";
		 google_color_url = "006600";
		 google_color_text = "006600";
		//--></script>
		<script type="text/javascript"
		 src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
		</script>
		<p style="font-size:2pt;">This product includes material provided by Thorsten Glaser.</p>
		<h1>MirOS Manual: <a href="../man${2}/${1}.htm"><tt>${1}(${2})</tt></a></h1>
		<p style="font-size:xx-small;">Generated on ${gendate} by
		 \$MirOS: src/scripts/roff2htm,v 1.19 2005/11/15 21:10:19 tg Exp $</p>
		<hr />
	EOF
}

output_footer()
{
	cat <<-EOF
		<hr />
		<p>These manual pages are copyrighted by their respective writers; their
		 source can normally be found in our <a href="/cvs.cgi/src/">CVSweb</a>.
		 The rest is Copyright &copy; 2002-2005 <a href="http://MirBSD.org/">The
		 MirOS Project</a>, Germany.</p>
		<p style="font-size:x-small;">This manual page's HTML representation
		 is supposed to be <a href="http://validator.w3.org/check/referer">valid
		 XHTML/1.1</a>; if not, please send a bug report - diffs preferred.</p>
		</body></html>
	EOF
}

do_conversion()
{
	output_header ${1:-missing-pagename} ${2:-0}
	do_convert
	output_footer
}

# convert_page /path/to/man.cat1 /targetpath
convert_page()
{
	fn=$1				# filename
	bn=${fn##*/}			# basename
	page=${bn%.0}			# manual page name
	dn=${fn%/*}			# dirname
	as=${dn##*/cat}			# archsection
	sect=${as%%/*}			# section
	tn=$2/man${sect}/${page}.htm	# target file

	print -nru2 -- $fn -\> $tn
	do_conversion $page $sect <$fn >$tn
	print -u2
}

# convert_all /path/to/share/man /targetpath
convert_all()
{
	tp=${2:-$(pwd)/mbsdman}		# target basepath

	for x in 1 2 3 3p 4 5 6 7 8 9; do
		mkdir -p $tp/man$x	# one per section
		print DirectoryIndex /dev/null >$tp/man$x/.htaccess
	done
	find ${1:-/usr/share/man}/cat* -name \*.0 | while read f; do
		convert_page $f $tp	# any subpages
	done
}

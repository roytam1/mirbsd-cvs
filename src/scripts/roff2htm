#!/bin/mksh
# $MirOS: src/scripts/roff2htm,v 1.37 2007/01/25 10:42:34 tg Exp $
# $ekkoBSD: catman2html.sh,v 1.2 2004/03/07 03:02:53 stephen Exp $
#-
# Copyright (c) 2004, 2005, 2006, 2007
#	Thorsten "mirabilos" Glaser <tg@mirbsd.de>
# Original version for ekkoBSD by:
# Copyright (c) 2004
#	Stephen Paskaluk <sap@mirbsd.org>
# Parts of the regular expression set below are based upon work by:
# Copyright (c) 1995
#	Panagiotis J. Christias <christia@theseas.ntua.gr>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# Advertising materials mentioning features or use of this work must
# display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# Routines for converting catman pages and nrcon'd papers to HTML.
# ATTENTION: this file contains embedded white-, backspace and high-
#	     bit-on control characters! Use "jupp --asis $0" to edit
# Note: this file contains magic and can't be edited as UTF-8 either.


# Set up

gendate=$(date +"%F %T")		# current time

# Subroutines

do_convert()
{
	set +e
	let isblank=0
	expand								\
	| sed								\
	    -e '/-$/N
{
s/\([0-9A-z][-.,0-9A-z]*\)-\n\(  *\)\([0-9A-z][-.,0-9A-z]*([1-9][A-z]*)\)\([^ ]*\) /\1\3\4\
\2/
}'									\
	    -e '/-$/N
{
s/\([0-9A-z][-.,0-9A-z]*\)-\n\(  *\)\([0-9A-z][-.,0-9A-z]*([1-9][A-z]*)\)\([^ ]*\) /\1\3\4\
\2/
}'									\
	    -e 'y#&<>#Áþÿ#'						\
									\
	    -e '/^[A-Z]/s#.##g'					\
	    -e 's#^[A-Z][ ,A-Z0-9]*$#</pre><h2>&</h2><pre>#'		\
	    -e 's#^  \([A-Z][ ,A-Z0-9]*\)$#</pre><h3>\1</h3><pre>#'	\
									\
	    -e 's#_\([^€-¿][€-¿]*\)#<i>\1</i>#g'			\
	    -e 's#[^€-¿][€-¿]*\([^€-¿][€-¿]*\)#<b>\1</b>#g'		\
									\
	    -e 's#</\([bi]\)><\1>##g'					\
	    -e 's#</b><b>[^€-¿][€-¿]*##g'				\
	    -e 's#</b>[^€-¿][€-¿]*<b>##g'				\
	    -e 's#[^€-¿][€-¿]*##g'					\
	    -e 's#_</i<b><</b>i>##g'					\
									\
	    -e 's#^\( \{2,3\}\)\([A-Z][ ,0-9A-z]*\)$#\1<b>\2</b>#'	\
									\
	    -e '/^   /s#\(\([0-9A-z][-.,0-9A-z]*\)(\([1-9]\)[/0-9A-Za-z]*)\)#<a href=\"../man\3/\2.htm\">\1</a>#g' \
	    -e '/^   /s#\(<i>\([0-9A-z][-.,0-9A-z]*\)</i>(\([1-9]\)[/0-9A-Za-z]*)\)#<a href=\"../man\3/\2.htm\">\1</a>#g' \
	    -e '/^   /s#\(\([0-9A-z][-.,0-9A-z]*\)(\([PSU][MS][DM]\))\)#<a href=\"../man\3/\2.htm\">\1</a>#g' \
	    -e '/^   /s#\(<i>\([0-9A-z][-.,0-9A-z]*\)</i>(\([PSU][MS][DM]\))\)#<a href=\"../man\3/\2.htm\">\1</a>#g' \
	    -e '/^   /s#\(\([0-9A-z][-.,0-9A-z]*\)(\(PAPERS\))\)#<a href=\"../man\3/\2.htm\">\1</a>#g' \
	    -e '/^   /s#\(<i>\([0-9A-z][-.,0-9A-z]*\)</i>(\(PAPERS\))\)#<a href=\"../man\3/\2.htm\">\1</a>#g' \
									\
	    -e 's#<b>+</b>\( *\)<b>o</b># \1\&bull;#'			\
	    -e 's#<b>+</b>#\&bull;#'					\
	    -e 's#</\([bi]\)><\1>##g'					\
	    -e 's#</\([bi]\)>\([[:punct:][:space:]]*\)<\1>#\2#g'	\
	    -e 's#\([^[:punct:]]\)\([-!"#$%&'\''()*+,./:;=?@[\]^_`{|}~]*\)\(<[bi]>\)#\1\3\2#g'	\
	    -e 's#\(<i>[fh]t*p:[^<]*\)</i>/#\1/</i>#g'			\
	    -e 's#\(<i>/[^<]*\)</i>/#\1/</i>#g'				\
	    -e 's#<h3>*<b>*>#<h3>#g' -e 's#</b></h3>#</h3>#g'		\
									\
	    -e 's#Á#\&amp;#g'						\
	    -e 's#þ#\&lt;#g'						\
	    -e 's#ÿ#\&gt;#g'						\
									\
	    -e '1s#^#<pre>#'						\
	    -e '$s#$#</pre>#'						\
	    -e 's#<pre></pre>##g'					\
	    -e 's#</pre><pre>##g'					\
	    -e "s#<a href=\"../man${1:-0}/#<a href=\"#g"		\
	| while IFS= read line; do
		if [[ $line = *@([!	  ])* ]]; then
			print -r -- "$line"
			let isblank=0
		elif (( isblank == 0 )); then
			print
			let isblank++
		fi
	done | iconv -csf utf-8 -t ucs-2le | \
	    hexdump -ve '/2 "%04x" "\n"' | while read x; do
		let i=16#$x
		if (( i < 0x7f )); then
			typeset -i8 o=i
			print -n \\0${o#8#}
		else
			print -n "&#${i};"
		fi
	done
}

output_header()
{
	cat <<-EOF
		<?xml version="1.0"?>
		<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
		 "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
		<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"><head>
		 <meta http-equiv="content-type" content="text/html; charset=us-ascii" />
		 <title>RTFM ${1}(${2})</title>
		 <meta name="robots" content="index, follow" />
		</head><body>
		<h1>MirOS Manual: <a href="../man${2}/${1}.htm"><tt>${1}(${2})</tt></a></h1>
	EOF
}

output_footer()
{
	cat <<-EOF
		<hr /><p style="font-size:xx-small;">Generated on ${gendate} by
		 \$MirOS: src/scripts/roff2htm,v 1.37 2007/01/25 10:42:34 tg Exp $</p>
		<p>These manual pages are copyrighted by their respective writers; their
		 source can be retrieved from our <a href="http://cvs.mirbsd.de/">CVSweb</a>.
		 The rest is Copyright &copy; 2002-2007 <a href="http://www.mirbsd.org/">The
		 MirOS Project</a>, Germany. <i style="font-size:3pt;"><br />
		 This product includes material provided by Thorsten Glaser.</i></p>
		<p style="font-size:x-small;">This manual page's HTML representation
		 is supposed to be <a href="http://validator.w3.org/check/referer">valid
		 XHTML/1.1</a>; if not, please send a bug report &ndash; diffs preferred.</p>
		</body></html>
	EOF
}

do_conversion()
{
	output_header ${1:-missing-pagename} ${2:-0}
	do_convert ${2:-0}
	output_footer
}

# do_conversion_verbose title section infile outfile
do_conversion_verbose()
{
	print -nru2 -- $3 -\> $4
	do_conversion $1 $2 <$3 >$4
	print -u2
}

# convert_page /path/to/man.cat1 /targetpath
convert_page()
{
	fn=$1				# filename
	bn=${fn##*/}			# basename
	page=${bn%.0}			# manual page name
	dn=${fn%/*}			# dirname
	as=${dn##*/cat}			# archsection
	sect=${as%%/*}			# section
	tn=$2/man${sect}/${page}.htm	# target file

	do_conversion_verbose $page $sect $fn $tn
}

# output_htaccess >.../.htaccess
output_htaccess()
{
	print DirectoryIndex /dev/null
}

# convert_all /path/to/share/man /targetpath
convert_all()
{
	tp=${2:-$(pwd)/mbsdman}		# target basepath

	find ${1:-/usr/share/man}/cat{1,2,3,3p,4,5,6,7,8,9} -name \*.0 |&
	for x in 1 2 3 3p 4 5 6 7 8 9; do
		mkdir -p $tp/man$x	# one per section
		output_htaccess >$tp/man$x/.htaccess
	done
	while read -p f; do
		convert_page $f $tp	# any subpages
	done
}

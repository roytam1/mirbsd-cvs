#!/bin/mksh
# $MirOS: src/scripts/mnt-cvsroot,v 1.12 2006/09/20 22:24:51 tg Exp $
#-
# Copyright (c) 2005
#	Thorsten "mirabilos" Glaser <tg@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a defect.
#-
# Change CVSROOT of a checked out tree (and save space with it)

me=${0##*/}
newroot=$1
useroot=0
if [[ $newroot = - ]]; then
	shift
	newroot=$(readlink -nf "$1")
	[[ -d $newroot ]] && if [[ -d $newroot/CVS ]]; then
		newroot=$newroot/CVS/Root
	else
		newroot=$newroot/Root
	fi
	useroot=1
fi
if [[ -z $newroot || $newroot = -? ]]; then
	print -u2 "Syntax: $me newroot [dir [...]]"
	print -u2 "\t$me - .../CVS/Root [dir [...]]"
	exit 1
fi
shift

[[ -z $1 ]] && if [[ $useroot = 0 ]]; then
	exec $SHELL $me "$newroot" .
else
	exec $SHELL $me - "$newroot" .
fi

# realpath(2)ise arguments
set -A arg
let i=0
for name in "$@"; do
	arg[i++]="$(readlink -nf "$name")"
done

if ! T="$(mktemp ${arg[0]}/$me.XXXXXXXXXX)"; then
	print -u2 "$me: fatal: cannot mktemp"
	exit 1
fi

if [[ $useroot = 1 ]]; then
	rm -f "$T"
	ln "$newroot" "$T" || cp "$newroot" "$T"
fi

trap 'rm -f "$T"; exit 0' 0
trap 'rm -f "$T"; trap - EXIT; exit 1' 1 2 3 5 13 15

if [[ $useroot = 0 ]]; then
	chmod 664 "$T"
	print -r -- "$newroot" >"$T"
fi

let rv=0
find "${arg[@]}" -path \*/CVS/Root |&
while read -p name; do
	if ! rm "$name"; then
		print -u2 "$me: error: cannot rm <$name>"
		exit 1
	fi
	ln -f "$T" "$name" || if ! U="$(mktemp ${arg[0]}/$me.XXXXXXXXXX)"; then
		cp "$T" "$name"
	elif cat "$T" >"$U" && ln -f "$U" "$name"; then
		rm -f "$T"
		T="$U"
	else
		rm -f "$U"
		cp "$T" "$name"
	fi
done

exit 0

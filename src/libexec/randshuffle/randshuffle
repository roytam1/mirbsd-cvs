#!/bin/ksh
# $MirOS$
#-
# Copyright (c) 2003, 2004
#	Thorsten "mirabile" Glaser <tg@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.
#-
# re-seed the random seed state file (batched)

exec 2>&1

export PATH=/bin:/usr/bin:/sbin:/usr/sbin

R=$(mktemp) || exit 1
S=$(mktemp) || { rm -f $R; exit 1; }
trap 'rm -f $R $S ; exit 0' 0
trap 'rm -f $R $S ; exit 1' 1 2 3 13 15

dd if=/dev/prandom of=$R bs=256 count=1 >/dev/null 2>&1 || exit 1
dd if=/dev/arandom of=$S bs=256 count=94 >/dev/null 2>&1 || exit 1
SUMS="$(rmd160 $R $S) $RANDOM $(ps ax|wc -l) $PPID $SECONDS $$"
RANDOM=$(echo "$SUMS" | cksum -o 1 | while read a b; do echo $a; done)
cat $S >>$R
dd if=/dev/prandom of=$S bs=256 count=1 >/dev/null 2>&1 || exit 1
cat $S >>$R
dd if=/dev/urandom of=$S bs=256 count=96 >/dev/null 2>&1 || exit 1
cat $S >>$R
cat /var/db/host.random >/dev/arandom
dd if=/dev/arandom of=$S bs=256 count=1 >/dev/null 2>&1 || {
	cat $R >/dev/arandom
	exit 1
}
cat $S >>$R
dd if=/dev/urandom of=$S bs=1024 count=63 >/dev/null 2>&1 || {
	cat $R >/dev/arandom
	exit 1
}
SUMS="$(rmd160 $R $S /var/db/host.random) $RANDOM"
cat $R $S >/var/db/host.random
dd if=/dev/prandom of=$R bs=256 count=1 >/dev/null 2>&1 || {
	echo "$SUMS" >/dev/arandom
	exit 2
}
dd if=/dev/urandom of=$S bs=256 count=1 >/dev/null 2>&1 || {
	echo "$SUMS" >>$R
	cat $R >/dev/arandom
	exit 2
}
echo "$SUMS" >>$S
cat $R $S >/dev/arandom
echo "notice: system random seed rotated!" | logger

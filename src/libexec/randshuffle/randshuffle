#!/bin/mksh
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.3 2005/07/07 13:39:34 tg Exp $
#-
# Copyright (c) 2003, 2004, 2005
#	Thorsten "mirabile" Glaser <tg@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a nontrivial bug.
#-
# re-seed the random seed state file (batched)

exec 2>&1

export PATH=/bin:/usr/bin:/sbin:/usr/sbin

R=$(mktemp /tmp/.randshuffle.XXXXXXXXXX) || exit 1
S=$(mktemp /tmp/.randshuffle.XXXXXXXXXX) || { rm -f $R; exit 1; }
trap 'rm -f $R $S; exit 0' 0
trap 'rm -f $R $S; trap - EXIT; exit 1' 1 2 3 13 15

dd if=/dev/prandom of=$R bs=160 count=1 >/dev/null 2>&1 || exit 1
dd if=/dev/arandom of=$S bs=160 count=96 >/dev/null 2>&1 || exit 1
SUMS="$(rmd160 $R $S) $RANDOM $(ps ax|wc -l) $PPID $SECONDS $$"
RANDOM=$(print -r -- "$SUMS" | cksum -o 1 | while read a b; do print $a; done)
cat $S >>$R
sync
dd if=/dev/prandom of=$S bs=160 count=1 >/dev/null 2>&1 || exit 1
cat $S >>$R
dd if=/dev/urandom of=$S bs=160 count=96 >/dev/null 2>&1 || exit 1
cat $S >>$R
cat /var/db/host.random >/dev/arandom
dd if=/dev/arandom of=$S bs=160 count=1 >/dev/null 2>&1 || {
	cat $R >/dev/arandom
	exit 1
}
cat $S >>$R
sync
dd if=/dev/urandom of=$S bs=160 count=64 >/dev/null 2>&1 || {
	cat $R >/dev/arandom
	exit 1
}
SUMS="$(rmd160 $R $S /var/db/host.random) $RANDOM"
cat $R $S >/var/db/host.random
dd if=/dev/prandom of=$R bs=160 count=1 >/dev/null 2>&1 || {
	print -r -- "$SUMS" >/dev/arandom
	exit 2
}
sync
dd if=/dev/urandom of=$S bs=160 count=1 >/dev/null 2>&1 || {
	print -r -- "$SUMS" >>$R
	cat $R >/dev/arandom
	exit 2
}
print -r -- "$SUMS" >>$S
cat $R $S >/dev/arandom
print "notice: system random seed rotated!" | logger

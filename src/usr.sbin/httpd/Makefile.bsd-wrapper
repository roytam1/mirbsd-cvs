# Build wrapper for the HTTP daemon
# $MirOS: src/usr.sbin/httpd/Makefile.bsd-wrapper,v 1.4 2005/10/21 11:09:42 tg Exp $
# $OpenBSD: Makefile.bsd-wrapper,v 1.57 2005/09/27 16:27:22 deraadt Exp $

.include <bsd.own.mk>
.include <bsd.sys.mk>

#   MirOS Layout
#<Layout MirOS>
#    prefix:        /var/www
#    exec_prefix:   /usr
#    bindir:        $exec_prefix/bin
#    sbindir:       $exec_prefix/sbin
#    libexecdir:    $exec_prefix/libexec/httpd/modules
#    mandir:        $exec_prefix/share/man
#    sysconfdir:    $prefix/conf
#    datadir:       $prefix
#    iconsdir:      $prefix/icons
#    htdocsdir:     $prefix/htdocs
#    manualdir:     $htdocsdir/manual
#    cgidir:        $prefix/cgi-bin
#    includedir:    $exec_prefix/libexec/httpd/include
#    localstatedir: $prefix
#    runtimedir:    $prefix/logs
#    logfiledir:    $prefix/logs
#    proxycachedir: $prefix/proxy
#</Layout>

HTTPD_PREFIX=		/var/www
HTTPD_EXEC_PREFIX=	/usr
HTTPD_BINDIR=		${HTTPD_EXEC_PREFIX}/bin
HTTPD_SBINDIR=		${HTTPD_EXEC_PREFIX}/sbin
HTTPD_LIBEXECDIR=	${HTTPD_EXEC_PREFIX}/libexec/httpd/modules
HTTPD_SYSCONFDIR=	${HTTPD_PREFIX}/conf
HTTPD_ICONSDIR=		${HTTPD_PREFIX}/icons
HTTPD_HTDOCSDIR=	${HTTPD_PREFIX}/htdocs
HTTPD_INCLUDEDIR=	${HTTPD_EXEC_PREFIX}/libexec/httpd/include
HTTPD_RUNDIR=		${HTTPD_PREFIX}/logs
HTTPD_LOGDIR=		${HTTPD_PREFIX}/logs

CONFIG_ARGS=	--with-layout="MirOS" --enable-module="ssl" --enable-suexec \
		--enable-module="keynote" --enable-rule=INET6 \
		--suexec-caller="www" \
		--suexec-docroot="${HTTPD_HTDOCSDIR}" --suexec-userdir="pub" \
		--suexec-logfile="/var/log/suexec_log" \
		--suexec-uidmin="1000" --suexec-gidmin="1000" \
		--suexec-safepath="/usr/bin:/bin:/usr/local/bin:/usr/mpkg/bin"

# This is stupid - to build a DSO module for httpd you not only need to
# --enable-shared, you need to --enable-module or --enable-shared doesn't
# do anything.

DSO_MODULE_ARGS=  \
	--enable-module=so \
	--enable-module=auth_anon \
	--enable-shared=auth_anon \
	--enable-module=expires \
	--enable-shared=expires \
	--enable-module=headers \
	--enable-shared=headers \
	--enable-module=auth_db \
	--enable-shared=auth_db \
	--enable-module=auth_dbm \
	--enable-shared=auth_dbm \
	--enable-module=auth_digest \
	--enable-shared=auth_digest \
	--enable-module=cern_meta \
	--enable-shared=cern_meta \
	--enable-module=define \
	--enable-shared=define \
	--enable-module=digest \
	--enable-shared=digest \
	--enable-module=info \
	--enable-shared=info \
	--enable-module=log_agent \
	--enable-shared=log_agent \
	--enable-module=log_referer \
	--enable-shared=log_referer \
	--enable-module=mime_magic \
	--enable-shared=mime_magic \
	--enable-module=mmap_static \
	--enable-shared=mmap_static \
	--enable-module=proxy \
	--enable-shared=proxy \
	--enable-module=rewrite \
	--enable-shared=rewrite \
	--enable-module=speling \
	--enable-shared=speling \
	--enable-module=unique_id \
	--enable-shared=unique_id \
	--enable-module=usertrack \
	--enable-shared=usertrack \
	--enable-module=vhost_alias \
	--enable-shared=vhost_alias

INSTALL_MODULES=

# If you support dynamic loading, enable the so module, and build all the
# modules that come with httpd.

.if !defined(NOPIC) || ${NOPIC:L} == "no"
CONFIG_ARGS+=  ${DSO_MODULE_ARGS}
INSTALL_MODULES= \
	src/modules/experimental/mod_mmap_static.so \
	src/modules/experimental/mod_auth_digest.so \
	src/modules/extra/mod_define.so \
	src/modules/proxy/libproxy.so \
	src/modules/standard/mod_vhost_alias.so \
	src/modules/standard/mod_log_agent.so \
	src/modules/standard/mod_info.so \
	src/modules/standard/mod_log_referer.so \
	src/modules/standard/mod_mime_magic.so \
	src/modules/standard/mod_speling.so \
	src/modules/standard/mod_rewrite.so \
	src/modules/standard/mod_auth_dbm.so \
	src/modules/standard/mod_auth_anon.so \
	src/modules/standard/mod_auth_db.so \
	src/modules/standard/mod_digest.so \
	src/modules/standard/mod_cern_meta.so \
	src/modules/standard/mod_usertrack.so \
	src/modules/standard/mod_unique_id.so \
	src/modules/standard/mod_expires.so \
	src/modules/standard/mod_headers.so
.endif

PERLPATH=	/usr/bin/perl

MUNGEDFILES=	${.OBJDIR}/src/ap/Makefile \
		${.OBJDIR}/src/include/ap_config_auto.h \
		${.OBJDIR}/src/main/Makefile \
		${.OBJDIR}/src/modules/experimental/Makefile \
		${.OBJDIR}/src/modules/extra/Makefile \
		${.OBJDIR}/src/modules/proxy/Makefile \
		${.OBJDIR}/src/modules/standard/Makefile \
		${.OBJDIR}/src/modules/keynote/Makefile \
		${.OBJDIR}/src/modules/ssl/Makefile \
		${.OBJDIR}/src/modules/ssl/ssl_expr_parse.c \
		${.OBJDIR}/src/modules/ssl/ssl_expr_parse.h \
		${.OBJDIR}/src/modules/ssl/ssl_expr_scan.c \
		${.OBJDIR}/src/modules/Makefile \
		${.OBJDIR}/src/os/unix/Makefile \
		${.OBJDIR}/src/regex/Makefile \
		${.OBJDIR}/src/support/Makefile \
		${.OBJDIR}/src/apaci \
		${.OBJDIR}/src/Makefile \
		${.OBJDIR}/src/Makefile.config \
		${.OBJDIR}/src/modules.c \
		${.OBJDIR}/src/Configuration.apaci \
		${.OBJDIR}/Makefile \
		${.OBJDIR}/config.status

BINFILES= 	src/support/htdigest src/support/htpasswd

SBINFILES= \
	src/httpd \
	src/support/logresolve src/support/rotatelogs src/support/suexec

MAN+=	httpd.8 src/support/apxs.8 src/support/dbmmanage.1 \
	src/support/htdigest.1 src/support/htpasswd.1 src/support/suexec.8 \
	src/support/logresolve.8 src/support/rotatelogs.8

INCFILES= \
	src/include/ap.h \
	src/include/ap_alloc.h  \
	src/include/ap_compat.h \
	src/include/ap_config.h \
	src/include/ap_config_auto.h \
	src/include/ap_ctx.h \
	src/include/ap_ctype.h \
	src/include/ap_hook.h \
	src/include/ap_md5.h \
	src/include/ap_mm.h \
	src/include/ap_mmn.h \
	src/include/ap_sha1.h \
	src/include/buff.h \
	src/include/compat.h \
	src/include/conf.h \
	src/include/explain.h \
	src/include/fnmatch.h \
	src/include/fdcache.h \
	src/include/hsregex.h \
	src/include/http_conf_globals.h \
	src/include/http_config.h \
	src/include/http_core.h \
	src/include/http_log.h \
	src/include/http_main.h \
	src/include/http_protocol.h \
	src/include/http_request.h \
	src/include/http_vhost.h \
	src/include/httpd.h \
	src/include/multithread.h \
	src/include/rfc1413.h \
	src/include/scoreboard.h \
	src/include/util_date.h \
	src/include/util_md5.h \
	src/include/util_script.h \
	src/include/util_uri.h \
	src/os/unix/os-inline.c \
	src/os/unix/os.h \
	src/include/sa_len.h \
	src/include/sockaddr_storage.h \
	src/modules/ssl/mod_ssl.h \
	src/modules/ssl/ssl_expr.h \
	src/modules/ssl/ssl_util_ssl.h \
	src/modules/ssl/ssl_util_table.h

CONFFILES= \
	conf/httpd.conf \
	conf/magic \
	conf/mime.types

HTDOCS=	\
	htdocs/index.htm

CGIFILES= \
	cgi-bin/printenv \
	cgi-bin/test-cgi

MANUALFILES= \
	manual/vhosts/vhosts-in-depth.html \
	manual/vhosts/virtual-host.html

ICONFILES= \
	icons/README \
	icons/a.gif \
	icons/a.png \
	icons/alert.black.gif \
	icons/alert.black.png \
	icons/alert.red.gif \
	icons/alert.red.png \
	icons/back.gif \
	icons/back.png \
	icons/ball.gray.gif \
	icons/ball.gray.png \
	icons/ball.red.gif \
	icons/ball.red.png \
	icons/binary.gif \
	icons/binary.png \
	icons/binhex.gif \
	icons/binhex.png \
	icons/blank.gif \
	icons/blank.png \
	icons/bomb.gif \
	icons/bomb.png \
	icons/box1.gif \
	icons/box1.png \
	icons/box2.gif \
	icons/box2.png \
	icons/broken.gif \
	icons/broken.png \
	icons/burst.gif \
	icons/burst.png \
	icons/c.gif \
	icons/c.png \
	icons/comp.blue.gif \
	icons/comp.blue.png \
	icons/comp.gray.gif \
	icons/comp.gray.png \
	icons/comp1.gif \
	icons/comp1.png \
	icons/comp2.gif \
	icons/comp2.png \
	icons/compressed.gif \
	icons/compressed.png \
	icons/continued.gif \
	icons/continued.png \
	icons/dir.gif \
	icons/dir.png \
	icons/dir2.gif \
	icons/dir2.png \
	icons/diskimg.gif \
	icons/diskimg.png \
	icons/doc.gif \
	icons/doc.png \
	icons/down.gif \
	icons/down.png \
	icons/dvi.gif \
	icons/dvi.png \
	icons/f.gif \
	icons/f.png \
	icons/folder.gif \
	icons/folder.open.gif \
	icons/folder.open.png \
	icons/folder.png \
	icons/folder.sec.gif \
	icons/folder.sec.png \
	icons/forward.gif \
	icons/forward.png \
	icons/generic.gif \
	icons/generic.png \
	icons/generic.red.gif \
	icons/generic.red.png \
	icons/generic.sec.gif \
	icons/generic.sec.png \
	icons/generic2.gif \
	icons/generic2.png \
	icons/generic3.gif \
	icons/generic3.png \
	icons/hand.right.gif \
	icons/hand.right.png \
	icons/hand.up.gif \
	icons/hand.up.png \
	icons/icon.sheet.gif \
	icons/icon.sheet.png \
	icons/image.gif \
	icons/image.png \
	icons/image1.gif \
	icons/image1.png \
	icons/image2.gif \
	icons/image2.png \
	icons/image3.gif \
	icons/image3.png \
	icons/index.gif \
	icons/index.png \
	icons/key.gif \
	icons/key.png \
	icons/layout.gif \
	icons/layout.png \
	icons/left.gif \
	icons/left.png \
	icons/link.gif \
	icons/link.png \
	icons/movie.gif \
	icons/movie.png \
	icons/p.gif \
	icons/p.png \
	icons/patch.gif \
	icons/patch.png \
	icons/pdf.gif \
	icons/pdf.png \
	icons/pie0.gif \
	icons/pie0.png \
	icons/pie1.gif \
	icons/pie1.png \
	icons/pie2.gif \
	icons/pie2.png \
	icons/pie3.gif \
	icons/pie3.png \
	icons/pie4.gif \
	icons/pie4.png \
	icons/pie5.gif \
	icons/pie5.png \
	icons/pie6.gif \
	icons/pie6.png \
	icons/pie7.gif \
	icons/pie7.png \
	icons/pie8.gif \
	icons/pie8.png \
	icons/portal.gif \
	icons/portal.png \
	icons/ps.gif \
	icons/ps.png \
	icons/quill.gif \
	icons/quill.png \
	icons/rainbow.gif \
	icons/rainbow.png \
	icons/right.gif \
	icons/right.png \
	icons/screw1.gif \
	icons/screw1.png \
	icons/screw2.gif \
	icons/screw2.png \
	icons/script.gif \
	icons/script.png \
	icons/sound.gif \
	icons/sound.png \
	icons/sound1.gif \
	icons/sound1.png \
	icons/sound2.gif \
	icons/sound2.png \
	icons/sphere1.gif \
	icons/sphere1.png \
	icons/sphere2.gif \
	icons/sphere2.png \
	icons/tar.gif \
	icons/tar.png \
	icons/tex.gif \
	icons/tex.png \
	icons/text.gif \
	icons/text.png \
	icons/transfer.gif \
	icons/transfer.png \
	icons/unknown.gif \
	icons/unknown.png \
	icons/up.gif \
	icons/up.png \
	icons/uu.gif \
	icons/uu.png \
	icons/uuencoded.gif \
	icons/uuencoded.png \
	icons/world1.gif \
	icons/world1.png \
	icons/world2.gif \
	icons/world2.png

all: 	prereq
	@cd ${.OBJDIR} && ${MAKE} OPTIM="${CFLAGS} ${COPTS}"

prereq: ${.OBJDIR}/config.status

${.OBJDIR}/config.status : ${.OBJDIR}/config.layout
	@cd ${.OBJDIR} && CC="${CC}" OPTIM="${CFLAGS} ${COPTS}" \
	    LD_SHLIB="${CC}" PATH="/sbin:/usr/sbin:/bin:/usr/bin" \
	    ${SHELL} configure ${CONFIG_ARGS}

.if !exists(${.OBJDIR}/config.layout)
${.OBJDIR}/config.layout: ${.CURDIR}/config.layout
	lndir -s -e obj -e obj.${MACHINE_ARCH} -e Makefile.bsd-wrapper \
	    ${.CURDIR}
.endif

includes: prereq
	@-for i in ${INCFILES}; do \
		j=$$(basename $$i); \
		echo "Installing ${DESTDIR}${HTTPD_INCLUDEDIR}/$$j"; \
		${INSTALL} ${INSTALL_COPY} -g ${BINGRP} -m ${NONBINMODE} \
		    ${.OBJDIR}/$$i ${DESTDIR}${HTTPD_INCLUDEDIR}; \
	done

install: maninstall includes
	${INSTALL} -c -o ${DOCOWN} -g ${DOCGRP} -m ${DOCMODE} \
	    ${.CURDIR}/LICENCE.httpd ${DESTDIR}${DOCDIR}/legal/
	@-for i in ${BINFILES}; do \
		j=$$(basename $$i); \
		echo "Installing ${DESTDIR}${HTTPD_BINDIR}/$$j"; \
		${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -g ${BINGRP} \
		    -m ${BINMODE} ${.OBJDIR}/$$i ${DESTDIR}${HTTPD_BINDIR}; \
	done
	@-for i in ${SBINFILES}; do \
		j=$$(basename $$i); \
		echo "Installing ${DESTDIR}${HTTPD_SBINDIR}/$$j"; \
		${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -g ${BINGRP} \
		    -m ${BINMODE} ${.OBJDIR}/$$i ${DESTDIR}${HTTPD_SBINDIR}; \
	done
	@-for i in ${INSTALL_MODULES}; do \
		j=$$(basename $$i); \
		echo "Installing ${DESTDIR}${HTTPD_LIBEXECDIR}/$$j"; \
		${INSTALL} ${INSTALL_COPY} -g ${BINGRP} -m ${NONBINMODE} \
		    ${.OBJDIR}/$$i ${DESTDIR}${HTTPD_LIBEXECDIR}; \
	done
	@d=$$(mktemp -d /tmp/httpdXXXXXXXXXX); \
	echo "Installing ${DESTDIR}${HTTPD_BINDIR}/apxs"; \
	j="sed -e 's;^#!/.*;#!${PERLPATH};' \
		-e 's;\@prefix\@;${HTTPD_PREFIX};' \
		-e 's;\@sbindir\@;${HTTPD_SBINDIR};' \
		-e 's;\@libexecdir\@;${HTTPD_LIBEXECDIR};' \
		-e 's;\@includedir\@;${HTTPD_INCLUDEDIR};' \
		-e 's;\@sysconfdir\@;${HTTPD_SYSCONFDIR};' \
		<${.OBJDIR}/src/support/apxs >$$d/apxs && \
		${INSTALL} ${INSTALL_COPY} -g ${BINGRP} -m ${BINMODE} \
		$$d/apxs ${DESTDIR}${HTTPD_SBINDIR}"; \
		echo $$j; \
		eval $$j; \
	echo "Installing ${DESTDIR}${HTTPD_BINDIR}/dbmmanage"; \
	j="sed -e 's;^#!/.*;#!${PERLPATH};' \
		<${.OBJDIR}/src/support/dbmmanage >$$d/dbmmanage && \
		${INSTALL} ${INSTALL_COPY} -g ${BINGRP} -m ${BINMODE} \
		$$d/dbmmanage ${DESTDIR}${HTTPD_BINDIR}"; \
		echo $$j; \
		eval $$j; \
	rm -rf $$d

.if ${.OBJDIR} == ${.CURDIR}
clean: prereq cleanman
	@cd ${.OBJDIR} && ${MAKE} clean  && rm -f ${MUNGEDFILES}
.else
clean: cleanman
	@cd ${.OBJDIR} && find . \! -type d -print0 | xargs -0r rm
.endif

cleandir: clean

test:
	# Nothing here so far...

depend: prereq
	# Nothing here so far...

lint:
	# Nothing here so far...

tags:
	# Nothing here so far...

.if defined(NOMAN) && ${NOMAN:L} != "no"
maninstall:
	@echo NOMAN is set
cleanman:
	@echo NOMAN is set
.endif

distribution:
	@-for i in ${CONFFILES}; do \
		j=$$(dirname $$i); \
		echo "Installing ${DESTDIR}${HTTPD_PREFIX}/$$i"; \
		${INSTALL} ${INSTALL_COPY} -g ${BINGRP} -m ${NONBINMODE} \
		    ${.OBJDIR}/$$i ${DESTDIR}${HTTPD_PREFIX}/$$j/; \
	done
	@-for i in ${HTDOCS}; do \
		j=$$(dirname $$i); \
		echo "Installing ${DESTDIR}${HTTPD_PREFIX}/$$i"; \
		${INSTALL} ${INSTALL_COPY} -g ${BINGRP} -m ${NONBINMODE} \
		    ${.OBJDIR}/$$i ${DESTDIR}${HTTPD_PREFIX}/$$j/; \
	done
	@-for i in ${MANUALFILES}; do \
		j=$$(dirname $$i); \
		echo "Installing ${DESTDIR}${HTTPD_HTDOCSDIR}/$$i"; \
		${INSTALL} ${INSTALL_COPY} -g ${BINGRP} -m ${NONBINMODE} \
		    ${.OBJDIR}/htdocs/$$i ${DESTDIR}${HTTPD_HTDOCSDIR}/$$j/; \
	done
	@-for i in ${CGIFILES}; do \
		j=$$(dirname $$i); \
		echo "Installing ${DESTDIR}${HTTPD_PREFIX}/$$i"; \
		${INSTALL} ${INSTALL_COPY} -g ${BINGRP} -m 000 \
		    ${.OBJDIR}/$$i ${DESTDIR}${HTTPD_PREFIX}/$$j/; \
	done
	@-for i in ${ICONFILES}; do \
		j=$$(dirname $$i); \
		echo "Installing ${DESTDIR}${HTTPD_PREFIX}/$$i"; \
		${INSTALL} ${INSTALL_COPY} -g ${BINGRP} -m ${NONBINMODE} \
		    ${.OBJDIR}/$$i ${DESTDIR}${HTTPD_PREFIX}/$$j/; \
	done

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
.if !defined(NOMAN) || ${NOMAN:L} == "no"
.  include <bsd.man.mk>
.endif

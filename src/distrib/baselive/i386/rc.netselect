# $MirOS: src/distrib/baselive/i386/rc.netselect,v 1.3 2006/09/30 20:42:03 tg Exp $
#-
# Copyright (c) 2006
#	Thorsten Glaser <tg@mirbsd.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# Advertising materials mentioning features or use of this work must
# display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a defect.

function show_info
{
	print
	print 'To get support, use lynx(1) with the following resources:'
	print 'online man pages: http://www.mirbsd.org/cman/'
	print 'interactive help: http://www.mirbsd.org/?irc'
}

function get_passwd
{
	print
	print "To login to the MirOS Live CD, a user 'live' has been added."
	print 'Please enter a password to login with now (default: "live").'
	print Note: it is highly suggested to change the password, because
	print 'sshd(8) is started by default.'
	passwd live
}

function set_hostname
{
	typeset -Uui36 rndval=$(date +%s)
	rndpfx=${rndval#36#}
	while (( ${#rndpfx} < 36 )); do
		typeset -Uui36 'rndval=(RANDOM % 60466176)' # 36^5
		rndpfx=${rndval#36#}$rndpfx
	done
	while (( ${#rndpfx} > 36 )); do
		rndpfx=${rndpfx#?}
	done
	# yes, the "livecd." comes first, trust me on this
	print livecd.$rndpfx.invalid.mirbsd.org >/etc/myname
	print ::1 livecd livecd.$rndpfx.invalid.mirbsd.org >>/etc/hosts
	print 127.0.0.1 livecd livecd.$rndpfx.invalid.mirbsd.org >>/etc/hosts
}

function get_net_ifnames
{
	local foo
	integer i

	set -A foo -- $(ifconfig -l)
	i=${#foo[*]}
	while (( i-- > 0 )); do
		[[ ${foo[i]} = @(lo|bridge|enc|gif|gre|tun|vlan|irip|pflog|pfsync|plip|sl)+([0-9]) ]] && \
		    unset foo[i]
	done
	print ${foo[*]}
}

function ask_netconfig
{
	set -A all_ifnames -- $(get_net_ifnames)
	default_ifname=${all_ifnames[0]}
	if [[ -z $default_ifname ]]; then
		print
		print No network interface found, skipping.
		do_netconf none
		return
	fi
	print
	print "Available network interfaces: ${all_ifnames[*]}"
	if=
	while [[ -z $if ]]; do
		print -n Interface to run a DHCP client on \
		    "(or none/done) [$default_ifname]? "
		read ifname
		[[ $ifname = @(d|n)one ]] && break
		[[ -z $ifname ]] && ifname=$default_ifname
		let i=0
		while (( i < ${#all_ifnames[*]} )); do
			[[ ${all_ifnames[i]} = $ifname ]] && \
			    if=${all_ifnames[i]}
			let ++i
		done
	done
	do_netconf ${if:-none}
}

function do_netconf
{
	if [[ $1 = none ]]; then
		:
		#XXX this is actually a bad idea, maybe the network
		#XXX is manually configured later; for now, just do
		#XXX not add the run of rdate (ntpd is run with -S)
		#print ntpd_flags=NO >>/etc/rc.conf.local
	else
		print dhcp >/etc/hostname.$1
		print rdate_flags=\"-nv ntp.mirbsd.org\" >>/etc/rc.conf.local
		print rtsold_flags=-am >>/etc/rc.conf.local
	fi
}

# Stuff to come *before* the shell escape possibility
rm -f /etc/hosts

# The menu
print
print "Select the MirOS/i386 Live CD 'modus operandi'"
print "=============================================="
print '1) manual/no network, no graphics'
print '2) automatic network (dhcp), no graphics'
print '3) automatic network, XFree86 (vesa 1024x768@24bpp) xdm/twm'
print '4) automatic network, XFree86 (vesa 800x600@16bpp) xdm/twm'
print '5) automatic network, XFree86 (vesa 640x480@8bpp) xdm/twm'
print '9) temporarily escape into a shell (type "exit" to return)'
print
print If you need to plug in any network devices, do it now.
i=
while [[ $i != @(1|2|3|4|5) ]]; do
	print -n "Your choice? "
	read i
	[[ $i = 9 ]] && HOME=/dev/.root /bin/mksh -l
done

case $i {
(1)	# no network to configure
	do_netconf none
	show_info
	get_passwd
	set_hostname
	;;
(2)	# configure the network
	ask_netconfig
	show_info
	get_passwd
	set_hostname
	;;
(3)	# configure network and X
	ask_netconfig
	show_info
	print xdm_flags= >>/etc/rc.conf.local
	get_passwd
	set_hostname
	;;
(4)	# configure network and X (with lower resolution)
	ask_netconfig
	show_info
	print xdm_flags= >>/etc/rc.conf.local
	print '/DefaultDepth/s/24/16/\nwq' | ed -s /etc/X11/XF86Config
	get_passwd
	set_hostname
	;;
(5)	# configure network and X (with lower resolution)
	ask_netconfig
	show_info
	print xdm_flags= >>/etc/rc.conf.local
	print '/DefaultDepth/s/24/8/\nwq' | ed -s /etc/X11/XF86Config
	get_passwd
	set_hostname
	;;
}
print

# Stuff to clean up
rm -f /etc/hostname.done

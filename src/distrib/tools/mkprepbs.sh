#!/bin/mksh
# $MirOS: src/distrib/tools/i386_chain.S,v 1.7 2007/10/20 22:05:13 tg Exp $
#-
# Copyright (c) 2007
#	Thorsten Glaser <tg@mirbsd.de>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# Advertising materials mentioning features or use of this work must
# display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# Create a self-installing bootxx for i386.
# Arguments: $1 = chain ELF object; $2 = binary chain, linked
# Output: shell script to stdout

rcsid='$MirOS: src/sys/arch/i386/stand/bootxx/mkbxinst.sh,v 1.2 2007/10/20 21:59:02 tg Exp $'

function die {
	rv=$1; shift
	print -u2 -- "$@"
	exit $rv
}

[[ -s $1 ]] || die 1 Cannot read input file "'$1'"
[[ -s $2 ]] || die 1 Cannot read input file "'$2'"

nm $1 |&
while read -p adr typ sym; do
	[[ $sym = @(_start|pad_start|patch_sector) ]] || continue
	eval typeset -i10 sym_$sym=0x\$adr
done

thecode=$(dd if=$2 bs=1 skip=$sym__start \
    count=$((sym_pad_start - sym__start)) 2>/dev/null | \
    hexdump -ve '1/1 "0x%02X "')

print '#!/usr/bin/env mksh'
print "# $rcsid"
print "# \$miros:${rcsid#*:}"
cat <<'EOF'
#-
# Copyright (c) 2007
#	Thorsten Glaser <tg@mirbsd.de>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# Self-installing i386 boot block chain loader for MirOS BSD

EOF
print set -A thecode $thecode
print typeset -i ofs_sector=$((sym_patch_sector - sym__start))
print typeset -i curptr=$((sym_pad_start - sym__start))
cat <<'EOF'

typeset -i chainsec=-1

while getopts ":s:" ch; do
	case $ch {
	(s)	if (( (chainsec = OPTARG) < 0 || OPTARG > 62 )); then
			print -u2 Error: invalid chain sector "'$OPTARG'"
			exit 1
		fi ;;
	(*)	chainsec=-2
		break ;;
	}
done
shift $((OPTIND - 1))
if (( chainsec < 0 )); then
	print -u2 "Syntax: prepend_chain -s sector | dd of=image conv=notrunc"
	exit 1
fi

# fill the block table
while (( curptr < 126 )); do
	(( thecode[curptr++] = RANDOM & 0xFF ))
done

# fill in the hashes
(( thecode[curptr++] = 0x8C ))
(( thecode[curptr++] = 0xCA ))
curptr=0
while (( curptr < 126 )); do
	(( thecode[126] ^= thecode[curptr++] ))
	(( thecode[127] ^= thecode[curptr++] ))
done

# create the output string
ostr=
curptr=0
typeset -Uui8 vo
while (( curptr < 128 )); do
	(( vo = thecode[curptr++] ))
	ostr="$ostr\\0${vo#8#}"
done

# over and out
# the part after $ostr generated by:
# $ dd if=<sparc cdrom with disklabel applied> bs=1 skip=128 | \
#   hexdump -ve '1/1 "\\0%o"' | sed -e 's/\\00\\/\\0\\/g' -e 's/\\00\\/\\0\\/g'
print -n "$ostr\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\01\0136\010\0\0\0\0\0\0\0\0\01\010\0\0\0\0\01\02\0200\0\0\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0332\0276\0125\0252"
exit 0
EOF
exit 0

#!/usr/bin/env mksh
# $MirOS: src/distrib/tools/mkprepbs.sh,v 1.3 2007/10/20 22:31:38 tg Exp $
# $miros: src/distrib/tools/mkprepbs.sh,v 1.3 2007/10/20 22:31:38 tg Exp $
#-
# Copyright (c) 2007
#	Thorsten Glaser <tg@mirbsd.de>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# Self-installing i386 boot block chain loader for MirOS BSD
# Appends stdin to stdout.

set -A thecode 0x66 0x31 0xC0 0x66 0x50 0x66 0x9D 0x05 0xA0 0x07 0x8E 0xD0 0xBC 0xFC 0xFF 0xFB 0x50 0x68 0x24 0x00 0x8E 0xD8 0x8E 0xC0 0x31 0xFF 0xBE 0x00 0x02 0xB9 0x80 0x00 0xF3 0x66 0xA5 0xCB 0xB8 0x01 0x02 0xBB 0x00 0x02 0xB9 0 0x00 0xB6 0x00 0x60 0xCD 0x13 0x61 0x73 0x08 0x60 0x31 0xC0 0xCD 0x13 0x61 0xEB 0xF2 0xEA 0x00 0x7C 0x00 0x00
typeset -i ofs_sector=43
typeset -i curptr=66

typeset -i chainsec=-1

while getopts ":s:" ch; do
	case $ch {
	(s)	if (( (chainsec = OPTARG) < 0 || OPTARG > 62 )); then
			print -u2 Error: invalid chain sector "'$OPTARG'"
			exit 1
		fi ;;
	(*)	chainsec=-2
		break ;;
	}
done
shift $((OPTIND - 1))
if (( chainsec < 0 )); then
	print -u2 "Syntax: prepend_chain -s sector | dd of=image conv=notrunc"
	exit 1
fi

# fill the block table
(( thecode[ofs_sector] = chainsec + 1 ))
while (( curptr < 126 )); do
	(( thecode[curptr++] = RANDOM & 0xFF ))
done

# fill in the hashes
(( thecode[curptr++] = 0x8C ))
(( thecode[curptr++] = 0xCA ))
curptr=0
while (( curptr < 126 )); do
	(( thecode[126] ^= thecode[curptr++] ))
	(( thecode[127] ^= thecode[curptr++] ))
done

# create the output string
ostr=
curptr=0
typeset -Uui8 vo
while (( curptr < 128 )); do
	(( vo = thecode[curptr++] ))
	ostr="$ostr\\0${vo#8#}"
done

# over and out
# the part after $ostr generated by:
# $ dd if=<sparc cdrom with disklabel applied> bs=1 skip=128 | \
#   hexdump -ve '1/1 "\\0%o"' | sed -e 's/\\00\\/\\0\\/g' -e 's/\\00\\/\\0\\/g'
print -n "$ostr\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\01\0136\010\0\0\0\0\0\0\0\0\01\010\0\0\0\0\01\02\0200\0\0\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0332\0276\0125\0252"
exec cat

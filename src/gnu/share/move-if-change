#!/bin/sh
# $MirOS: contrib/gnu/aux/move-if-change,v 1.3 2005/09/13 10:42:27 tg Exp $
# _MirOS: contrib/gnu/aux/move-if-change,v 1.3 2005/09/13 10:42:27 tg Exp $
#-
# Copyright (c) 2004
#	Thorsten "mirabile" Glaser <tg@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.
#-
# Compare a to b; if b is newer, replace b with a

if test x"$KSH_VERSION" = x; then
	if test x"$MKSH" = x; then
		MKSH=/bin/mksh
	fi
	if test -f $MKSH; then
		SHELL=$MKSH
		export SHELL
		case $# in
		0)	exec $MKSH "$0" ;;
		*)	exec $MKSH "$0" "$@" ;;
		esac
	fi
	# Only here if spawning mksh failed
	test x"$BASH_VERSION" = x && for i in {,/usr{,/local},/sw}/bin; do
		if test -f $i/bash; then
			SHELL=$i/bash
			export SHELL
			case $# in
			0)	exec $i/bash "$0" ;;
			*)	exec $i/bash "$0" "$@" ;;
			esac
		fi
	done
fi

if [[ $1 = -c ]]; then
	copy=1
	shift
else
	copy=0
fi

if [ $# -gt 2 ]; then
	[[ -z $SHELL ]] && SHELL=/bin/mksh
	set -A parms -- "$@"
	let i=${#parms[*]}-1
	target="${parms[i]}"
	unset parms[i]

	if [[ ! -d $target ]]; then
		echo "$target not a directory"
		exit 1
	fi
	set -e
	for src in "${parms[@]}"; do
		if [ $copy = 0 ]; then
			$SHELL "$0" "$src" "$target"
		else
			$SHELL "$0" -c "$src" "$target"
		fi
	done
	set +e
	exit 0
fi

[[ -r $2 ]] && if cmp "$1" "$2" >/dev/null 2>&1; then
	echo "$2 is unchanged"
	[ $copy = 1 ] || rm -f "$1"
	exit 0
fi
[ $copy = 0 ] || exec cp -f "$1" "$2"
exec mv -f "$1" "$2"

.\"	$MirOS: src/bin/rm/rm.1,v 1.3 2008/03/02 20:08:56 tg Exp $
.\"	$NetBSD: rm.1,v 1.24 2006/09/02 23:28:32 wiz Exp $
.\"	$OpenBSD: rm.1,v 1.25 2005/06/14 19:15:35 millert Exp $
.\"
.\" Copyright (c) 1990, 1993, 1994, 2003
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)rm.1	8.5 (Berkeley) 12/5/94
.\"
.Dd $Mdocdate: March 2 2008 $
.Dt RM 1
.Os
.Sh NAME
.Nm rm
.Nd remove directory entries
.Sh SYNOPSIS
.Nm
.Op Fl f | Fl i
.Op Fl dPRrv
.Ar
.Sh DESCRIPTION
The
.Nm
utility attempts to remove the non-directory type files specified on the
command line.
If the permissions of the file do not permit writing, and the standard
input device is a terminal, the user is prompted (on the standard error
output) for confirmation.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl d
Attempt to remove directories as well as other types of files.
.It Fl f
Attempt to remove the files without prompting for confirmation,
regardless of the file's permissions.
If the file does not exist, do not display a diagnostic message or modify
the exit status to reflect an error.
The
.Fl f
option overrides any previous
.Fl i
options.
.It Fl i
Request confirmation before attempting to remove each file, regardless of
the file's permissions, or whether or not the standard input device is a
terminal.
The
.Fl i
option overrides any previous
.Fl f
options.
.It Fl P
Overwrite regular files before deleting them.
Files are overwritten three times, first with the byte pattern
.Li 0xAA ,
then
.Li 0x55 ,
and then with random data, before they are deleted.
Some care is taken to ensure that the data are actually written to
disk, but this cannot be guaranteed, even on traditional filesystems;
on log-structured filesystems or if any block-journaling scheme is
in use, this option is completely useless.
If the file cannot be
overwritten, it will not be removed.
.Pp
Files with multiple links will not be overwritten.
If the
.Fl f
option is given, they will still be removed,
otherwise, they will remain untouched.
.Pp
Entries are renamed to the basename
.Dq Li rm.XXXXXXXX
.Pq where So X Sc are generated randomly
within the same parent directory before removing,
if the length of the generated total pathname will not overflow the buffer.
This prevents recovery of (almost) all basenames as well.
.It Fl R
Attempt to remove the file hierarchy rooted in each file argument.
The
.Fl R
option implies the
.Fl d
option.
If the
.Fl i
option is specified, the user is prompted for confirmation before
each directory's contents are processed (as well as before the attempt
is made to remove the directory).
If the user does not respond affirmatively, the file hierarchy rooted in
that directory is skipped.
.Pp
.It Fl r
Equivalent to
.Fl R .
.It Fl v
Cause
.Nm
to be verbose, showing files as they are processed.
.El
.Pp
The
.Nm
utility removes symbolic links, not the files referenced by the links.
.Pp
It is an error to attempt to remove the files
.Dq \&.
or
.Dq .. .
It is forbidden to remove the file
.Dq ..
merely to avoid the antisocial consequences of inadvertently
doing something like
.Dq Cm rm -r .* .
.Pp
The
.Nm
utility exits 0 if all of the named files or file hierarchies were removed,
or if the
.Fl f
option was specified and all of the existing files or file hierarchies were
removed.
If an error occurs,
.Nm
exits with a value \*(Gt0.
.Sh EXAMPLES
Recursively remove all files contained within the
.Pa foobar
directory hierarchy:
.Pp
.Dl $ rm -rf foobar
.Pp
.Nm
uses
.Xr getopt 3
standard argument processing.
Removing filenames that begin with a dash
.Pq e.g., Ar -file
in the current directory which might otherwise be taken as option flags to
.Nm
can be accomplished as follows:
.Pp
.Ic "rm -- -file"
.Pp
or
.Pp
.Ic "rm ./-file"
.Sh SEE ALSO
.Xr rmdir 1 ,
.\".Xr undelete 2 ,
.Xr unlink 2 ,
.Xr arc4random 3 ,
.Xr fts 3 ,
.Xr getopt 3 ,
.Xr symlink 7
.Sh STANDARDS
The
.Nm
utility differs from historical implementations in that the
.Fl f
option only masks attempts to remove non-existent files instead of
masking a large variety of errors.
.Pp
Also, historical
.Bx
implementations prompted on the standard output,
not the standard error output.
.Pp
The interactive mode used to be a
.Nm dsw
command, a carryover from the ancient past with an
amusing etymology.
.Pp
The
.Nm
utility is almost
.St -p1003.2
compatible, except that
.Tn POSIX
requires
.Nm
to act like
.Xr rmdir 1
when the
.Ar file
specified is a directory.
This implementation requires the
.Fl d
option if such behavior is desired.
This follows the historical
behavior of
.Nm
with respect to directories.
.Pp
The
.Fl v
option is an extension.
.Pp
The
.Fl P
option attempts to conform to U.S. DoD 5220-22.M, "National Industrial
Security Program Operating Manual" ("NISPOM") as updated by Change
2 and the July 23, 2003 "Clearing & Sanitization Matrix".
However, unlike earlier revisions of NISPOM, the 2003 matrix imposes
requirements which make it clear that the standard does not and
can not apply to the erasure of individual files, in particular
requirements relating to spare sector management for an entire
magnetic disk.
.Em Because these requirements are not met, the
.Fl P
.Em option does not conform to the standard .
.Sh HISTORY
An
.Nm
command appeared in
.At v1 .
.Pp
Modification of the
.Fl P
option to overwrite with random content and rename entries
to random filenames before removal appeared in
.Mx 10 .
.Sh BUGS
The
.Fl P
option assumes that the underlying file system is a fixed-block file
system.
FFS is a fixed-block file system, LFS is not.
In addition, only regular files are overwritten, other types of files
are not.
Recent research indicates that as many as 35 overwrite passes with
carefully chosen data patterns may be necessary to actually prevent
recovery of data from a magnetic disk.
Thus the
.Fl P
option is likely both insufficient for its design purpose and far
too costly for default operation.
However, it will at least prevent the recovery of data from FFS
volumes with
.Xr fsdb 8 .

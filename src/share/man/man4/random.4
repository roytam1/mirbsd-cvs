.\"	$MirOS: src/share/man/man4/random.4,v 1.6 2010/09/21 17:41:31 tg Exp $
.\"	$OpenBSD: random.4,v 1.18 2003/06/06 10:29:41 jmc Exp $
.\"
.\" Copyright (c) 1996, 1997 Michael Shalayeff
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: September 21 2010 $
.Dt RANDOM 4
.Os
.Sh NAME
.Nm random ,
.Nm srandom ,
.Nm urandom ,
.Nm prandom ,
.Nm wrandom ,
.Nm arandom
.Nd random data source devices
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <dev/rndvar.h>
.Fd #include <dev/rndioctl.h>
.Sh DESCRIPTION
The various
.Nm
devices produce random output data with different random qualities.
Entropy data is collected from system activity (like disk and
network device interrupts and such), and then run through various
hash or message digest functions to generate the output.
.Bl -hang -width /dev/srandomX
.It Pa /dev/random
This device is reserved for future support of hardware
random generators.
.It Pa /dev/srandom
Strong random data.
This device returns reliable random data.
If sufficient entropy is not currently available (i.e., the entropy
pool quality starts to run low), the driver pauses while more of
such data is collected.
The entropy pool data is converted into output data using MD5.
.It Pa /dev/urandom
Same as above, but does not guarantee the data to be strong.
The entropy pool data is converted into output data using MD5.
When the entropy pool quality runs low, the driver will continue
to output data.
.It Pa /dev/prandom
Simple pseudo-random generator.
.It Pa /dev/wrandom
This device is actually the same as
.Pa /dev/prandom ,
but can be written to by regular users, even if this interface is
simulated using pipes or other means on other operating systems where
.Pa /dev/prandom
can only be read from.
Its purpose is to allow anything from userspace or other not 100%
trustworthy sources to contribute even fractional bit amounts of
entropy into the kernel pool by hashing, collapsing, and rate-limiting.
.It Pa /dev/arandom
As required, entropy pool data re-seeds an ARC4 generator,
which then generates high-quality pseudo-random output data.
.Pp
The
.Xr arc4random 3
function in userland libraries seeds itself from this device,
providing a second level of ARC4 hashed data.
.El
.Pp
The
.Xr arc4random_pushb_fast 3
function, any write access to the
.Dv KERN_ARND
.Xr sysctl 3
and writes to
.Pa /dev/wrandom
feed data back to the kernel as described above and in
.Xr arc4random 9 .
.Sh FILES
.Bl -tag -width /dev/srandom -compact
.It Pa /dev/random
.It Pa /dev/srandom
.It Pa /dev/urandom
.It Pa /dev/prandom
.It Pa /dev/arandom
.El
.Sh SEE ALSO
.Xr arc4random 3 ,
.Xr md5 3 ,
.Xr random 3 ,
.Xr amdpm 4 ,
.Xr pchb 4 ,
.Xr md5 9 ,
.Xr random 9
.Sh HISTORY
A
.Nm
device first appeared in Linux operating system.
This is a cloned interface.
.Pp
ARC4 routines added by David Mazieres.
Rewritten by
.An Thorsten Glaser .
.Sh BUGS
No randomness testing suite provided.
The
.Xr ioctl 2
interface is not described in this manual page.

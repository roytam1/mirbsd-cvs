# $MirOS$

function uri_escape
{
	print -nr -- "$*" | hexdump -ve '1/1 "-%02x"' | sed s/-/%/g
}

stats_token=
integer stats_token_time=0
integer stats_report_time=0
[[ -s /var/db/bsdstats ]] && . /var/db/bsdstats
(( stats_report_time < 1136073623 )) && stats_report_time=0
(( stats_token_time < 1136073623 )) && stats_token_time=0
(( stats_token_time > 0 )) || stats_token=
print last report time: $stats_report_time
if [[ -z $stats_token || -z $stats_key ]]; then
	stats_report_time=0
	stats_key=$(uri_escape $(openssl rand -base64 16))
	sleep $((RANDOM % 120))
	res=$(ftp -V -o - http://bsdstats.org/scripts/getid.php?key=$stats_key 2>&-)
	stats_token=$(uri_escape $(eval $res; print -nr -- "$KEY"))
	stats_token_time=$(date +%s)
fi
integer now=$(date +%s)
if (( (now - 909) < stats_token_time )); then
	let sleeptime='909 - (now - stats_token_time)'
	print -n initial delay of $sleeptime seconds...
	sleep $sleeptime
	print finished sleeping
fi
if (( stats_report_time <= (now - (28 * 86400) + 7200) )); then
	integer ok=1
	uri="http://bsdstats.org/scripts/report_system.php?key=$stats_token&rel=$(uname -r)&arch=$(uname -m)&opsys=$(uname -s)$stats_sysadd"
	sleep $((RANDOM % 120))
	res=$(ftp -V -o - "$uri" 2>&-)
	print -r "system report '$uri' -> ${res:-ERROR}"
	[[ $res = OK ]] || ok=0
	cpu=$(sysctl -n hw.model)
	uri="http://bsdstats.org/scripts/report_cpu.php?key=$stats_token&vendor=$(print -r -- "$cpu" | cut -d' ' -f1)&cpu_type=$(uri_escape $(print -r -- "$cpu" | cut -d' ' -f2-))&cpus=1"
	sleep $((RANDOM % 120))
	res=$(ftp -V -o - "$uri" 2>&-)
	print -r "cpu report '$uri' -> ${res:-ERROR}"
	[[ $res = OK ]] || ok=0
	(( ok )) && stats_report_time=$(date +%s)
fi
install -c -o root -g staff -m 640 /dev/null /var/db/bsdstats.new
print "stats_key=$stats_key" >/var/db/bsdstats.new
print "stats_token=$stats_token" >>/var/db/bsdstats.new
print "stats_token_time=$stats_token_time" >>/var/db/bsdstats.new
print "stats_report_time=$stats_report_time" >>/var/db/bsdstats.new
mv -f /var/db/bsdstats.new /var/db/bsdstats

# $MirOS: src/share/misc/bsdstats,v 1.5 2006/10/03 00:04:34 tg Exp $
# $FreeBSD: /repoman/r/pcvs/ports/sysutils/bsdstats/files/300.statistics,v 1.30 2006/10/02 12:07:30 scrappy Exp $

print -u2 'Error:\tbsdstats.org code is currently disabled'
print -u2 '\tbecause they fubar'\''d something...'
exit 0

unset HTTP_USER_AGENT
rpt='http://rpt.bsdstats.org/scripts/'

# RFC 2396
uri_escape () {
    echo ${1+$@} | sed -e '
        s/%/%25/g
        s/;/%3b/g
        s,/,%2f,g
        s/?/%3f/g
        s/:/%3a/g
        s/@/%40/g
        s/&/%26/g
        s/=/%3d/g
        s/+/%2b/g
        s/\$/%24/g
        s/,/%2c/g
        s/ /%20/g
        '
}

stats_token=
integer stats_token_time=0
integer stats_report_time=0
[[ -s /var/db/bsdstats ]] && . /var/db/bsdstats
(( stats_report_time < 1136073623 )) && stats_report_time=0
(( stats_token_time < 1136073623 )) && stats_token_time=0
(( stats_token_time > 0 )) || stats_token=
print "last report time was: $stats_report_time ($(date -r $stats_report_time))"
if [[ -z $stats_token || -z $stats_key ]]; then
	stats_report_time=0
	stats_key=$(uri_escape $(openssl rand -base64 32))
	sleep $((RANDOM % 120))
	uri="${rpt}getid.php?key=$stats_key"
	res=$(ftp -V -o - "$uri" 2>&-)
	print -r "firstrun $uri -> ${res:-ERROR}"
	stats_token=$(uri_escape $(eval $res; print -nr -- "$KEY"))
	stats_token_time=$(date +%s)
fi
integer now=$(date +%s)
if (( (now - 909) < stats_token_time )); then
	let sleeptime='909 - (now - stats_token_time)'
	print -nr "initial delay of $sleeptime seconds... "
	sleep $sleeptime
	print finished sleeping
fi
if (( stats_report_time <= (now - (14 * 86400) + 7200) )); then
	integer ok=1
	if [[ -n $stats_sysadd ]]; then
		version=$(uname -r)$stats_sysadd
	else
		version=$(uname -l)
		version=${version#\#}
		version=${version%%-*}
		typeset -i10 pl=0x${version##*[a-z]}
		version=${version%%[a-z]*}
		if (( pl < 128 )); then
			version=$version-beta
		elif (( pl == 159 )); then
			version=$version-finite
		elif (( pl >= 160 )); then
			version=$version-current
		elif (( (pl % 2) == 1 )); then
			version=$version-stable
		else
			case $pl {
			(128)	version=${version}semel ;;
			(130)	version=${version}bis ;;
			(132)	version=${version}ter ;;
			(134)	version=${version}quater ;;
			(136)	version=${version}quinquies ;;
			(*)	version=${version}num.$((pl/2-63))ies ;;
			}
		fi
	fi
	uri="${rpt}enable_token.php?token=$stats_key&key=$stats_token"
	sleep $((RANDOM % 120))
	res=$(ftp -V -o - "$uri" 2>&-)
	print -r "init $uri -> ${res:-ERROR}"
	uri="${rpt}report_system.php?token=$stats_key&key=$stats_token&rel=$(uri_escape $version)&arch=$(uname -m)&opsys=$(uname -s)"
	sleep $((RANDOM % 120))
	res=$(ftp -V -o - "$uri" 2>&-)
	print -r "system report $uri -> ${res:-ERROR}"
	[[ $res = OK ]] || ok=0
	cpu=$(sysctl -n hw.model)
	uri="${rpt}report_cpu.php?token=$stats_key&key=$stats_token&vendor=$(print -r -- "$cpu" | cut -d' ' -f1)&cpu_type=$(uri_escape $(print -r -- "$cpu" | cut -d' ' -f2-))&cpus=1"
	sleep $((RANDOM % 120))
	res=$(ftp -V -o - "$uri" 2>&-)
	print -r "cpu report $uri -> ${res:-ERROR}"
	[[ $res = OK ]] || ok=0
	uri="${rpt}disable_token.php?token=$stats_key&key=$stats_token"
	sleep $((RANDOM % 120))
	res=$(ftp -V -o - "$uri" 2>&-)
	print -r "done $uri -> ${res:-ERROR}"
	(( ok )) && stats_report_time=$(date +%s)
fi
install -c -o root -g staff -m 640 /dev/null /var/db/bsdstats.new
print "stats_key=$stats_key" >/var/db/bsdstats.new
print "stats_token=$stats_token" >>/var/db/bsdstats.new
print "stats_token_time=$stats_token_time" >>/var/db/bsdstats.new
print "stats_report_time=$stats_report_time" >>/var/db/bsdstats.new
mv -f /var/db/bsdstats.new /var/db/bsdstats
print "done, used token from $stats_token_time ($(date -r $stats_token_time))"

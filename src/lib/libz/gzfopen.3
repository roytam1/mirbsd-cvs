.\" $MirOS: src/lib/libz/gzfopen.3,v 1.1 2006/01/24 13:04:10 tg Exp $
.\"-
.\" Copyright (c) 2006
.\"	Thorsten Glaser <tg@mirbsd.de>
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Licensee is hereby permitted to deal in this work without restric-
.\" tion, including unlimited rights to use, publicly perform, modify,
.\" merge, distribute, sell, give away or sublicence, provided all co-
.\" pyright notices above, these terms and the disclaimer are retained
.\" in all redistributions or reproduced in accompanying documentation
.\" or other materials provided with binary redistributions.
.\"
.\" All advertising materials mentioning features or use of this soft-
.\" ware must display the following acknowledgement:
.\"	This product includes material provided by Thorsten Glaser.
.\"
.\" Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
.\" express, or implied, to the maximum extent permitted by applicable
.\" law, without malicious intent or gross negligence; in no event may
.\" licensor, an author or contributor be held liable for any indirect
.\" or other damage, or direct damage except proven a consequence of a
.\" direct error of said person and intended use of this work, loss or
.\" other issues arising in any way out of its use, even if advised of
.\" the possibility of such damage or existence of a nontrivial bug.
.\"-
.Dd January 24, 2006
.Dt GZFOPEN 3
.Os
.Sh NAME
.Nm gzfopen ,
.Nm gzfdopen
.Nd deflated stream open functions
.Sh SYNOPSIS
.Fd #include <zlib.h>
.Ft FILE *
.Fn gzfopen "const char *path" "const char *mode"
.Ft FILE *
.Fn gzfdopen "int filedes" "const char *mode"
.Sh DESCRIPTION
The
.Fn gzfopen
function opens the file whose name is the string pointed to by
.Fa path
and associates a zlib stream with it.
.Pp
The
.Fn gzfdopen
function associates a zlib stream with the existing file descriptor
.Fa filedes .
The
.Fa mode
of the stream must be compatible with the mode of the file descriptor.
The stream is positioned at the file offset of the file descriptor,
which must point to the first byte of the deflate magic in read mode.
If
.Fn gzfdopen
fails, the file descriptor
.Fa filedes
is not affected in any way.
If
.Fn gzfdopen
succeeds, any subsequential
.Fn fclose
will also close and invalidate
.Fa filedes .
.Pp
The argument
.Fa mode
points to a string beginning with one of the following
characters (additional characters may follow):
.Bl -tag -width indent
.It Dq Li r
Open file for reading.
.It Dq Li w
Truncate file to zero length or create text file for writing.
.It Dq Li a
Open for writing.
The file is created if it does not exist.
.El
.Pp
The characters which can follow are the same as for the
.Fn gzopen
function:
.Bl -tag -width indent
.It Dq Li b
Binary mode (meaningless under
.Ux ) .
.It Dq Li f
Set the zlib stream strategy to filtered.
.It Dq Li h
Set the zlib stream strategy to huffman-only.
.It Dq Li R
Set the zlib stream to use RLE compression instead of deflate.
.It Dq Li 0..9
Set the compression level of the zlib stream used for writing.
.El
.Sh RETURN VALUES
Upon successful completion,
.Fn gzfopen
and
.Fn gzfdopen
return a
.Vt FILE
pointer.
Otherwise,
.Dv NULL
is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
For both the
.Fn gzfopen
and
.Fn gzfdopen
functions, as well as stream operations (read,
write, seek, close), the code tries to meaningful
map the zlib error codes to errno values.
An unknown error is mapped to
.Er ENOCOFFEE .
.Pp
.Fn gzfopen
and
.Fn gzfdopen
can return any error code which the underlying
.Fn funopen
function returns, and fail for additional reasons.
.Sh SEE ALSO
.Xr close 2 ,
.Xr funopen 3 ,
.Xr gzclose 3 ,
.Xr gzdopen 3 ,
.Xr gzopen 3 ,
.Xr gzread 3 ,
.Xr gzseek 3 ,
.Xr gzwrite 3 ,
.Xr lseek 2 ,
.Xr open 2 ,
.Xr read 2 ,
.Xr write 2
.Pp
The description of
.Fn deflateInit2
inside
.Xr compress 3 .
.Sh HISTORY
.Nm gzfopen
and
.Nm gzfdopen
first appeared in
.Mx 9 .
.Sh AUTHORS
The code and manual page have been written by
.An Thorsten Glaser Aq tg@mirbsd.de .
.Sh CAVEATS
Attempt to
.Fn lseek
on the stream is subject to the same limitations as
.Fn gzseek
is, and discouraged.

# $MirOS$
#-
# This is a version script for the GNU linker ld(1) to assign
# global visibility only to specific exported symbols. Symbol
# versioning is not done.
# The weak symbols {,lib}iconv{,_open,_close} alias the func-
# tions _iconvP,_open,_close} which are not set to visible in
# order to avoid a namespace conflict. The weak functions are
# still working properly though.
# The __iconv{,_{get,free}_list} API is, however, exported in
# the hope it will not clash with any future version of other
# iconv libraries. GNU libiconv 1.9.1 doesn't.

{
  # First, define all global symbols
  global:
	# iconv(3) API, weak symbols
	iconv;
	iconv_open;
	iconv_close;

	# GNU libiconv compatible API, weak symbols
	libiconv;
	libiconv_open;
	libiconv_close;

	# NetBSD(R) non-portable API
	__iconv;
	__iconv_get_list;
	__iconv_free_list;

	# Internal symbols (citrus namespace) for shared objects
	_citrus_bcs_skip_nonws;
	_citrus_bcs_skip_ws;
	_citrus_bcs_skip_ws_len;
	_citrus_bcs_strcasecmp;
	_citrus_bcs_strncasecmp;
	_citrus_csmapper_open;
	_citrus_db_close;
	_citrus_db_hash_std;
	_citrus_db_lookup_by_string;
	_citrus_db_lookup_string_by_string;
	_citrus_db_open;
	_citrus_esdb_close;
	_citrus_esdb_open;
	_citrus_map_file;
	_citrus_mapper_close;
	_citrus_mapper_open;
	_citrus_memory_stream_chr;
	_citrus_memory_stream_getln;
	_citrus_memory_stream_skip_ws;
	_citrus_stdenc_close;
	_citrus_stdenc_open;
	_citrus_unmap_file;

  # Now, define everything else as local
  local:
	*;
};

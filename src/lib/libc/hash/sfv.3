.\" $MirOS: src/lib/libc/hash/sfv.3,v 1.2 2007/05/07 16:15:57 tg Exp $
.\"-
.\" Copyright (c) 2007
.\"	Thorsten Glaser <tg@mirbsd.de>
.\"
.\" Provided that these terms and disclaimer and all copyright notices
.\" are retained or reproduced in an accompanying document, permission
.\" is granted to deal in this work without restriction, including un-
.\" limited rights to use, publicly perform, distribute, sell, modify,
.\" merge, give away, or sublicence.
.\"
.\" This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
.\" the utmost extent permitted by applicable law, neither express nor
.\" implied; without malicious intent or gross negligence. In no event
.\" may a licensor, author or contributor be held liable for indirect,
.\" direct, other damage, loss, or other issues arising in any way out
.\" of dealing in the work, even if advised of the possibility of such
.\" damage or existence of a defect, except proven that it results out
.\" of said person's immediate fault when using the work as intended.
.\"-
.Dd May 7, 2007
.Dt SFV 3
.Os
.Sh NAME
.Nm SFVInit ,
.Nm SFVUpdate ,
.Nm SFVPad ,
.Nm SFVFinal ,
.Nm SFVEnd ,
.Nm SFVFile ,
.Nm SFVFileChunk ,
.Nm SFVData
.Nd calculate the "SFV" checksum
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sfv.h>
.Ft void
.Fn SFVInit "SFV_CTX *ctx"
.Ft void
.Fn SFVUpdate "SFV_CTX *ctx" "const uint8_t *data" "size_t noctets"
.Ft void
.Fn SFVPad "SFV_CTX *ctx"
.Ft void
.Fn SFVFinal "uint8_t digest[SFV_DIGEST_LENGTH]" "SFV_CTX *ctx"
.Ft "char *"
.Fn SFVEnd "SFV_CTX *ctx" "char *digest"
.Ft "char *"
.Fn SFVFile "const char *filename" "char *digest"
.Ft "char *"
.Fn SFVFileChunk "const char *filename" "char *digest" "off_t offset" "off_t length"
.Ft "char *"
.Fn SFVData "const uint8_t *data" "size_t len" "char *digest"
.Sh DESCRIPTION
The SFV functions implement the 32-bit SFV cyclic redundancy checksum.
They share a similar API to the
.Xr md5 3
interface.
.\"XXX algorithm description - take from cksum(1) or so
.Pp
The
.Fn SFVInit
function initialises a SFV_CTX context for use with
.Fn SFVUpdate
and
.Fn SFVFinal .
The
.Fn SFVUpdate
function adds (condenses)
.Ar data
of length
.Ar noctets
to the context.
.Fn SFVFinal
is called after processing and stores a message digest in the
.Ar digest
parameter.
.Pp
For a description of the other functions, please refer e\.g\. the
.Xr rmd160 3
manual page.
.Sh EXAMPLES
The follow code fragment will calculate the checksum for
the string
.Dq abc ,
which is
.Dq 352441C2 .
.Bd -literal -offset indent
SFV_CTX context;
uint8_t result[SFV_DIGEST_LENGTH];
const char buf[] = "abc";
size_t n = strlen(buf);

SFVInit(&context);
SFVUpdate(&context, buf, n);
SFVFinal(result, &context);

/* print the digest as one long sedecimal value */
printf("0x");
for (n = 0; n < SFV_DIGEST_LENGTH; n++)
	printf("%02X", result[n]);
putchar('\en');
.Ed
.Pp
Alternately, the helper functions could be used in the following way:
.Bd -literal -offset indent
SFV_CTX context;
uint8_t output[SFV_DIGEST_STRING_LENGTH];
const char buf[] = "abc";

printf("0x%s\en", SFVData(buf, strlen(buf), output));
.Ed
.Sh SEE ALSO
.Xr cksum 1 ,
.Xr adler32 3 ,
.Xr md4 3 ,
.Xr md5 3 ,
.Xr rmd160 3 ,
.Xr sha1 3 ,
.Xr sha2 3 ,
.Xr suma 3 ,
.Xr tiger 3 ,
.Xr whirlpool 3
.Pp
.Pa http://www.fodder.org/cksfv/
.Sh HISTORY
The SFV functions appeared in
.Mx 10 .
.Sh AUTHORS
This implementation of SFV was written by
.An Thorsten Glaser Aq tg@mirbsd.de
and is compatible with Bryan Call's cksfv.
.Pp
The
.Fn SFVEnd ,
.Fn SFVFile ,
.Fn SFVFileChunk ,
and
.Fn SFVData
helper functions are derived from code written by Poul-Henning Kamp.

# $MirOS: gcc/gcc/Makefile.bsd-wrapper,v 1.9 2005/03/29 22:31:19 tg Exp $

.include <bsd.own.mk>
.include "${GNUSYSTEM_AUX_DIR}/locations.mk"
.include "../Makefile.inc"

GCCVERSION=	3.4.4
LIBGCC_MAJOR=	1
CPPFLAGS+=	-I${GNU_LIBIBERTY_INC} -DMIRBSD_NATIVE

MAN=		doc/cpp.1 doc/mgcc.1 doc/gcov.1
INFO=		doc/cpp.info doc/cppinternals.info doc/gcc.info doc/gccint.info

.ifndef NO_ADA
INFO+=		doc/gnat-style.info doc/gnat_rm.info doc/gnat_ugn_unw.info
.endif

.ifndef NO_CXX
MLINKS=		mgcc.1 g++.1
.endif

.ifndef NO_JAVA
MAN+=		doc/gcj.1 doc/gcjh.1 doc/gij.1 doc/jcf-dump.1 \
		doc/jv-convert.1 doc/jv-scan.1 doc/rmic.1 doc/rmiregistry.1
INFO+=		doc/gcj.info
.endif

ALL_TARGET?=
INST_TARGET=	INSTALL_TARGET='install-common $$(INSTALL_HEADERS) \
		$$(INSTALL_LIBGCC) lang.install-normal' install
FSFMAKE=	ulimit -dS 245760; PATH=${FSFOBJDIR}/lbin:$$PATH \
		${XVARS} ${GMAKE} ${FSFMARGS} ${XARGS}
FSFMARGS+=	MAKE=${GMAKE}

__LANGS=	--enable-languages=c
.ifndef NO_ADA
__LANGS:=	${__LANGS},ada
.endif
.ifndef NO_CXX
__LANGS:=	${__LANGS},c++
.endif
.ifndef NO_OBJC
__LANGS:=	${__LANGS},objc
.endif
.ifndef NO_JAVA
__LANGS:=	${__LANGS},java
.endif
.ifndef NO_PASCAL
__LANGS:=	${__LANGS},pascal
.endif

BOOT_CFLAGS?=	${FSFCFLAGS}
XARGS+=		BISON=yacc LIBIBERTY_HDRS="${GNU_LIBIBERTY_INC}" \
		BUILD_LIBIBERTY="-liberty" LIBIBERTY="-liberty" \
		SUB_LIBERTY="-liberty" STMP_FIXINC=stmp-fixinc-fake \
		extrapartsdir='/usr/lib' BOOT_CFLAGS="${BOOT_CFLAGS}" \
		CFLAGS="${FSFCFLAGS}" GNATLIBCFLAGS="${BOOT_CFLAGS}" \
		HOST_CC="${HOSTCC}" HOST_CFLAGS="${HOSTCFLAGS}" \
		VALGRIND_DRIVER_DEFINES="-DNO_SHARED_LIBGCC_MULTILIB" \
		LIBGCC2_DEBUG_CFLAGS="${FSFCFLAGS}" MAKEINFOFLAGS=--no-split

CFVARS+=	gcc_cv_as_ix86_gotoff_in_data=no

CFARGS+=	--prefix=/usr --libexecdir=/usr/lib --infodir=/usr/share/info \
		--mandir=/usr/share/man --disable-generated-files-in-srcdir \
		--disable-threads --enable-objc-gc --enable-shared \
		--enable-stack-protector=yes --disable-sjlj-exceptions \
		--with-local-prefix=/usr --disable-nls --with-system-zlib \
		--with-gxx-include-dir=/usr/include/gxx ${__LANGS}

CLEANFILES+=	gcclink ${MAN} ${INFO} doc/fsf-funding.7 doc/gccinstall.info \
		doc/gfdl.7 doc/gnat_ugn_unw.texi doc/gpl.7 doc/gcc.1 \
		gcov-iov.h gengtype-lex.c gengtype-yacc.c gengtype-yacc.h \
		gpr2make gprcmd gpc-run p/handle-opts.c

# For Ada (native/host gnatmake)
config.status: gcclink

gcclink:
.if ${CC} != "gcc"
	test -d lbin || mkdir lbin
	-rm -f lbin/gcc
	ln -s $$(whence -p ${CC}) lbin/gcc
.endif
	touch $@

tconfig.h:	prereq
	cd ${FSFOBJDIR} && ${FSFMAKE} $@

tree-check.h:	prereq
	cd ${FSFOBJDIR} && ${FSFMAKE} $@

all-quick:
	cd ${FSFOBJDIR} && ${FSFMAKE} ${ALL_TARGET}

pre-install:
	mkdir -p ${DESTDIR}/usr/lib/gcc/${GCCTARGET}/${GCCVERSION}

${MAN}: do-build

doc/gcc.1: do-build

doc/mgcc.1: doc/gcc.1
	cp doc/gcc.1 doc/mgcc.1

post-install:
	${INSTALL} ${INSTALL_COPY} -o ${LIBOWN} -g ${LIBGRP} -m ${LIBMODE} \
	    libgcc_s_fpic.so.${LIBGCC_MAJOR} \
	    ${DESTDIR}/usr/lib/libgcc_s.so.${LIBGCC_MAJOR}.0
.for _i in ${INFO}
	${INSTALL} ${INSTALL_COPY} -o ${MANOWN} -g ${MANGRP} -m ${MANMODE} \
	    ${_i} ${DESTDIR}/usr/share/info/
.endfor
	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -m ${BINMODE} \
	    -o ${BINOWN} -g ${BINGRP} cpp ${DESTDIR}/usr/bin/mcpp
	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -m ${BINMODE} \
	    -o ${BINOWN} -g ${BINGRP} xgcc ${DESTDIR}/usr/bin/mgcc
	chown -R ${BINOWN}:${BINGRP} \
	    ${DESTDIR}/usr/lib/gcc/${GCCTARGET}/${GCCVERSION}

pre-clean:
	-rm -rf ada lbin

.PHONY: all-quick

.include <bsd.cfwrap.mk>

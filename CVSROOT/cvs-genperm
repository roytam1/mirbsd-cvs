#!/bin/mksh
# $MirOS: CVSROOT/cvs-genperm,v 1.12 2005/12/15 01:55:52 tg Exp $
#-
# Copyright (c) 2003, 2004, 2005
#	Thorsten "mirabile" Glaser <tg@mirbsd.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a nontrivial bug.
#-
# This script fixes up permissions in a CVS Repository mirror of the
# MirOS Project's CVSROOT (or the MirBSD[tm] CVS Rep, for which this
# script was originally designed).

function fixperm
{
	m="$1"; shift
	for pname in "$@"; do
		[[ -e $pname ]] && chmod "$m" "$pname"
	done
}

if [[ $(id -u 2>&1) != 0 ]]; then
	print -ru2 "Error: $0 must be run as root!"
	exit 1
fi

WD="$(pwd)"

if [[ $1 = -R ]]; then
	fr=/CVSROOT
	shift
else
	fr=
fi

CVSROOT="${1%%+(/)}"
if [[ -z $CVSROOT ]]; then
	print -ru2 "Error: \$CVSROOT not given!"
	print -ru2 "Syntax: $0 /cvs"
	exit 1
fi
CVSROOT=$(readlink -fn $CVSROOT)
if [[ ! -d $CVSROOT ]]; then
	print -ru2 "Error: \$CVSROOT (${CVSROOT}) does not exist!"
	print -ru2 "Syntax: $0 /cvs"
	exit 1
fi
cd "$CVSROOT"
N=$(mktemp "${CVSROOT}/genperm.log.XXXXXXXXXX") || {
	print -ru2 "Error: could not make temporary file!"
	exit 1
}

print -- "------------------------------------------------------------"
date
print -r "Starting fixup of permissions on \$CVSROOT=${CVSROOT}"
print -r "Logging to file '${N}'"
print -- "------------------------------------------------------------"

touch CVSROOT/{history,val-tags} Logs/{ChangeLog,idcache}
mkdir -p .tmp

let cnt=42
find "$CVSROOT$fr" | while IFS= read pname; do
	name="${pname#${CVSROOT}/}"
	[[ -z $name || $name = @(.|..|.tmp) ]] && continue
	if (( cnt > 0 )); then
		let cnt--
	else
		print -r "  $name"
		let cnt=42
	fi
	if [[ $name = @(|CVSROOT/).* || $name = .tmp/* ]]; then
		print -r "Found invalid '$name'"
		rm -rf "$pname"
	elif [[ $name = +([-_+,./:=@0-9A-Za-z]) ]]; then
		M=0
		if [[ -d $pname ]]; then
			M=775
		elif [[ -f $pname ]]; then
			M=444
		fi
		if [[ $M = 0 ]]; then
			print -r "Found non-file/dir '$name'"
			rm -rf "$pname"
		else
			chmod $M "$pname"
			if [[ $name = @(contrib/gnu|gcc|src/gnu)@(|/*) ]]; then
				M=miros-cvsgnu
			elif [[ $name = @(contrib|src|X11)@(|/*) ]]; then
				M=miros-cvssrc
			elif [[ $name = @(ports)@(|/*) ]]; then
				M=mirports-cvs
			elif [[ $name = @(www)@(|/*) ]]; then
				M=miros-cvswww
			elif [[ $name = @(CVSROOT|Logs)@(|/*) ]]; then
				M=miros-cvsadm
			else
				M=miros-cvsall
			fi
			chown "0:$M" "$pname"
		fi
	else
		print -r "Found weird '$name'"
		rm -rf "$pname"
	fi
done 2>&1 | tee -i "$N"

{
	print "fixing special files..."
	fixperm 664 CVSROOT/{modules.db,history} Logs/{ChangeLog,idcache}
	fixperm 666 CVSROOT/val-tags{,.db}
	fixperm 555 CVSROOT/{genlog,mklogci,mklogtag,tracker}{,\,v} \
	    CVSROOT/up www/*.cgi,v
	fixperm 1775 .tmp
	chgrp miros-cvsall CVSROOT CVSROOT/{modules.db,history} \
	    Logs Logs/{ChangeLog,idcache}
	chgrp miros-cvsadm README
} 2>&1 | tee -ai "$N"

cd "$WD"
print -- "------------------------------------------------------------"
print -r "Fixup of permissions on \$CVSROOT='${CVSROOT}' finished."
print -r "Log is at $N"
date
print -- "------------------------------------------------------------"
